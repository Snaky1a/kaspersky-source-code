#if !defined(AFX_REPORTVIEWCTRL_H__B7B9C994_927D_447A_9599_6DB0F2AEB006__INCLUDED_)
#define AFX_REPORTVIEWCTRL_H__B7B9C994_927D_447A_9599_6DB0F2AEB006__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CReportViewCtrl wrapper class

class CReportViewCtrl : public CWnd
{
protected:
	DECLARE_DYNCREATE(CReportViewCtrl)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xdd54d567, 0x2fca, 0x11d3, { 0x96, 0xb0, 0x0, 0x10, 0x4b, 0x5b, 0x66, 0xaa } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	short GetAppearance();
	void SetAppearance(short);
	short GetBorderStyle();
	void SetBorderStyle(short);
	BOOL GetAutoTracking();
	void SetAutoTracking(BOOL);
	BOOL GetUseCheckSemantic();
	void SetUseCheckSemantic(BOOL);
	BOOL GetUseCortegeImages();
	void SetUseCortegeImages(BOOL);
	BOOL GetLargeDataProcessing();
	void SetLargeDataProcessing(BOOL);
	BOOL GetSortByColumns();
	void SetSortByColumns(BOOL);
	BOOL GetExternalParseCortege();
	void SetExternalParseCortege(BOOL);
	long GetItemsViewLimit();
	void SetItemsViewLimit(long);
	BOOL GetFullRowSelect();
	void SetFullRowSelect(BOOL);
	BOOL GetEnableChangeItemsState();
	void SetEnableChangeItemsState(BOOL);
	long GetRefreshingTimeout();
	void SetRefreshingTimeout(long);
	BOOL GetViewLastSession();
	void SetViewLastSession(BOOL);
	BOOL GetShowGridLines();
	void SetShowGridLines(BOOL);
	BOOL GetShowSelectionAlways();
	void SetShowSelectionAlways(BOOL);
	BOOL GetProportionalHeaderResize();
	void SetProportionalHeaderResize(BOOL);
	BOOL GetShowHeaderOnEmptyList();
	void SetShowHeaderOnEmptyList(BOOL);
	BOOL GetExternalReadingReport();
	void SetExternalReadingReport(BOOL);
	BOOL GetSmartRefreshingTimeout();
	void SetSmartRefreshingTimeout(BOOL);
	BOOL GetProgressNotify();
	void SetProgressNotify(BOOL);
	BOOL GetAddToListImmediatelly();
	void SetAddToListImmediatelly(BOOL);
	BOOL GetExternalSortingComparison();
	void SetExternalSortingComparison(BOOL);

// Operations
public:
	SCODE ClearReportView();
	SCODE SetReportCortege(LPCTSTR pCortegeStr);
	SCODE AcceptReportFile(LPCTSTR pFileName);
	SCODE SetReportItem(long hItemData);
	SCODE GetSelectedIndex(long* pnSelectedInd);
	SCODE UpdateHeaderText();
	SCODE GetSessionHeadlines(long* phHeadlinesData, LPCTSTR pFileName);
	SCODE SetViewedSessionNumber(long dwNumber);
	SCODE FindFirstItem(LPCTSTR pszFindContext, long dwFlags);
	SCODE FindNextItem();
	SCODE GetHeaderColumnWidths(long* phWidthsData);
	SCODE Activate();
	SCODE GetLastFindResult(BOOL* pbResult);
	SCODE GetCortege(long nCortegeIndex, long* phCortegeData);
	SCODE GetHeaderCortege(long* phCortegeData);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_REPORTVIEWCTRL_H__B7B9C994_927D_447A_9599_6DB0F2AEB006__INCLUDED_)
