/* Generated by Together */

#ifndef _AG_HTTPREQUEST_H_
#define _AG_HTTPREQUEST_H_

#include <boost/shared_ptr.hpp>
#include "InternetHandle.h"

namespace OnlineActivation
{
class InternetObserver;
class HttpResponse;

class HttpRequest
{
public:
	enum VerbType
	{
		HTTP_VERB_GET	= 1,
		HTTP_VERB_POST,
		HTTP_VERB_PUT,
	};

	HttpRequest
	(
		InternetHandle& hConnection,
		VerbType nVerb,
		const char* lpszResource,
		DWORD dwFlags
	);

	~HttpRequest();

	boost::shared_ptr<HttpResponse> Send
	(
		const char* szHeaders, 
		size_t nHeadersLength, 
		const void* pData, 
		size_t nDataLength
	);

	void SetProxyAuth(const char* szUserName, const char* szPassword);

	void SetServerAuth(const char* szUserName, const char* szPassword);

	void SetObserver(InternetObserver* pObserver);

	void Abort();

private:
	static void CALLBACK StatusCallback
	(
		HINTERNET hInternet,
		DWORD_PTR dwContext,
		DWORD dwInternetStatus,
		LPVOID lpvStatusInformation,
		DWORD dwStatusInformationLength
	);

private:
	/**
	 * @clientRole observed by 
	 */
	InternetObserver*	m_pObserver;
	InternetHandle		m_hRequest;

	/** @link dependency 
	 * @stereotype instantiate*/
	/*# HttpResponse lnkHttpResponse; */
};

} // namespace OnlineActivation

#endif //_AG_HTTPREQUEST_H_
