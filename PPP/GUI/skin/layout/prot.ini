[MainWindow.Protection]
@           = $TaskTab ext(1)
WorkArea    = [MainWindow.Protection_WorkArea]
Home        = [TaskPageBtn]
Events      = [TaskPageBtn] a(at)
Threats     = [TaskPageBtn] a(at) v("Statistics")

[MainWindow.Protection_WorkArea]
@       = $TaskWorkArea
Home    = [ProfileHome] $TaskPanel subst(Tasks(subst(Control(sz(a,a)) Body([MainWindow.Protection.Tasks]))) Group1(alias(productstatus) prm(s_ProductStateList) subst(Control(sz(a,a)) Header(text(s_ProdState(ProdStateId)) f(s_MainProtStatusFont(s_ProdStateSeverity(ProdStateId)))) Body([MainWindow.Protection_HomeLeft_Status_Body]))) Group2(extprm(1) sz(p,p) subst(Control(sz(a,a)) Header() Body([MainWindow.Protection_CommonStatistics]))))
Events  = [Product_Events] $TaskPanel subst(Report(prm(#dbRTP)) views([MainWindow.Protection_Filters]))
Threats = [Product_Threats] $TaskPanel

[MainWindow.Protection_Filters]
@
AllItems    = v("12000100042d;Ti14100000a10000000000000000;Ta1000000066;Ve1000000097;De000000001e;De100000001e;De100000001f;De100000001e;Ex100000001e;Ap00000100a8;Pa0000000024;Na0000000021;PI0000000045;Co000000001e;Ac100000006c;Ob100000012b;Ty100000003c;Pa2000000068;Na2000000087;Re2000000050;")
ByTask      = v("1200010003a7;Ti14100000ae0000000000000000;Ve10000000af;De0000000023;De1000000023;De1000000021;De1000000024;Ex1000000024;Ap00000100a8;Pa000000002a;Na000000002a;PI000000002a;Co000000002a;Ta140201005c;Ac100000006c;Ob10000000e6;Ty100000003c;Pa2000000055;Na2000000055;Re2000000050;") at(default)
ByApp       = v("120001000383;Ti14100000ae0000000000000000;Ap04020100a8;Pa000000002a;Na000000002a;PI000000002a;Co000000002a;Ta100001007a;Ve1000000096;De000000001e;De100000001e;De100000001e;De100000001e;Ex100000001e;Ac100000007b;Ob10000000fa;Ty100000003c;Pa200000005f;Na200000005f;Re2000000050;")

[MainWindow.Protection_HomeLeft_Status_Body]
@           = ext(1) sz(p,p) mg(20,20)
Description = sz(p,a) a(cc) xy(,40) text(switch(ProdStateId,"ProdState_Description"))
Skip        = [ActionButton] a(lb) onclick(ProdStateId != #ProdStateSomeSkipped ? hidestatus() : restorestatuses()) visible(ProdStateId) sz(p,30) rs(0,0) subst(Name(text(ProdStateId != #ProdStateSomeSkipped ? $LinkSkip : $LinkSomeSkipped)))
Link1       = [ActionButton] a(lp) onclick(s_ProductLinkClick(ProdStateId)) visible(ProdStateId && ProdStateId != #ProdStateSomeSkipped) sz(p,30) rs(0,0) subst(Name(text(s_ProductLinkText(ProdStateId))))

[MainWindow.Protection.ThreatInfo_Normal]
@               = sz(p,a) visible(ProdStateId == #ProdStateAllOk)
Scanned         = [Value]  subst(Name() Val(text(AVService.NumGenericScaned)))
Threats         = [Value] a(la) xy(,7) subst(Name() Val(text(AVService.NumThreats)))
AttacksBlocked  = [Value] a(la) xy(,7) subst(Name() Val(text(ids.AttacksDetected)))

[MainWindow.Protection.UpdateInfo_Normal]
@                       = sz(p,a) visible(ProdStateId == #ProdStateAllOk)
AvBaseSignatures        = [Value]  subst(Name() Val(text(AVService.NumRecords)))
AvBaseSignaturesDate    = [Value] xy(,7) a(la) subst(Name() Val(text(datetime(AVService.BasesDate))))

[MainWindow.Protection.ProductInfo_Normal]
@               = sz(p,a) visible(ProdStateId == #ProdStateAllOk)
Version         = [Value]  subst(Name() Val(text(ProductVersion)))
VersionHotfix   = [Value] visible(ProductHotfix) xy(,7) a(la) subst(Name() Val(text(ProductHotfix)))
LicenceOwner    = [Value] visible(LicInfo.KeyInfo.CustomerInfo) xy(,7) a(la) subst(Name() Val(text(LicInfo.KeyInfo.CustomerInfo)))
LicenceNumber   = [Value] xy(,7) a(la) subst(Name() Val(text(f_KeySerNum(LicInfo.KeyInfo.KeySerNum))))
LicenceType     = [Value] xy(,7) a(la) subst(Name() Val(text(s_LicKeyType(LicInfo.KeyInfo.KeyType))))
ExpirationDate  = [Value] xy(,7) a(la) subst(Name() Val(text(date(LicInfo.KeyExpirationDate))))
OSVersion       = [Value] xy(,7) a(la) subst(Name() Val(text(OSVersion) sz(p,a) xy(,,100)))

[MainWindow.Protection.SysPerf.Header]
@               = at(singleline)
button_plus     = t(button) at(fixstyle) sz(23,23) xy(,-1) a(rc) text("+") f("ScanStatus") onclick(ctl.Chart.zoom(1)) enable(ctl.Chart.isCanZoom(1))
button_minus    = t(button) at(fixstyle) sz(23,23) a(ps) text("-") f("ScanStatus") onclick(ctl.Chart.zoom(-1)) enable(ctl.Chart.isCanZoom(-1))

[MainWindow.Protection.Tasks]
@                           = sz(p,p) ext(1)
SysSecurityWizard           = [MainWindow.Protection.Tasks_SysSecurityWizard]
AvzSecurityTweakerWizard    = [MainWindow.Protection.Tasks_AvzSecurityTweakerWizard]

[MainWindow.Protection.Tasks_SysSecurityWizard]
@       = a(la) sz(p,a) xy(,10,,21)
Icon    = $Link sz(90,a) i("TaskSecurityTweak") ia(ct) onclick(f_AvzWizard("AvzSecurityAnalyzerWizard"))
Desc    = a(ls) xy(110) sz(a,a) at(dynshow)

[MainWindow.Protection.Tasks_AvzSecurityTweakerWizard]
@       = a(la) sz(p,a) xy(,,,21)
Icon    = $Link sz(90,a) i("TaskIeTweak") ia(ct) onclick(f_AvzWizard("AvzSecurityTweakerWizard"))
Desc    = a(ls) xy(110) sz(a,a) at(dynshow)

;-------------------------------- AvzTroubleshootWizard --------------------------------

[AvzWizard_Progress]
@           = sz(p,p) ext(1)
Progress    = t(progress) a(lb) sz(p,20) v(Completion)
;Label       = a(la) xy(,7)
Events      = [AvzWizard_Progress_Events]

[AvzWizard_Progress_Events]
@       = $ListTransp a(lt) sz(p,p) xy(,,,40) at(noheader) alias(vector.report.Avz)
Event   = sz(p) rs(100) text(ObjectName)

[AvzWizard_ProgressVul]
@           = sz(p,p) ext(1) alias(taskview) ns(Scan_Vulnerabilities)
Progress    = t(progress) a(lt) sz(p,20) v(Completion)
CurObject   = [LValue] xy(,7) subst(Name() Val(t(edit) at(readonly,singleline,compresspath,noborder) xy(100) text(CurObject)))

[AvzTroubleshootWizard]
@ = [WizardTpl] oninit(g_AvzSingleton = 1) onclose(setstate(#TASK_REQUEST_STOP); g_AvzSingleton = 0; 1) subst(Pages([AvzTroubleshootWizardPages]) Footer(subst(Back(use(0))))) alias(avzwizard) ns(AVZ_RunScript) ext(1)

[AvzTroubleshootWizardPages]
@           = sz(p,p) ext(1)
Welcome     = [WizardPage] subst(Name() Descr() Body([AvzTroubleshootWizard_Welcome]))
Search      = [WizardPage] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 1; savesettings(); setstate(#TASK_REQUEST_RUN))
Problems    = [WizardPage] subst(Name() Descr() Body([AvzTroubleshootWizard_Problems])) visible(Troubles.size())
Fix         = [WizardPage] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 2; savesettings(); setstate(#TASK_REQUEST_RUN)) visible(Troubles.size())
Finish      = [WizardPage] subst(Name() Descr() Body([AvzTroubleshootWizard_Finish]))

[AvzTroubleshootWizard_Welcome]
@       = sz(p,p) ext(1)
Start   = [WizardButton] a(lc) onclick(wizNext()) subst(Name() Descr())

[AvzTroubleshootWizard_Problems]
@       = sz(p,p) ext(1)
List    = [AvzTroubleshootWizard_Problems_List]
Fix     = [WizardButton] onclick(wizNext()) enable(find(Troubles, "Enabled")) subst(Name() Descr())

[AvzTroubleshootWizard_Problems_List]
@       = $ListTransp sz(p,185) alias(vector) v(Troubles) at(noheader)
Trouble = sz(p) rs(130) at(checked,fixedpos) text(Description) v(Enabled) group(AvzSeverity,Result,default) sort(index,sortup)
;SideEff = sz(p) rs(33) text(switch(Name, "AvzTroubleshootWizard.ScriptSideEffects"))

[AvzTroubleshootWizard_Finish]
@       = a(lc) sz(p,a) ext(1)
Reboot  = [WizardButton] onclick(close(); restartOs()) subst(Name() Descr()) visible(NeedReboot)
Exit    = [WizardButton] onclick(close()) subst(Name() Descr())

;-------------------------------- AvzPrivacyCleanerWizard --------------------------------

[AvzPrivacyCleanerWizard]
@ = [WizardTpl] oninit(g_AvzSingleton = 1) onclose(setstate(#TASK_REQUEST_STOP); g_AvzSingleton = 0; 1) subst(Pages([AvzPrivacyCleanerWizardPages]) Footer(subst(Back(use(0))))) alias(avzwizard) ns(AVZ_RunScript) ext(1)

[AvzPrivacyCleanerWizardPages]
@           = sz(p,p) ext(1)
Welcome     = [WizardPage] subst(Name() Descr() Body([AvzPrivacyCleanerWizard_Welcome]))
Search      = [WizardPage] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 1; savesettings(); setstate(#TASK_REQUEST_RUN))
Problems    = [WizardPage] subst(Name() Descr() Body([AvzPrivacyCleanerWizard_Problems])) visible(Troubles.size())
Fix         = [WizardPage] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 2; savesettings(); setstate(#TASK_REQUEST_RUN)) visible(Troubles.size())
Finish      = [WizardPage] subst(Name() Descr() Body([AvzPrivacyCleanerWizard_Finish]))

[AvzPrivacyCleanerWizard_Welcome]
@       = sz(p,p) ext(1)
Start   = [WizardButton] a(lc) onclick(wizNext()) subst(Name() Descr())

[AvzPrivacyCleanerWizard_Problems]
@       = sz(p,p) ext(1)
List    = [AvzPrivacyCleanerWizard_Problems_List]
Fix     = [WizardButton] onclick(wizNext()) enable(find(Troubles, "Enabled")) subst(Name() Descr())

[AvzPrivacyCleanerWizard_Problems_List]
@       = $ListTransp sz(p,185) alias(vector) v(Troubles) at(noheader)
Trouble = sz(p) rs(66) at(checked,fixedpos) text(Description) v(Enabled) group(AvzSeverity,Result,default) sort(index,sortup)
;SideEff = sz(p) rs(33) text(switch(Name, "AvzPrivacyCleanerWizard.ScriptSideEffects"))

[AvzPrivacyCleanerWizard_Finish]
@       = a(lc) sz(p,a) ext(1)
Reboot  = [WizardButton] onclick(close(); restartOs()) subst(Name() Descr()) visible(NeedReboot)
Exit    = [WizardButton] onclick(close()) subst(Name() Descr())

;-------------------------------- AvzSecurityTweakerWizard --------------------------------

[AvzSecurityTweakerWizard]
@ = [WizardTpl] oninit(g_AvzSingleton = 1) onclose(setstate(#TASK_REQUEST_STOP); g_AvzSingleton = 0; 1) subst(Pages([AvzSecurityTweakerWizardPages]) Footer(subst(Back(use(0))))) alias(avzwizard) ns(AVZ_RunScript) ext(1)

[AvzSecurityTweakerWizardPages]
@           = sz(p,p) ext(1)
Welcome     = [WizardPage] subst(Name() Descr() Body([AvzSecurityTweakerWizard_Welcome]))
Search      = [WizardPage] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 1; savesettings(); setstate(#TASK_REQUEST_RUN))
Problems    = [WizardPage] subst(Name() Descr() Body([AvzSecurityTweakerWizard_Problems])) visible(Troubles.size())
Fix         = [WizardPage] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 2; savesettings(); setstate(#TASK_REQUEST_RUN)) visible(Troubles.size())
Finish      = [WizardPage] subst(Name() Descr() Body([AvzSecurityTweakerWizard_Finish]))

[AvzSecurityTweakerWizard_Welcome]
@       = sz(p,p) ext(1)
Start   = [WizardButton] a(lc) onclick(wizNext()) subst(Name() Descr())

[AvzSecurityTweakerWizard_Problems]
@       = sz(p,p) ext(1)
List    = [AvzSecurityTweakerWizard_Problems_List]
Fix     = [WizardButton] onclick(wizNext()) enable(find(Troubles, "Enabled")) subst(Name() Descr())

[AvzSecurityTweakerWizard_Problems_List]
@       = $ListTransp sz(p,185) alias(vector) v(Troubles) at(noheader)
Trouble = sz(p) rs(130) at(checked,fixedpos) text(Description) v(Enabled) group(AvzSeverity,Result,default) sort(index,sortup)
;SideEff = sz(p) rs(33) text(switch(Name, "AvzSecurityTweakerWizard.ScriptSideEffects"))

[AvzSecurityTweakerWizard_Finish]
@       = a(lc) sz(p,a) ext(1)
Reboot  = [WizardButton] onclick(close(); restartOs()) subst(Name() Descr()) visible(NeedReboot)
Exit    = [WizardButton] onclick(close()) subst(Name() Descr())

;-------------------------------- AvzSecurityAnalyzerWizard --------------------------------

[WizardPageSA]
@ = [WizardPage] subst(Header([WizardPageSA_Header]))

[WizardPageSA_Header]
@       = sz(p,98)
WizHdr  = [WizardPage_Header]
Band    = a(la) sz(p,a) bg(s_AvzWizardBand(DetectDanger))
Light   = a(ls) sz(a,a) xy(-7,-33) bg(s_AvzWizardLight(DetectDanger))

[AvzSecurityAnalyzerWizard]
@ = [WizardTpl] oninit(g_AvzSingleton = 1) onclose(setstate(#TASK_REQUEST_STOP, "Scan_Vulnerabilities"); setstate(#TASK_REQUEST_STOP); g_AvzSingleton = 0; 1) subst(Pages([AvzSecurityAnalyzerWizardPages]) Footer(subst(Back(use(0))))) alias(avzwizard.security) ns(AVZ_RunScript) ext(1)

[AvzSecurityAnalyzerWizardPages]
@               = sz(p,p) ext(1)
Welcome         = [WizardPageSA] subst(Name() Descr() Body([AvzSecurityAnalyzerWizard_Welcome]))
ScanVulnerab    = [WizardPageSA] subst(Name() Descr() Body([AvzWizard_ProgressVul]))
Vulnerab        = [WizardPageSA] subst(Name() Descr() Body([AvzSecurityAnalyzerWizard_Vulnerab]))
ScanTrouble     = [WizardPageSA] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 1; savesettings(); setstate(#TASK_REQUEST_RUN))
ScanSolution    = [WizardPageSA] subst(Name() Descr() Body([AvzWizard_Progress])) visible(DetectDanger > 1)
Solution        = [WizardPageSA] subst(Name() Descr() Body([AvzSecurityAnalyzerWizard_Solution])) visible(DetectDanger > 1)
Fix             = [WizardPageSA] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 2; savesettings(); setstate(#TASK_REQUEST_RUN)) visible(DetectDanger > 1)
ScanTrouble2    = [WizardPageSA] subst(Name() Descr() Body([AvzWizard_Progress])) visible(DetectDanger > 1 && !NeedReboot)
Script          = [WizardPageSA] subst(Name() Descr() Body([AvzSecurityAnalyzerWizard_Script])) visible(DetectDanger > 1 && !NeedReboot)
RunScript       = [WizardPageSA] subst(Name() Descr() Body([AvzWizard_Progress])) onselect(ScriptMode = 0; savesettings(); setstate(#TASK_REQUEST_RUN)) visible(DetectDanger > 1 && !NeedReboot)
ScriptError     = [WizardPageSA] subst(Name() Descr() Body([AvzSecurityAnalyzerWizard_ScriptError])) visible(DetectDanger > 1 && f_IsProfileFailed(state) && Script && !NeedReboot)
Finish          = [WizardPageSA] subst(Name() Descr() Body([AvzSecurityAnalyzerWizard_Finish])) btns(Back(enable(0)))

[AvzSecurityAnalyzerWizard_Welcome]
@   = a(lc) sz(p,a) ext(1)
Min = [WizardButton] onclick(wizMask = wizMask & ~wizPagesMask("ScanVulnerab,Vulnerab"); wizNext()) subst(Name() Descr())
Max = [WizardButton] onclick(wizNext()) subst(Name() Descr())

[AvzSecurityAnalyzerWizard_Vulnerab]
@       = sz(p,p) ext(1)
Next    = [WizardButton] a(lb) onclick(wizNext()) subst(Name() Descr())
Rescan  = [LWizardButton] a(lp) onclick(wizNext(0)) subst(Name() Descr()) enable(Threats.size())
AppList = [AvzSecurityAnalyzerWizard_Vulnerab_AppList]

[AvzSecurityAnalyzerWizard_Vulnerab_AppList]
@       = $ListTransp sz(p,p) a(lp) xy(,15) alias(vector) v(Threats)
App     = sz(p) rs(66) text(ObjectName)
Todo    = sz(p) rs(33) text(DetectName) f("Hotlink_Normal") at(clickable) onclick(url(DetectName))

[AvzSecurityAnalyzerWizard_Solution]
@       = sz(p,p) ext(1)
Fix     = [WizardButton] a(lb) onclick(wizNext()) subst(Name() Descr())
List    = [AvzSecurityAnalyzerWizard_Solution_List]

[AvzSecurityAnalyzerWizard_Solution_List]
@       = $ListTransp sz(p,p) a(lp) xy(,15) alias(vector) v(Troubles)
Trouble = sz(p) rs(66) at(checked,fixedpos) text(Description) v(Enabled) group(AvzSeverity,Result,default) sort(index,sortup)
SideEff = sz(p) rs(33) text(switch(Name, "AvzSecurityAnalyzerWizard.ScriptSideEffects"))

[AvzSecurityAnalyzerWizard_Script]
@       = sz(p,p) ext(1)
Fix     = [WizardButton] a(lb) onclick(wizNext()) enable(Script) subst(Name() Descr())
Web     = [WizardButton] a(lp) onclick(url($AvzScriptUrl)) subst(Name() Descr())
Info    = [AvzSecurityAnalyzerWizard_Script_Info]

[AvzSecurityAnalyzerWizard_Script_Info]
@       = sz(p,p) a(lp) xy(,15)
Lable   = a(la)
Script  = t(edit) a(la) sz(p,p) xy(,7) at(multiline) v(Script)

[AvzSecurityAnalyzerWizard_ScriptError]
@       = a(lc) sz(p,a) ext(1)
Reedit  = [LWizardButton] onclick(gotoPage("Script")) subst(Name() Descr())

[AvzSecurityAnalyzerWizard_Finish]
@       = a(lc) sz(p,a) ext(1)
Rescan  = [LWizardButton] onclick(gotoPage("ScanTrouble2")) subst(Name() Descr()) enable(DetectDanger > 1) visible(!NeedReboot && !f_IsProfileFailed(state))
Reboot  = [WizardButton] onclick(close(); restartOs()) subst(Name() Descr()) visible(NeedReboot)
Exit    = [WizardButton] onclick(close()) subst(Name() Descr())

;-------------------------------- AlertDialogT --------------------------------

[AlertDialogT]
$AlertActions   = a(la) sz(p,a) mg(7,7)
@               = t(dialog) at(nocaption,dragable,layered,bottom) sz(350,a) mg(2,2) bg(const(s_AlertDialogOutline(DetectDanger)))
Inner           = [AlertDialogT_Inner]

[AlertDialogT_Inner]
@       = sz(p,a) mg(2,2) bg("ColorWindow")
Header1 = [AlertDialogT_Header1]
Header2 = [AlertDialogT_Header2]
Body    = a(la) sz(p,a) extprm(1)
Footer  = [AlertDialogT_Footer]

[AlertDialogT_Header1]
@       = a(la) sz(p,49) bg(const(s_DlgHeader(DetectDanger))) extprm(1)
Logo    = sz(a,a) xy(6,6) bg("titlekis")

[AlertDialogT_Header2]
@       = a(la) sz(p,33) bg(const(s_DlgBand(DetectDanger))) extprm(1)
Caption = a(cc) f("Bold12White") at(singleline) text(const(s_AlertDialogCaption(TaskType))) extprm(1)

[AlertDialogT_Footer]
@           = a(la) sz(p,33) mg(14) bg(const(s_DlgFooter(DetectDanger))) extprm(1)
ApplyToAll  = t(check) sz(a,a) a(lc) v(bmask(ApplyToAll, #APPLYTOALL_TRUE)) use(!(ApplyToAll & #APPLYTOALL_NONE)) f("Header1White") extprm(1)
Help        = a(rc) sz(a,a) at(clickable) f("Header1White")

[AlertDialogT_InfoArea]
@       = a(la) sz(p,a) bg("AlertInfo") ext(1)
Top     = a(la) sz(p,4) bg("AlertInfoTop")
Info    = a(la) sz(p,a) mg(17,17) extprm(1)
Buttom  = a(la) sz(p,4) bg("AlertInfoBottom")

[AlertDialogT_Green]
@ = [AlertDialogT] bg("AlertOutline") subst(Header1(bg("DlgHeader")) Header2(bg("MainWindowProtectionBanner")) Footer(bg("DlgFooter")) ApplyToAll(use(0)))

;-------------------------------- AlertDialog --------------------------------

[AlertDialog]
@ = [AlertDialogT] subst(Body([AlertDialog_Body])) oninit(if(!sImagePath, sImagePath = $UnknownApp); if(!sDescription, sDescription = objfile(sImagePath)); if(bSound, sound(s_AlertNotificationSound(DetectDanger))))

[AlertDialog_Body]
Descr   = [AlertDialogT_InfoArea] subst(Info([AlertDialog_Descr]))
Action  = [AlertDialog_Body_Action]

[AlertDialog_Descr]
Icon    = [AlertDialog_Descr_Icon]
ObjectL = a(la) sz(a,a) xy(,7) f("Bold")
Object  = t(hotlink) at(clickable) a(la) sz(p,a) text(ObjectName) onclick(dialog("MalwareInfo"))
;Object  = t(edit) at(readonly,singleline,compresspath,noborder) a(la) sz(p,a) text(ObjectName)
;Details = t(hotlink) at(clickable) a(ra) sz(a,a) xy(,17) f("Hotlink") onclick(dialog("MalwareInfo"))

[AlertDialog_Descr_Icon]
@       = a(la) sz(p,a)
Icon    = sz(32,32) i(const(getIcon(sImagePath, "unkapp", 1)))
Trouble = t(richedit) at(readonly,noborder,nofocus) a(as) sz(p,a) xy(17) text(s_AlertDialogTrouble(TaskType))

[AlertDialog_Body_Action]
@           = $AlertActions at(enum) v(ResultAction)
Allow       = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_ALLOW) use(ActionsAll & #ACTION_ALLOW)
Deny        = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_DENY) use(ActionsAll & #ACTION_DENY)
Disinfect   = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_DISINFECT) use(ActionsAll & #ACTION_DISINFECT)
Quarantine  = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_QUARANTINE) use(ActionsAll & #ACTION_QUARANTINE)
Terminate   = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_TERMINATE) use(ActionsAll & #ACTION_TERMINATE)
Delete      = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_DELETE) use(ActionsAll & #ACTION_DELETE && !(ActionsMask & #ACTION_DELETE_ARCHIVE))
DeleteArch  = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_DELETE_ARCHIVE) use(ActionsAll & #ACTION_DELETE_ARCHIVE) onclick(msg("CanDeleteArchive", #m_question|#m_okcancel) ? close(1) : 0)
Skip        = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_REPORTONLY) use(ActionsAll & #ACTION_REPORTONLY)
Ok          = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_OK) use(ActionsAll & #ACTION_OK)
Cancel      = [AlertDialog_ActionButton] subst(Name() Descr()) v(#ACTION_CANCEL) use(ActionsAll & #ACTION_CANCEL)

[AlertDialog_ActionButton]
@       = a(la) sz(p,55) at(radiolike) bg(if(ctl.hotlight, "GroupHeader")) enable(const(ActionsMask & ctl.value)) onclick(close(1)) ext(1)
Name    = sz(a,a) xy(21,7) ia(lc) i("listctrls,6,6,6,2,6,6") f(const(DefaultAction == ctl.parent.value ? "AlertBtn_a" : "AlertBtn")) extprm(1)
Descr   = a(sa) sz(a,a) xy(20,0) extprm(1)

;-------------------------------- MalwareInfo --------------------------------

[MalwareInfo]
@       = $DlgAttrBase at(a_close,customfooter,nohelp) sz(376,400)
Header  = [MalwareInfo_Header]
Tab     = [MalwareInfo_Tab]
Footer  = [DialogPanel] xy(-7,-7,-7,) subst(ResizeBackground(bg(const(s_DlgFooter(DetectDanger)))) Bckgnd(bg(const(s_DlgFooter(DetectDanger)))))

[MalwareInfo_Header]
@       = a(la) sz(p,49) xy(-7,-7,-7) bg(const(s_DlgHeader(DetectDanger))) 
Name	= sz(a,a) xy(50,12) text(DetectName) f("Bold12White")

[MalwareInfo_Tab]
@       = $Tab xy(,53,,$DialogPanelSizeY)
Malware = [MalwareInfo_Tab_Malware]
File    = [MalwareInfo_Tab_File]

[MalwareInfo_Tab_Malware]
@        = sz(p,p)
Category = [LValue] xy(5,7) subst(Name() Val(xy(120) text(const(s_DetectType(DetectType)))))
Type     = [LValue] xy(5,7) subst(Name() Val(xy(120) text(const(s_DetectBehaviour(DetectBehaviour)))))
Details  = a(la) sz(p,a) xy(17,7) text(s_BehaviourDetails(DetectBehaviour))
Info     = [MalwareInfo_Tab_Malware_info]

[MalwareInfo_Tab_Malware_info]
@       = $SettingsGroup xy(,7) a(rb)
Text    = a(la) xy(7,1) sz(a,a)
Link    = t(hotlink) a(at) at(clickable) i("internet16") f("Hotlink") text("viruslist.com") onclick(url($ViruslistThreatLink)) sz(a,a)

[MalwareInfo_Tab_File]
@ = sz(p,p)
File     = [LValue] xy(,7) subst(Name() Val(xy(100) t(edit) at(readonly,singleline,compresspath,noborder) text(objfile(ObjectName))))
;Path    = sz(p) rs(40) text(objdir(ObjectName))
;Name    = sz(p) rs(40) text(objfile(ObjectName))
Info1    = [MalwareInfo_Tab_File_Info1]

[MalwareInfo_Tab_File_Info1]
@       = $SettingsGroup a(la) xy(-7,17)
Location  = [LValue] xy(,) subst(Name() Val(xy(100) text(objdir(ObjectName))))
Size      = [LValue] xy(,7) subst(Name() Val(xy(100) text(sProduct)))
DiskSize  = [LValue] xy(,7) subst(Name() Val(xy(120) text(sVersion)))
Info2    = [MalwareInfo_Tab_File_Info2]

[MalwareInfo_Tab_File_Info2]
@			= $SettingsGroup a(la) xy(-7,14)
Created     = [LValue] xy(,) subst(Name() Val(xy(120) text(datetime(tCreation))))
Modified    = [LValue] xy(,7) subst(Name() Val(xy(120) text(datetime(tModify))))

[Product_Events]
@               = ext(1) sz(p,p) 
ReportNavigator = [Product_Events_ReportNavigator]
Report          = [Product_Events_Report]

[Product_Events_ReportNavigator]
@       = sz(p,a) xy(,,,7)
Filter  = [Product_Events_ReportNavigator_Filter]
Find    = [Product_Events_ReportNavigator_Find]

[Product_Events_ReportNavigator_Filter]
@       = sz(232,a) rs(0,0)
Save    = at(btnlike) sz(21,21) a(rt) xy(,,2) ia(cc) i("Save") onclick(g_combo=ctl.Combo;dialog("Product_Events_Report_Save"))
Combo   = $Combo sz(p,a) a(pt) v(ctl.Report.curview()) items(vector(ctl.Report.getview()) text(ViewName) v(ViewName))

[Product_Events_ReportNavigator_Find]
@           = sz(p,a) a(at) xy(17)
ParamsShow  = at(chklike) sz(21,21) a(rt) xy(,,2) ia(cc) ta(cc) text("^")
Find        = at(btnlike) sz(21,21) a(pt) xy(,,2) ia(cc) i("Find") onclick(ctl.Report.finddata(ctl.FindMask.value, (ctl.MatchCase.value ? #eFindMatchCase : 0)|(ctl.WholeWord.value ? #eFindWholeWord : 0)))
FindMask    = t(combo) sz(p,a) a(pt) at(edit)
MatchCase   = $Check xy(,5) visible(ctl.ParamsShow.selected)
WholeWord   = $Check xy(,5) visible(ctl.ParamsShow.selected)

[Product_Events_Report]
@           = $List at(rememberdata) alias(taskevents) refresh(100) a(la) extprm(1)
Time        = sz(150) text(datetime(Timestamp)) group(date,dategroup(Timestamp),default) sort(index,sortup) filter(auto,s_date(dategroup(Timestamp)))
Application = [Product_Events_Report_Application]
Task        = sz(80,a) text($TaskText) extprm(1) group(task,TaskID) filter(auto)
Verdict     = [Product_Events_Report_Verdict]
Action      = sz(160) text($ActionText) group(Action) extprm(1) filter(auto)
Object      = [Product_Events_Report_Object]
Reason      = sz(80,a) text($ReasonText) filter(custom) extprm(1)
row         = i($RepEventIcon) bg($RepEventBg)
views       = extprm(1)

[Product_Events_Report_Application]
@           = sz(280) text($AppName) group(AppGroup,AppID) extprm(1) i($AppIcon)
Path        = sz(a) text($AppPath)
Name        = sz(a) text($AppModule) i($AppIcon)
PID         = sz(a) text($AppNativePID) group(PIDGroup,PID)
CommandLine = sz(a) text($AppCmdLine)

[Product_Events_Report_Verdict]
@               = sz(p) rs(40) text($VerdictText) group(Verdict) filter(auto,$VerdictDescrText)
Descr           = sz(a) text($VerdictDescrText) extprm(1)
DetectType      = sz(a) text($DetectTypeText) group(DetectType) filter(auto) extprm(1)
DetectName      = sz(a) text($DetectNameText) group(DetectName) filter(auto) extprm(1)
DetectDanger    = sz(a) text($DetectDangerText) group(DetectDanger) filter(auto) extprm(1)
Exact           = sz(a) text($ExactText) group(IsExact) filter(auto) extprm(1)

[Product_Events_Report_Object]
@       = sz(p) rs(60) text($ObjectText) i(s_ObjectTypeIcon(ObjectType, $ObjectIdText)) group(ObjectType) filter(auto, $ObjectTypeText)
Type    = sz(60) text($ObjectTypeText) i(s_ObjectTypeIcon(ObjectType, $ObjectIdText)) group(ObjectType) filter(auto)
Path    = sz(a) text($ObjectPathText)
Name    = sz(a) text($ObjectNameText)
Size    = sz(a,a) use(0) extprm(1) text($ObjectSizeText)

[Product_Events_Report_Save]
@ = [EditSimpleItem] at(debug) onok(g_combo.add(ctl.Name.value,ctl.Name.value)) subst(Example(use(0))) ext(1)

[PauseProtectionRequestDialog]
@       = $Dlg sz(400,a) bg("ColorWindow")
Text    = sz(a,a) a(lt)
Actions = [PauseProtectionRequestDialog_Actions]

[PauseProtectionRequestDialog_Actions]
@           = sz(p,a) a(la) xy(,7,,50) at(enum) v(ResumeMode)
Time        = [WizardButton] a(la) sz(p,a) at(radiolike) v(0x40000000) onclick(close(#m_res_ok)) subst(Name([PauseProtectionRequestDialog_TimeButton]) Descr())
Reboot      = [WizardButton] a(la) sz(p,a) at(radiolike) v(0x00000000) onclick(close(#m_res_ok)) subst(Name() Descr())
OnDemand    = [WizardButton] a(la) sz(p,a) at(radiolike) v(0xffffffff) onclick(close(#m_res_ok)) subst(Name() Descr())

[PauseProtectionRequestDialog_TimeButton]
@       = sz(a,a)
Name    = sz(a,a) xy(20,3) f("WizLink") bp(ctl.hotlight = ctl.parent.hotlight)
Time    = [PauseProtectionRequestDialog_TimeButton_Time]

[PauseProtectionRequestDialog_TimeButton_Time]
@       = t(combo) a(at) xy(7) sz(120,20) v(ResumeTime)
60      = v(60)
180     = v(180)
300     = v(300)
900     = v(900)
1800    = v(1800)
3600    = v(3600)
10800   = v(10800)
18000   = v(18000)

[Product_Threats]
@           = ext(1) sz(p,p)
Navigator   = [Product_Threats_Navigator]
Report      = [Product_Threats_Report]

[Product_Threats_Navigator]
@       = sz(p,28) rs(0,0)
Filter  = [Product_Threats_Navigator_Filter]

[Product_Threats_Navigator_Filter]
@           = t(combo) sz(225,a) onchange(ctl.Report.setfilter(ctl.value, 1))
Active      = v("ObjectStatus == #OBJSTATUS_INFECTED || ObjectStatus == #OBJSTATUS_SUSPICION || ObjectStatus == #OBJSTATUS_NOTDISINFECTED") sz(0,0)
Quarantined = v("ObjectStatus == #OBJSTATUS_QUARANTINED") sz(0,0)
Disinfected = v("!(ObjectStatus == #OBJSTATUS_INFECTED || ObjectStatus == #OBJSTATUS_SUSPICION || ObjectStatus == #OBJSTATUS_NOTDISINFECTED)") sz(0,0)
All         = v("") at(default) sz(0,0)

[Product_Threats_Report_Footer]
@       = f("GridGroup") sz(p,22) rs(100,0) ext(1)
CureAll = t(hotlink) sz(a,a) a(lt) xy(5,4) f("Hotlink_Normal") onclick(ctl.Report.treatAll())
AddToQB = t(hotlink) sz(a,a) a(at) xy(20,4) f("Hotlink_Normal") onclick(ctl.Report.addToQuarantine())
border  = a(lt) sz(p,2) bg("GridGroup")

[Product_Threats_Report]
@           = $List at(rememberdata) alias(taskthreats) refresh(100) extprm(1) a(la)
Status      = sz(p) rs(30) at(dragable) text(s_DetectObjectStatus(ObjectStatus)) group(dettype,DetectType,default)
Object      = [Product_Threats_Report_Object]
Detected    = sz(p) rs(30) text(s_DetectType(DetectType) + if(DetectName, " " + DetectName))
row         = at(clickable) i(s_DetectObjectStatusIcon(ObjectStatus)) onrclick(menu("Product_Threats_Report_Menu"))
footer      = [Product_Threats_Report_Footer]

[Product_Threats_Report_Object]
@       = sz(p) rs(40) text(ObjectName)
Path    = sz(p) rs(40) text(objdir(ObjectName))
Name    = sz(p) rs(40) text(objfile(ObjectName))

[Product_Threats_Report_Menu]
@               = t(menu) bg("MenuIconBg")
Treat           = onclick(ctl.Report.treat()) visible(ObjectStatus == #OBJSTATUS_NOTDISINFECTED)
GotoToVulDesc   = onclick(url(DetectName)) visible(DetectType==#DETYPE_VULNERABILITY)
AddToExclude    = enable(0)
GotoFile        = enable(0)
Discard         = onclick(ctl.Report.discard())
Restore         = onclick(ctl.Report.restore()) enable(ObjectStatus == #OBJSTATUS_QUARANTINED || ObjectStatus == #OBJSTATUS_DELETED || ObjectStatus == #OBJSTATUS_DISINFECTED || ObjectStatus == #OBJSTATUS_ADDEDBYUSER)
sep
TreatAll        = onclick(ctl.Report.treatAll())
DiscardAll      = onclick(ctl.Report.discardAll())
sep
ViewOnWeb       = enable(0)

[Product_Scan_Statistics_List]
$ObjectPath     = c_object(ObjectId, object(ObjectId))
@               = $List alias(scanstat) refresh(100) a(la) ext(1)
Object          = at(fixedpos) text(ObjectType == #eFile ? objfile($ObjectPath) : s_ObjectType(ObjectType)) ia(lc) i(s_ObjectTypeIcon(ObjectType, $ObjectPath, 1)) sz(150) extprm(1)
Time            = text(TimeSpend/1000000) sz(a) a(r)
Scaned          = text(Scaned) sz(a) a(r)
Detected        = text(Detected) sz(a) a(r)
NotProcessed    = text(NotProcessed) sz(a) a(r)
Archived        = text(Archived) sz(a) a(r)
Packed          = text(Packed) sz(a) a(r)
PswProtected    = text(PswProtected) sz(a) a(r)
Corrupted       = text(Corrupted) sz(a) a(r)
ScanErrors      = text(ScanErrors) sz(a) a(r)
row             = bg(if(Flags & 1,"EventWarn")) f(if(Flags & 0x2,"Normal_Bold"))

;------------- SettingsWindow.CheckPassword -----------

[CheckProductPassword]
@       = $Dlg sz(320,a) h(1252)
Body    = [CheckProductPassword_Body]

[CheckProductPassword_Body]
@           = sz(p,a) xy(,,,$DialogPanelSizeY)
Descr       = [CheckProductPassword_Body_Descr]
EditBlock   = [CheckProductPassword_Body_EditBlock]

[CheckProductPassword_Body_Descr]
@           = sz(p,a) a(la)
Ico         = i("password")
DescrText   = a(as) sz(p,a) xy(12) text(s_PasswordConfirmReason(Reason))

[CheckProductPassword_Body_EditBlock]
@               = sz(p,a) a(la) xy(,15)
Pswd2CheckText  = xy(,2) sz(a,a)
Pswd2CheckEdit  = t(edit) a(at) xy(5) sz(p) at(password) onok(if(!cryptcmp(global.OPEP, ctl.value), balloon("ErrPswrdWrong")))
Pswd2Save       = $Check a(sa) xy(,5,,5) v(SavePswdr) use(Reason != #pwdc_Exit)

;------------- NewAppSniffer -----------

[NewAppSniffer]
@           = $DlgAttrBase at(a_cancel) sz(300,150) oninit(if(!sDescription, sDescription = $UnknownApp))
Info        = sz(p,a)
App         = a(la) xy(,7) sz(p,a) i(const(getIcon(sImagePath, "unkapp", 1))) text(const(sDescription))
Progress    = t(progress) a(la) sz(p,20) xy(,7) v(nProgress)

;------------- Protection_CommonStatistics -----------

[MainWindow.Protection_CommonStatistics]
@           = sz(p,p) ext(1) at(dragable)
Statistic   = [MainWindow.Protection_CommonStatistics_List]


[MainWindow.Protection_CommonStatistics_List]
@           = $List rs(100,0) alias(vector.CmnStatistics) v(CmnStat) group(GridCmnStatGroup,s_CmnStatGroup(Type),default) refresh(100)
DetectType  = sz(200) text( s_RepDetectType(Type) ) 
Treated     = sz(90)  text(Treated) a(rs)
Total       = sz(90)  text(Total) a(rs)

[Grid.Groups]
GridCmnStatGroup = [Grid.Group.Template] expand(0) text(s_CmnStatGroupName(val))
