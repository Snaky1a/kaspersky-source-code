[Templates]
$Button_CX              = 75
$Button_CY              = 23
$Button_Medium_CX       = 103
$Tab                    = t(tab) sz(p,p) mg(7,7) xy(,,,$DialogPanelSizeY)
$Button                 = t(button) bg("GroupHeader") sz($Button_CX,$Button_CY)
$Button_Medium          = t(button) bg("GroupHeader") sz($Button_Medium_CX,$Button_CY)
$Button_Large           = t(button) bg("GroupHeader") sz(150,23)
$ListButton             = $Button alias(listbutton)
$Check                  = t(check) sz(a,a) a(la)
$CheckForGroup          = t(check) sz(a,a) a(lt) at(noparentdisable) xy(0,-21)
$Radio                  = t(radio) sz(a,a) a(la)
$Combo                  = t(combo) sz(p,a) a(la)
$IpAddr                 = t(ipaddress)
$Link                   = t(hotlink) sz(a,a) a(la) f("Hotlink_Normal")
$ListTransp             = t(list) sz(p,p)
$List                   = $ListTransp bg("ColorWindow")
$GroupBox               = t(group) f("GroupHeader") b(GroupBox)
$GroupBoxLink           = t(group) f("GroupHeaderLink") b(GroupBox)
$SettingsGroup          = t(box) f("GroupHeader") b(Topline_light) a(la) sz(p,a) mg(8,8,0,0) xy(0,$Group_Shift)
$Control_Shift          = 7
$Button_Shift           = 6
$Group_Shift            = 7
$Edit_CenterOffsetY     = -3
$Edit_CommentOffsetX    = 4
$Static_Shift           = xy(0,0,0,3)
$Static_ShiftAfter      = xy(0,3,0,0)
$ButtonsLineSizeX       = 81
$ButtonsLineSizeY       = 31
$DialogPanelSizeY       = 38
$ButtonsLineMediumSizeX = 109
$DlgAttrBase            = t(dialog) mg(7,7) at(dragable) bg((isOsGuiThemed && !isTabbed) ? "ColorWindow" : "ColorWindowClassic")
$DlgAttr                = $DlgAttrBase at(a_ok,a_cancel)
$Dlg                    = $DlgAttr
$Wizard                 = t(dialog) mg(7,7) at(dragable,wizard) at(a_next,a_back,a_cancel)
$WizardPage             = sz(p,p) xy(,,,$DialogPanelSizeY)
$GroupBody              = a(la) bg("GroupBody") at(fixstyle) sz(p,a) rs(100,0) xy(,7)
$GroupHeader            = f("Header1") mg(8,0) bg("GroupHeader") at(singleline,fixstyle) sz(p,30) rs(100,0) ia(lc)

;-- MainWindow --
$TaskTab                = a(lt) alias(navigator) sz(p,p) rs(100,100) at(enum) workarea(WorkArea) v(g_MainWndTabSel)
$TaskWorkArea           = a(lt) sz(p,p) xy(0,26) rs(100,100)
$TaskPanel              = a(lt) bg("TaskPanelBg") at(fixstyle) sz(p,p) rs(100,100) mg(7,7,7,7)
$TaskView               = $TaskPanel alias(taskview)
$TaskGroup              = [Group] a(ra) xy() rs(0,100) sz(100,p)
$TaskSubGroup           = alias(taskview) sz(p,a) rs(0,0) a(la) xy(10,,,7) mg(5) ext(1)
$TaskVal                = [Value] a(la) xy(20,5)

;---------
$SettNavBtn             = a(la) sz(p,30) at(clickable,fixstyle,singleline,radiolike) mg(8,0,0,0) rs(0,0) bg(ctl.selected ? "MainWindowProtectionBanner" : "") f(ctl.selected ? "SettNav_a" : "SettNav")

;--- DlgWizard ------
$DlgWizardInnerAttr     = sz(p,p) 
$WizardGroupNext        = t(box) f("Normal_Grey") b(Topline_light) a(la) sz(p,a) mg(8,8,0,0) xy(0,$Group_Shift) 

;------------- Dialog Panels ------------

[DialogPanel]
@                   = a(lb) sz(p,$DialogPanelSizeY) ext(1) rs(100,0)
Help                = $Link a(lc) xy(9,) text($Help) f("MainFtr")
BtnsGroup           = [DialogPanel_BtnsGroup]
ResizeBackground    = [DialogPanel_ResizeBackground]
Bckgnd              = sz(a,a) bg("DlgFooter") extprm(1)
WndResizer          = a(rb) sz(a,8) at(fixstyle) bg("WndResizer") xy(1,1)

[DialogPanel_BtnsGroup]
@           = sz(a,$Button_CY) rs(0,0) a(rb) xy(7,7) extprm(1)
Confirm     = $Button a(lt) xy($Button_Shift)
WizardGroup = [DialogPanel_BtnsGroup_WizardGroup]
No          = $Button a(at) xy($Button_Shift)
Cancel      = $Button a(at) xy($Button_Shift)
Apply       = $Button a(at) xy($Button_Shift)

[DialogPanel_BtnsGroup_WizardGroup]
@       = sz(a,p) a(at) rs(0,0)
Back    = $Button xy($Button_Shift)
Next    = $Button a(at)

;------------- Browse Dialogs ------------

[DialogPanel_ResizeBackground]
@ = sz(p,p) at(fixstyle) rs(100,0) bg("MainWindowCorp") xy(384) extprm(1)

[BrowseForObject]
@       = $DlgAttr at(resizable) sz(300,310) ext(1)
Body    = [BrowseForObject_Body]

[BrowseForObject_Body]
@           = sz(p,p) xy(,,,$DialogPanelSizeY)
ShellTree   = t(tree) alias(shelltree) a(la) sz(p,200) xy(0,$Group_Shift) extprm(1)
PathLabel   = sz(a,20) a(la) xy(0,$Group_Shift) extprm(1)
EditGrp     = [BrowseForObject_Body_EditGrp]
Recursive   = $Check a(la) xy(0,$Group_Shift) v(Recursive) extprm(1)

[BrowseForObject_Body_EditGrp]
@           = a(as) xy(3,-1) sz(p,a) rs(100,0)
Add         = t(button) a(rt) sz(a,21) xy(,,5) text($Add) extprm(1)
PathEdit    = t(edit) at(autocomplete) a(pt) sz(p) extprm(1)

[BrowseForFolder]
@ = [BrowseForObject] at(resizable,nohelp) subst(PathLabel() Add(use(0)) Recursive(use(0))) ext(1)

[BrowseForFile]
@           = $DlgAttr at(resizable) sz(300,310) alias(settings) ext(1)
ShellTree   = t(tree) alias(shelltree) sz(p,200) xy(0,$Group_Shift)
PathLabel   = sz(a,20) a(la) xy(0,$Group_Shift)
PathEdit    = t(edit) a(as) sz(p) xy(5) at(autocomplete)
Recursive   = $Check a(la) xy(0,$Group_Shift) v(Recursive)

[BrowseForScanObject]
@           = $DlgAttr at(resizable) sz(300,310) ext(1)
ShellTree   = t(tree) alias(shelltree) a(la) sz(p,200) xy(0,$Group_Shift)
PathLabel   = sz(a,20) a(la) xy(0,$Group_Shift)
EditGrp     = [BrowseForScanObject_Edit]
Recursive   = $Check a(la) xy(0,$Group_Shift) v(Recursive)

[BrowseForScanObject_Edit]
@           = a(as) xy(3,-1) sz(p,a) rs(100,0)
Add         = t(button) a(rt) sz(a,21) xy(,,5) text($Add)
PathEdit    = t(edit) at(autocomplete) a(pt) sz(p)

[BrowseForUpdateSource]
@           = $DlgAttr at(resizable) sz(300,310) ext(1)
ShellTree   = t(tree) alias(shelltree) a(la) sz(p,230) xy(0,$Group_Shift)
PathLabel   = sz(a,20) a(la) xy(0,$Group_Shift)
PathEdit    = t(edit) a(as) sz(p,20) xy(3,-2) rs(100,0) at(autocomplete)

[BrowseForRegistry]
@           = $DlgAttr at(resizable) sz(350,330) alias(settings) ext(1)
ShellTree   = t(tree) alias(regtree) a(la) sz(p,200) xy(0,$Group_Shift)
PathLabel   = sz(80,20) a(la) xy(0,$Group_Shift)
PathEdit    = t(edit) a(as) sz(p,20) xy(3,-2) rs(100,0) v(KeyPath)
ValueLabel  = sz(80,20) a(la) xy(0,$Group_Shift)
ValueEdit   = t(edit) a(as) sz(p,20) xy(3,-2) rs(100,0) v(KeyValue)
Recursive   = $Check xy(,7) v(Recursive)

[BrowseForAppMenu]
@       = t(menu) bg("MenuIconBg")
Browse  = text($Browse)
sep
AppList = bg("MenuIconBg")

;------------- Message Dialog ------------

[MessageDialog]
@       = $DlgAttrBase sz(a,a) at(nohelp) i(s_MsgBoxIcon(msg.Icon)) text(msg.Caption)
Body    = [MessageDialog_Body]

[MessageDialog_Body]
@       = sz(a,a) mg(7,7) xy(,,,$DialogPanelSizeY)
Icon    = sz(32,32) xy(,,17) i(s_MsgBoxIcon(msg.Icon))
Text    = t(richedit) at(readonly,noborder,nofocus) a(ac) sz(a,a,,,500) order(4) text(msg.Text)

;------------- Grid Groups --------

[Grid.Group.Template]
@       = f("GridGroup") sz(p,30) rs(100,0)
border  = a(lb) sz(p,2) bg("GridGroup")

[Grid.Footer.Template]
@       = f("GridGroup") sz(p,22) rs(100,0) ext(1)
Add     = t(hotlink) sz(a,a) a(lt) xy(5,4) i("listctrls,0,0,0,0,0,0") f("Hotlink_Normal") extprm(1)
border  = a(lt) sz(p,2) bg("GridGroup")

[Grid.Editor.Template]
@           = f("GridGroup") sz(p,30) rs(100,0) ext(1)
Delete      = at(clickable) sz(a,a) a(rc) i("listctrls,2,2,2,2,2,2") extprm(1)
Edit        = at(clickable) sz(a,a) a(pc) i("listctrls,1,1,1,1,1,1") extprm(1)
MoveDown    = at(clickable) sz(a,a) a(pc) i("listctrls,4,4,4,4,4,4") use(0) extprm(1)
MoveUp      = at(clickable) sz(a,a) a(pc) i("listctrls,3,3,3,3,3,3") use(0) extprm(1)

[Grid.Footer2.Template]
@           = f("GridGroup") sz(p,22) rs(100,0) ext(1)
Add         = t(hotlink) sz(a,a) a(lc) xy(5) i("listctrls,0,0,0,0,0,0") f("Hotlink_Normal") extprm(1)
Edit        = t(hotlink) sz(a,a) a(as) xy(7) i("listctrls,1,1,1,1,1,1") f("Hotlink_Normal") extprm(1)
Delete      = t(hotlink) sz(a,a) a(as) xy(7) i("listctrls,2,2,2,2,2,2") f("Hotlink_Normal") extprm(1)
MoveUp      = t(hotlink) sz(a,a) a(as) xy(7) i("listctrls,3,3,3,3,3,3") f("Hotlink_Normal") extprm(1) use(0)
MoveDown    = t(hotlink) sz(a,a) a(as) xy(7) i("listctrls,4,4,4,4,4,4") f("Hotlink_Normal") extprm(1) use(0)
border      = a(lt) sz(p,2) bg("GridGroup")

[Grid.Groups]
footer      = [Grid.Footer.Template]
rowedit     = [Grid.Editor.Template]
dateonly    = [Grid.Group.Template] expand(1)
task        = [Grid.Group.Template] text(s_TaskID(val) + $items)
taskname    = [Grid.Group.Template] text(format_struct(profile(val), "ProfileName")) expand(1)
runtask     = [Grid.Group.Template] text(format_struct(profile(val), "ProfileReport")+ $items) expand(profile(val).state & #StateFlagOperational)
dettype     = [Grid.Group.Template] expand(1)
PIDGroup    = [Grid.Group.Template] i(f_PIDIcon(val))
AppGroup    = [Grid.Group.Template] i(f_AppIcon(val))
AvzSeverity = [Grid.Group.Template] expand(val > 1)
default     = [Grid.Group.Template]

[Grid.Find]
@       = $DlgAttrBase sz(370,a)
Dlg     = [Grid.FindBody]
Find    = $Button at(default) a(rt)         sz($Button_Medium_CX,$Button_CY)
Mark    = $Button a(ra) xy(0,$Button_Shift) sz($Button_Medium_CX,$Button_CY)
Cancel  = $Button a(rb)                     sz($Button_Medium_CX,$Button_CY)

[Grid.FindBody]
@           = sz(p,a) xy(,,106)
FindLbl     = a(la) xy(,5,5)
FindEdit    = a(ls) sz(p) t(edit) xy(55,$Edit_CenterOffsetY) v(Mask)
ColumnLbl   = a(la) xy(,5,5)
ColumnCmb   = [Grid.ColumnCmb]
MatchCase   = $Check a(la) xy(,35) v(MatchCase)
WholeWord   = $Check a(la) xy(,6) v(WholeWord)

[Grid.ColumnCmb]
@   = a(ls) sz(p) t(combo) xy(55,$Edit_CenterOffsetY) v(Column) alias(columns)
All = at(default)

[Grid.Filter]
@           = $DlgAttrBase sz(370,170)
Label       = sz(a,a)
Cond1       = [Grid.Filter.Condition] a(la) xy(,10,20) v(cond1)
ValMask1    = t(edit) a(as) sz(175,a) v(mask1) enable(ctl.Cond1.value != "None") visible(colType == 1)
ValEnum1    = t(combo) dl(10) alias(enum) a(as) v(enum1) sz(175) enable(ctl.Cond1.value != "None") visible(colType == 2)
ValDate1    = t(timeedit) at(date) a(as) v(date1) sz(175,a) enable(ctl.Cond1.value != "None") visible(colType == 3)
And         = t(radio) sz(a,a) a(la) xy(20,10) v(1)
Or          = t(radio) sz(a,a) a(as) xy(20) v(2)
Cond2       = [Grid.Filter.Condition] a(la) xy(,10,20) v(cond2)
ValMask2    = t(edit) a(as) sz(175,a) v(mask2) enable(ctl.Cond2.value != "None") visible(colType == 1)
ValEnum2    = t(combo) dl(10) alias(enum) a(as) v(enum2) sz(175) enable(ctl.Cond2.value != "None") visible(colType == 2)
ValDate2    = t(timeedit) at(date) a(as) v(date2) sz(175,a) enable(ctl.Cond2.value != "None") visible(colType == 3)

[Grid.Filter.Condition]
@                   = t(combo) sz(160) ext(1)
None                = at(default)
Equals
DoNotEqual
GreaterThan
GreaterThanOrEqual
LessThan
LessThanOeEqual
Blanks
NonBlanks
Like
NotLike

[Grid.HdrPopup]
@           = t(menu) bg("MenuIconBg")
SortDown    = i("GridMenu,0")
SortUp      = i("GridMenu,1")
Separator
Find        = i("GridMenu,4")
Group       = i("GridMenu,2")
Filter      = i("GridMenu,3")
Separator

[Grid.FltPopup]
@           = t(menu) bg("MenuIconBg")
Custom
All
Separator

;------------- Tray Window ------------

[Tray]
@ = t(tray) alias(producttray) ext(1) onclick(window("MainWindow"))

[Tray.menu]
@                   = t(menu)
RunningTask         = at(hidden) alias(taskview) onclick(f_StartScan(name)) text($ProfileName + if(f_IsStateActive(state), " (" + Completion + "%)"))
sep
Scan_My_Computer    = alias(taskview) onclick(f_StartScanMyComputer())
ScanCustom          = onclick(window("MainWindow:Scan:Home:Scan_Objects"))
sep
Updater             = alias(taskview) onclick(f_StartUpdater())
sep
NetMonitor          = enable(0) use(isInstalled("fw")) onclick(window("AntiHackerStatisticsWindow"))
BlockNetwork        = enable(0) use(isInstalled("fw") && $PersonalOnly)
sep
VirtualKeyboard     = onclick(window("VirtualKeyboard")) use($PersonalOnly && global.settings.UseVirtualKdb)
sep
Activate            = onclick(activate()) visible(global.KeyState)
Settings            = onclick(window("OptionsWindow"))
KAV                 = at(default) onclick(window("MainWindow:Protection"))
sep
DisableProtect      = onclick(setstate(s_IsStateRunning(Protection.state) ? #TASK_REQUEST_PAUSE : #TASK_REQUEST_RUN, "Protection")) visible($IsProtectionInstalled) enable(!s_IsStateTransitional(Protection.state) && !$IsSafeMode)
About               = onclick(window("ProductInfo"))
sep
Unload              = onclick(exit())

[TrayNewsMenu]
@ = t(tray) alias(newstray) text($NewsFromKL)

[TrayNewsMenu.menu]
@       = t(menu)
KAV     = t(menuitem) v(main:Protection)
News    = t(menuitem) at(default) v(news)

;------------- Main Window ------------

[MainWindow]
$NavBtn         = a(la) sz(208,53) at(clickable,fixstyle,singleline,radiolike) mg(0,0,8,0) rs(0,0) bg(ctl.selected ? "MainWindowNavSel" : "MainWindowNav")
$NavBtnName     = sz(a,a) a(lt) xy(25,10) f(ctl.parent.selected ? "MainNavName_a" : "MainNavName") bp(ctl.hotlight = ctl.parent.hotlight)
$NavBtnDescr    = sz(a,a) a(la) xy(25,3) f(ctl.parent.selected ? "MainNavDescr_a" : "MainNavDescr")
@               = $DlgAttrBase mg(0,0) alias(taskview) at(resizable,minimizable,fixstyle) sz(700,565) bg("MainWindow") oninit(g_MainWndTabSel = "Home")
Header          = [MainWindow_Header]
Navigator       = [MainWindow_Navigator]
Footer          = [MainWindow_Footer]
Light           = sz(a,a) xy(158,20) at(fixstyle) alias(productstatus) prm(s_ProductStateList) bg("Lights,4,4,4,4,4,5") bp(ctl.bg = s_MainWindowProtectionLight(s_ProdStateSeverity(ProdStateId)), ctl.hotlight = ctl.Banner.hotlight)

[MainWindow_Header]
@                   = sz(p,53) bg("MainWindowHeader") at(fixstyle) rs(100,0)
ResizeBackground    = [MainWindow_Header_ResizeBackground]
Logo                = bg("titlekis") at(clickable) onclick(window("MainWindow:Protection:Home")) sz(a,a) xy(10,8)
Help                = sz(a,a) a(rc) at(clickable) xy(28) f("MainHdr")
S                   = sz(a,a) a(ps) text("|") f("MainHdr") xy(17)
Settings            = sz(a,a) a(ps) at(clickable) f("MainHdr") xy(17) onclick(window("OptionsWindow"))
AlphaWarning        = sz(a,a) xy(266,14) f("Header1White")

[MainWindow_Header_ResizeBackground]
@ = sz(0,p) a(rt) at(fixstyle) rs(100,0) bg("MainWindowCorp")

[MainWindow_Navigator]
@               = alias(navigator) a(la) sz(p,p) xy(,,,27) at(enum,loadpages)
_client_area    = [MainWindow_Navigator__client_area]
Banner          = [MainWindow_Navigator_Banner]
BoxTop          = [MainWindow_Navigator_BoxTop]
Protection      = [MainWindow_NavigatorButton] subst(Name() Descr())
Hips            = [MainWindow_NavigatorButton] ns(SystemWatch) subst(Name() Descr())
Antivirus       = [MainWindow_NavigatorButton] subst(Name() Descr())
OnlineSecurity  = [MainWindow_NavigatorButton] subst(Name() Descr())
ContentFilter   = [MainWindow_NavigatorButton] subst(Name() Descr())
Scan            = [MainWindow_NavigatorButton] ns(Scan_Objects) subst(Name() Descr())
Update          = [MainWindow_NavigatorButton] ns(Updater) subst(Name() Descr())
BoxBottom       = [MainWindow_Navigator_BoxBottom]

[MainWindow_Navigator__client_area]
@ = sz(p,p) xy(208,32) mg(,,8,7)

[MainWindow_Navigator_Banner]
@           = sz(p,33) rs(100,0) at(clickable) ta(lc) alias(productstatus) prm(s_ProductStateList) bg("MainWindowProtectionBanner") bp(ctl.bg = ctl.hotlight ? s_MainWindowProtectionBannerBgHl(s_ProdStateSeverity(ProdStateId)) : s_MainWindowProtectionBannerBg(s_ProdStateSeverity(ProdStateId))) onclick(window("MainWindow:Protection:Home"))
StatusBG    = sz(a,a) a(ac) f(s_MainWindowProtectionBannerBGFont(s_ProdStateSeverity(ProdStateId))) text(s_MainWindowProtectionBannerText(s_ProdStateSeverity(ProdStateId))) xy(247,2)
StatusFG    = sz(a,a) a(ss) f(s_MainWindowProtectionBannerFGFont(s_ProdStateSeverity(ProdStateId))) text(s_MainWindowProtectionBannerText(s_ProdStateSeverity(ProdStateId))) xy(1,1)

[MainWindow_Navigator_BoxTop]
@ = sz(8,24) a(la) at(fixstyle) bg("MainWindowCorp") xy(,,,1) rs(0,0)

[MainWindow_Navigator_BoxBottom]
@ = sz(8,p) a(la) at(fixstyle) bg("MainWindowCorp") rs(0,0)

[MainWindow_Footer]
@                   = sz(p,27) a(lb) at(fixstyle) bg("MainWindowFooter") rs(100,0)
ResizeBackground    = [MainWindow_Footer_ResizeBackground]
Support             = sz(a,a) a(rc) at(clickable) f("MainFtr") xy(21) onclick(window("SupportWindow"))
S                   = sz(a,a) a(ps) text("|") f("MainFtr") xy(7,)
Account             = sz(a,a) a(ps) at(clickable) f("MainFtr") xy(7) onclick(window("MyAccount"))
WndResizer          = sz(a,8) a(rb) at(fixstyle) bg("WndResizer") xy(1,1)

[MainWindow_Footer_ResizeBackground]
@ = sz(0,p) a(rt) at(fixstyle) rs(100,0) bg("MainWindowCorp")

[Value]
@       = sz(p,a) a(lt) ext(1)
Name    = sz(a,a) extprm(1) a(lt)
Val     = sz(a,a) a(rt) extprm(1)

[LValue]
@ = [Value] a(la) subst(Name(a(lc)) Val(a(lt) sz(p,a))) ext(1)

[ActionButton]
@       = a(la) at(btnlike) sz(p,30) ext(1) mg(,,10)
Name    = sz(a,a) ia(lc) ta(l) i(ctl.parent.hotlight ? "WizLink,1,1,1,1,1,1" : "WizLink,0,0,0,0,0,0") f(ctl.parent.hotlight ? "WizLinkHl" : "WizLink") extprm(1)
Descr   = a(la) sz(a,a) xy(46,3) f("MainNavDescr_a") extprm(1)

[Group]
@       = a(la) at(fixstyle) sz(p,a) rs(100,0) xy(,7) ext(1) bg("GroupBody")
Panel   = [Group_Panel]
Body    = [Group_Body]

[Group_Panel]
@       = sz(p,30) at(fixstyle,singleline) bg("GroupHeader") mg(17,,17) extprm(1)
Control = sz(0,0) extprm(1)
Header  = sz(p,p) f("Header1") ta(ac) extprm(1)

[Group_Body]
@ = sz(p,p) a(la) mg(7,7,7,7) extprm(1)

[ProfileHome]
@       = ext(1) sz(p,p) onchanging(checkPassword(#pwdc_SaveSettings))
Tasks   = [Group] xy(0,0) extprm(1) sz(100,240) a(rt) rs(0,0) subst(Header())
Group1  = [Group] extprm(1) xy(7,,,) sz(p,240) a(pt) subst(Body(mg(17,12,17,12) rs(100,100) sz(p,p)))
Group2  = [Group] extprm(1) sz(p,p) subst(Header(at(singleline)) Body(mg(7,7,7,7) rs(100,100) sz(p,p)))

[ProfileStatistic]
@       = ext(1) sz(p,p)
View    = [ProfileStatisticView]

[ProfileStatisticView]
@       = t(splitter) at(rememberdata) sz(p,p)
Group1  = extprm(1) sz(p,p)
Group2  = [Group] extprm(1) a(lt) sz(p,p) subst(Header(at(singleline)) Body(mg(7,7,7,7) rs(100,100) sz(p,p)))

[TaskCheck]
@       = sz(a,a) at(clickable) onclick(s_ProfileStateClick(state)) ext(1)
Icon    = sz(a,a) bg(s_ProfileStateImage(state)) bp(ctl.hotlight = ctl.parent.hotlight)
Text    = a(at) xy(7,1) text($ProfileName + if(!s_IsGroupProfile(name) && lastErr, ": " + s_ProfileError(type, lastErr))) f($ProfileStateFont)

[TaskControlBtns]
@       = a(lt) sz(a,a) ext(1)
Start   = t(bmpbutton) a(lt) bg("TaskBar,0,1,0,2,0,3") at(fixstyle) v("run:" + name) enable(switch(state,"TaskStartEnable")) tt($Start)
Pause   = t(bmpbutton) a(as) bg("TaskBar,5,6,5,7,5,8") at(fixstyle) v("pause:" + name) enable(switch(state,"TaskPauseEnable")) tt($Pause)
Stop    = t(bmpbutton) a(as) bg("TaskBar,10,11,10,12,10,13") at(fixstyle) v("stop:" + name) enable(switch(state,"TaskStopEnable")) tt($Stop)

[MainWindow_NavigatorButton]
@                               = sz(208,53) a(la) at(clickable,fixstyle,radiolike) mg(0,0,8,0) rs(0,0) bg(ctl.selected ? "MainWindowNavSel" : (ctl.hotlight ? "MainWindowNavSep" : "MainWindowNav")) ext(1) alias(task)
LeftPos                         = sz(a,a) xy(20,10)
MainWindowNavigatorButtonText   = [MainWindow_NavigatorButtonText]
SelBox                          = sz(8,p) at(fixstyle) bg(ctl.parent.selected ? "MainWindowCorpHilight" : "MainWindowCorp") xy(,,,1)
Sep                             = sz(p,1) a(as) at(fixstyle) bg("MainWindowNavSep") xy(1,,20) visible(!ctl.parent.selected)
Dummy                           = sz(2,51) a(rt) bg("MainWindowNavColor") xy(-9,1) visible(ctl.parent.selected)

[MainWindow_NavigatorButtonText]
@       = sz(208,a) a(lc) xy(20,0)
Name    = sz(a,a) f(ctl.parent.selected ? (f_IsProfileFailed(state) ? "MainNavNameErr_a" : "MainNavName_a") : (f_IsProfileFailed(state) ? "MainNavNameErr" : "MainNavName")) extprm(1)
Descr   = sz(a,a) a(sa) f(ctl.parent.selected ? "MainNavDescr_a" : "MainNavDescr") extprm(1)

[TaskPageBtn]
@       = at(clickable,fixstyle,singleline,radiolike) ta(cc) sz(112,26) ext(1) bg(ctl.selected ? "MainWindowNavSel" : "MainWindowNav") rs(0,0) mg(,5,,)
SelBox  = [TaskPageBtn_SelBox]
Sep     = sz(1,p) a(rt) xy(,-5) at(fixstyle) bg("MainWindowTabSep") visible(!ctl.parent.selected)
Dummy   = sz(110,2) a(lb) bg("MainWindowNavColor") xy(1,-1) visible(ctl.parent.selected)

[TaskPageBtn_SelBox]
@ = sz(p,5) at(fixstyle) bg("MainWindowCorpHilight") visible(ctl.parent.selected) xy(1,-4,1,)

[ProfileGroup]
@       = a(la) xy(,,,7) at(fixstyle) sz(p,a) rs(100,0) ext(1) bg("GroupBody") alias(taskview)
Header  = [ProfileGroup_Header]
Body    = [ProfileGroup_Body]

[ProfileGroup_Header]
@               = sz(p,30) bg("GroupHeader") mg(17) extprm(1)
Name            = ta(lc) sz(a,p) at(singleline) f("Header1") text($ProfileName)
Scheduler       = t(bmpbutton) a(ac) bg("Scheduler,0,1,0,0,0,0") at(fixstyle) visible(schedule.Mode) tt($SchedulerDescription) sz(15,15) xy(7,) extprm(1)
Progress        = t(progress) a(rc) sz(88,12) v(Completion) visible(state & #StateFlagOperational)
ProgressPercent = sz(a,a) a(pc) xy(7,) text(Completion + "%") f("Normal_Bold") visible(state & #StateFlagOperational)
Status          = a(rc) sz(a,a) visible(!(state & #StateFlagOperational)) f($ProfileStateFont) text(state == #StateFailed ? s_ProfileError(type, lastErr) : $ProfileState)

[ProfileGroup_Body]
@ = extprm(1) sz(p,a) a(la) mg(37,7,17,12)

[RunAsGroup]
@       = $SettingsGroup xy(0,) ext(1)
Enable  = t(check) sz(a,a) v(runas.enable)
AccLbl  = xy(17,23) sz(a,a) enable(runas.enable)
Account = t(edit) sz(84,a) a(as) xy(7,-3) v(runas.account) rs(40,0) enable(runas.enable) onok(if(ctl.enabled && !ctl.value, balloon("NoRunAsAccount")))
PwdLbl  = a(as) xy(11,3) sz(a,a) enable(runas.enable)
Pwd     = t(edit) at(passwordset) sz(p,a) a(as) xy(7,-3) v(bicrypt(runas.password)) rs(50,0) enable(runas.enable)

[WizardTpl]
@       = $DlgAttrBase at(wizard,customfooter) mg(0,0,0,0) sz(500,370) bg("ColorWindow")
Footer  = [WizardTpl_WizardPanel]
Pages   = sz(p,p) xy(,,,31) extprm(1) at(sheetpages)
;WaterMark   = sz(a,a) a(rp) bg("ProtWatermark")

[WizardTpl_WizardPanel]
@                   = a(lb) sz(p,31) rs(100,0) ext(1) extprm(1)
ResizeBackground    = [WizardTpl_WizardPanel_ResizeBackground]
Bckgnd              = sz(a,a) bg("DlgFooter")
WndResizer          = sz(a,8) a(rb) at(fixstyle) bg("WndResizer") xy(1,1)
Help                = $Link a(lc) xy(9,) text($Help) f("MainFtr")
Cancel              = $Link a(rc) xy(9,) text($Cancel) f("MainFtr") extprm(1)
Back                = $Link a(pc) xy(25,) f("MainFtr") extprm(1)

[WizardTpl_WizardPanel_ResizeBackground]
@ = sz(p,p) at(fixstyle) rs(100,0) bg("MainWindowCorp") xy(384)

[WizardPage]
@       = ext(1) sz(p,p)
Header  = [WizardPage_Header]
Body    = a(la) sz(p,p) mg(27,27,27,7) extprm(1)

[WizardPage_Header]
@                   = sz(p,65) at(singleline,fixstyle) ta(lc) bg("MainWindowHeader") f("Header1") extprm(1)
ResizeBackground    = sz(0,p) at(fixstyle) rs(100,0) bg("MainWindowCorp") a(rt)
Name                = sz(a,a) xy(27,12,7) f("Bold11White") extprm(1)
Descr               = sz(a,a) a(sa) xy(,3,7) f("Normal_White") extprm(1)

[WizardButton]
@       = at(btnlike) a(la) sz(a,a) xy(10,15) ext(1)
Ptr     = sz(a,a) a(la) i(ctl.parent.hotlight ? "WizLink,1,1,1,1,1,1" : "WizLink,0,0,0,0,0,0")
Name    = sz(a,a) ta(lc) f(ctl.parent.hotlight ? "WizLinkHl" : "WizLink") extprm(1) a(at) xy(,5)
Descr   = a(sa) sz(a,a) extprm(1) xy(,2)

[LWizardButton]
@ = [WizardButton] subst(Name(i("listctrls,5,5,5,5,5,5")))

[MyAccount]
@       = $DlgAttrBase sz(410,410) at(a_close) bg("ColorWindow") alias(task)
Body    = [MyAccount_Body]

[MyAccount_Body]
@       = sz(p,p) xy(,,,$DialogPanelSizeY)
Keys    = [MyAccount_Body_Keys]
Actions = [MyAccount_Body_Actions]

[MyAccount_Body_Keys]
@       = $SettingsGroup xy(0,) mg(15,8,15,0)
Info    = [ConfigureWizard.ActivationChooseKey_Info_KeyInfo] mg(0,0,0,0) subst(ExpirationDate(subst(Name(f("Normal_Bold")) Val(text(date(LicInfo.KeyExpirationDate)) f("Normal_Bold")))))

[MyAccount_Body_Actions]
@           = $SettingsGroup sz(p,p) xy(0,20)
Activate    = [WizardButton] onclick(activate()) xy(,15) sz(p,a) subst(Name() Descr())
RemoveKey   = [WizardButton] onclick(if(msg("LicenseRemoveKeyWarning", #m_yesno), removeActiveKey())) xy(,15) sz(p,a) visible(LicInfo.KeyInfo.KeyType != #ektUnknown) subst(Name() Descr())
BuyRenew    = [WizardButton] onclick(url(LicInfo.KeyInfo.KeyType == #ektTrial ? settings.LicBuyLink : settings.LicRenewLink)) xy(,15) sz(p,a) subst(Name() Descr())

[SupportWindow]
@       = $DlgAttrBase sz(503,356) at(a_close) bg("ColorWindow") alias(taskview)
Body    = [SupportWindow_Body]

[SupportWindow_Body]
@       = sz(p,p) xy(,,,$DialogPanelSizeY)
SysInfo = [SupportWindow_Body_SysInfo]
Links   = [SupportWindow_Body_Links]

[SupportWindow_Body_SysInfo]
@           = $SettingsGroup xy(0,) mg(15,8,15,0)
ProdVer     = [LValue] a(la) subst(Name(a(lt)) Val(xy(200) text(env("ProductVersion") + if(ProductHotfix, " (" + global.ProductHotfix + ")"))))
Signatures  = [LValue] a(la) xy(,7) subst(Name(a(lt)) Val(xy(200) text(datetime(AVService.BasesDate))))
OSVer       = [LValue] a(la) xy(,7) subst(Name(a(lt)) Val(xy(200) text(global.OSVersion)))

[SupportWindow_Body_Links]
@       = $SettingsGroup sz(p,p) xy(0,20) mg(15,8,15,0)
Support = [WizardButton] onclick(url("support.kaspersky.com")) xy(,15) subst(Name() Descr())
Forum   = [WizardButton] onclick(url("forum.kaspersky.com")) xy(,15) sz(p,a) subst(Name() Descr())
Cabinet = [WizardButton] xy(,15) onclick(url("https://support.kaspersky.com/" + env("Localization") + "/PersonalCabinet")) subst(Name() Descr())

[Product_Notification]
@       = t(dialog) sz(392,a) at(nocaption,dragable,layered,bottom,noautofocus) onchange(if(CheckSound, sound(s_ProductNotificationSound(Severity)))) mg(3,3) prm($ProductNotificationText) bg("WindowRedBorder") bp(ctl.bg = s_NotifyWindowBorder(s_NotifySeverity2ProdStateSeverity(Severity)))
Body    = [Product_Notification_Body]

[Product_Notification_Body]
@           = sz(p,a) bg("ColorWindow") mg(1,1)
HdrTop      = [Product_Notification_Body_HdrTop]
DescrBody   = [Product_Notification_Body_DescrBody]

[Product_Notification_Body_HdrTop]
@       = sz(p,32) bg("DlgFooterRed") bp(ctl.bg = s_NotifyWindowHeader(s_NotifySeverity2ProdStateSeverity(Severity)))
Logo    = sz(a,a) a(lc) xy(10,-1) f("Header1White") bg("titlekissm")
Close   = sz(a,a) a(rc) at(clickable) xy(12,3) f("Bold11White") onclick(close()) text("x")
Options = sz(a,a) at(clickable) a(pc) xy(10,1) text("+") f("Bold11White") visible(global.settings.EnableInteraction) onclick(menu("Product_Notification_OptionsMenu"))

[Product_Notification_Body_DescrBody]
@       = sz(p,a) a(la) mg(15,15)
Descr   = sz(a,a) text(DisplayText) a(ct)
Link    = [ActionButton] onclick($ProductNotificationLink) visible(ProdStateId && ProdStateId != #ProdStateSomeSkipped) sz(p,30) rs(0,0) xy(,15) subst(Name(bp(ctl.text = $ProductNotificationLinkText; ctl.parent.visible = ctl.text)))

[Product_Notification_OptionsMenu]
@                   = t(menu)
;bg("MenuIconBg")
NotifyDisable
NotifyDisableAll
sep
NotifyConfigure     = onclick(window("OptionsWindow:Notifications")) text($Configure)

[LabelShadow]
@       = sz(a,a) ext(1)
Name    = sz(a,a) xy(1,1) extprm(1)
Fore    = sz(a,a) text(ctl.Name.text) extprm(1)

;------------- ProductInfo --------------

[ProductInfo]
@       = $DlgAttrBase sz(300,a) mg(0,0) at(dragable,fixstyle,a_close,nohelp)
Logo    = [ProductInfo_Logo]
Body    = [ProductInfo_Body]

[ProductInfo_Logo]
@       = at(chklike,clickable) sz(p,65) bg("MainWindowHeader")
Title   = a(lc) xy(14) bg(ctl.Logo.selected ? "titlekisteam" : "titlekis")

[ProductInfo_Body]
@       = a(la) sz(p,250) xy(,,,$ButtonsLineSizeY)
About   = [ProductInfo_Body_About] visible(!ctl.Logo.selected)
Credits = t(credits) sz(p,p) xy(,,,7) visible(ctl.Logo.selected)

[ProductInfo_Body_About]
@           = sz(p,a) mg(15,5)
Product     = a(lt) sz(a,a) f("Normal_Bold")
Copyright   = a(la) xy(,7) sz(a,a) f("Normal_Bold") text(global.Copyright)
Warning     = a(la) xy(0,15) sz(p,a)
Warning2    = a(sa) xy(,7) sz(a,a)
