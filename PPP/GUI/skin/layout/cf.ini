[Templates]
$ParCtlCurProfile = (state & #StateFlagOperational ? nCurUserProfileId : ProfileId)

[MainWindow.ContentFilter]
@           = $TaskTab ext(1)
WorkArea    = [MainWindow.ContentFilter_WorkArea]
Home        = [TaskPageBtn] a(lt)
Events      = [TaskPageBtn] a(at)
Statistics  = [TaskPageBtn] a(at)

[MainWindow.ContentFilter_WorkArea]
@           = $TaskWorkArea
Home        = [ProfileHome] $TaskPanel alias(taskview) ns(ContentFilter) subst(Tasks(subst(Body([MainWindow.ContentFilter.Tasks.Body]))) Group1(subst(Control(xy(-9,7) [TaskCheck]) Body([MainWindow.ContentFilter_WorkArea_Home_Body]))) Group2(subst(Header() Body([MainWindow.ContentFilter_WorkArea_SysPerf]))))
Events      = [Product_Events] $TaskPanel subst(Report(filter(TaskGroup == #eTASK_GROUP_UC) prm(#dbRTP)) Action(visible(0)) views([MainWindow.Antivirus_Filters]))
Statistics  = [MainWindow.ContentFilter_WorkArea_Statistics]

[MainWindow.ContentFilter_WorkArea_Statistics]
@ = $TaskPanel

[MainWindow.ContentFilter_WorkArea_Home_Body]
@           = sz(p,p) ext(1)
Anti_Spam   = [MainWindow.ContentFilter.Anti_Spam.Body] xy(,,,7)
AdBlocker   = [MainWindow.ContentFilter.AdBlocker.Body] xy(,,,7)
ParCtl      = [MainWindow.ContentFilter.ParCtl.Body] xy(,,,7)

[MainWindow.ContentFilter_WorkArea_SysPerf]
@       = sz(p,p) ext(1)
Legend  = [MainWindow.ContentFilter_WorkArea_SysPerf_Legend]
Chart   = [MainWindow.ContentFilter_WorkArea_SysPerf_Chart]

[MainWindow.ContentFilter_WorkArea_SysPerf_Legend]
@           = xy(30,,1,3) sz(p,a)
Legend1     = a(lt) sz(12,12) bg("LegendRed")
LegendText1 = xy(5,-1) a(as) sz(a,a)
Legend2     = a(at) xy(16) sz(12,12) bg("LegendYello") use(0)
LegendText2 = xy(5,-1) a(as) sz(a,a) use(0)
Legend3     = a(at) xy(16) sz(12,12) bg("LegendGreen")
LegendText3 = xy(5,-1) a(as) sz(a,a)
Legend4     = a(at) xy(16) sz(12,12) bg("LegendYello")
LegendText4 = xy(5,-1) a(as) sz(a,a)


[MainWindow.ContentFilter_WorkArea_SysPerf_Chart]
@       = t(chart) cprops(line,diff,60) refresh(1000) at(noborder) a(la) sz(p,p) xy(,,14)
line1   = v(Anti_Spam.MailSpamCount) color(window_red)
line2   = v(popupchk.nPopupsBlocked) color(window_yellow) use(0)
line3   = v(AdBlocker.nURLsDetected) color(window_green)
line    = v(ParCtl.nURLsDetected) color(window_yellow)

[MainWindow.ContentFilter.Anti_Spam.Body]
@       = $TaskSubGroup
Check   = [TaskCheck]
Level   = [Value] $TaskVal xy(23,5) subst(Name() Val($Link text($SettingsLevel) onclick(menu("SettingsLevelMenu.Anti_Spam")) a(lt) xy(150)))
Bases   = [Value] $TaskVal xy(23,5) subst(Name() Val(a(lt) xy(150)))
;Dispatcher  = $TaskVal subst(Name() Val(text(ShowMailwasher ? $Enabled : $Disabled)))

[MainWindow.ContentFilter.ParCtl.Body]
@       = $TaskSubGroup
Check   = [TaskCheck]
Level   = [Value] $TaskVal xy(23,5) subst(Name() Val($Link text(switch(find(Profiles, "Id == $ParCtlCurProfile").Level, "SettingsLevel")) onclick(menu("SettingsLevelMenu_ParCtl")) a(lt) xy(150)))
Profile = [Value] $TaskVal xy(23,5) subst(Name() Val($Link text(s_ParCtlProfileName($ParCtlCurProfile)) a(lt) xy(150) onclick(dialog("ParCtl_SwitchProfile_Dialog"))))

[MainWindow.ContentFilter.AdBlocker.Body]
@           = $TaskSubGroup
Check       = [TaskCheck]
Database    = [Value] $TaskVal xy(23,5) subst(Name() Val(text(size(blist)) a(lt) xy(150)))
BlackWhite  = [Value] $TaskVal xy(23,5) subst(Name() Val($Link a(lt) xy(150) onclick(dialog("AdBlockerSettings"))))

[MainWindow.ContentFilter.Tasks.Body]
@           = sz(p,p) ext(1)
TrainWizard = [MainWindow.ContentFilter.Tasks.Body_TrainWizard]

[MainWindow.ContentFilter.Tasks.Body_TrainWizard]
@               = a(la) sz(p,a) xy(,10)
TrainWizard     = $Link sz(90,a) i("TaskAsTrain") ia(ct) onclick(window("OutlookPlugun.TrainingWizard"))
TrainWizardDesc = a(ls) xy(110) sz(a,a) at(dynshow)

[AdBlockerSettings]
@   = $DlgAttr at(resizable) alias(taskedit) sz(330,300) text($ProfileName) onok(checkPassword(#pwdc_SaveSettings))
Tab = [AdBlockerSettings_Tab]

[AdBlockerSettings_Tab]
@       = $Tab
General = [AdBlockerSettings_Tab_General]
Black   = [AdBlockerSettings_Tab_Black]
White   = [AdBlockerSettings_Tab_White]

[AdBlockerSettings_Tab_General]
@               = sz(p,p)
UseHeuristics   = $Check v(embscr)
List            = [AdBlockerSettings_Tab_General_List]

[AdBlockerSettings_Tab_General_List]
@       = $List a(la) alias(vector) at(noheader) xy(0,$Group_Shift) v(blist)
Name    = at(checked) sz(a) text(Name) v(Enabled)

[AdBlockerSettings_Tab_Black]
@       = $List alias(vector) at(noheader) v(ublist)
Name    = at(checked) sz(a) text(Name) v(Enabled)
footer  = [Grid.Footer.Template] subst(Add(onclick(dialog("AdBlocker_RuleEdit", "Black"))))
rowedit = [Grid.Editor.Template]

[AdBlockerSettings_Tab_White]
@       = $List alias(vector) at(noheader) v(wlist)
Name    = at(checked) sz(a) text(Name) v(Enabled)
footer  = [Grid.Footer.Template] subst(Add(onclick(dialog("AdBlocker_RuleEdit", "White"))))
rowedit = [Grid.Editor.Template]

[AdBlocker_RuleEdit]
@ = [EditSimpleItem] h(1258) subst(Example()) ext(1)

;------------- AntiSpamSettings -----------

[AntiSpamSettings]
$IsLat  = env("Localization") == "en"
@       = $DlgAttr at(resizable) alias(taskedit) sz(433,426) text($ProfileName) onok(checkPassword(#pwdc_SaveSettings))
Tab     = [AntiSpamSettings_Tab]

[AntiSpamSettings_Tab]
@       = $Tab
White   = [AntiSpamSettings_Tab_White]
Black   = [AntiSpamSettings_Tab_Black]
Bayes   = [AntiSpamSettings_Tab_Bayes]
Options = [AntiSpamSettings_Tab_Options]
;General = [AntiSpamSettings_Tab_General]

[AntiSpamSettings_Tab_White]
@               = sz(p,p) enable(level != 4)
TrustedSenders  = [AntiSpamSettings_Tab_White_TrustedSenders]
TrustedWords    = [AntiSpamSettings_Tab_White_TrustedWords]

[AntiSpamSettings_Tab_White_TrustedSenders]
@       = $SettingsGroup sz(p,160) a(lt) rs(100,50)
Check   = $Check v(UseWhiteAddresses)
TSList  = [AntiSpamSettings_Tab_White_TrustedSenders_TSList]

[AntiSpamSettings_Tab_White_TrustedSenders_TSList]
@       = $List alias(vector) xy(,3) at(sorted) a(la) enable(UseWhiteAddresses) v(WhiteAddrs) unique(Rule == newItem.Rule)
Rule    = at(checked) text(Rule) v(Enabled)
footer  = [Grid.Footer.Template] subst(Add(onclick(dialog("AntiSpam_AddressEdit", "TSList"))))
rowedit = [Grid.Editor.Template]

[AntiSpamSettings_Tab_White_TrustedWords]
@       = $SettingsGroup xy(,5) sz(p,p)
Check   = $Check v(UseWhiteWords)
TWList  = [AntiSpamSettings_Tab_White_TrustedWords_TWList]

[AntiSpamSettings_Tab_White_TrustedWords_TWList]
@       = $List alias(vector) xy(,3) at(sorted) a(la) enable(UseWhiteWords) v(WhiteWords) unique(Rule == newItem.Rule)
Rule    = at(checked) text(Rule) v(Enabled)
footer  = [Grid.Footer.Template] subst(Add(onclick(dialog("AntiSpam_WordEdit", "TWList"))))
rowedit = [Grid.Editor.Template]

[AntiSpamSettings_Tab_Black]
@               = sz(p,p) enable(level != 5)
BlockedSenders  = [AntiSpamSettings_Tab_Black_BlockedSenders]
BlockedWords    = [AntiSpamSettings_Tab_Black_BlockedWords]

[AntiSpamSettings_Tab_Black_BlockedSenders]
@       = $SettingsGroup sz(p,160) a(lt) rs(100,50)
Check   = $Check v(UseBlackAddresses)
BSList  = [AntiSpamSettings_Tab_Black_BlockedSenders_BSList]

[AntiSpamSettings_Tab_Black_BlockedSenders_BSList]
@       = $List alias(vector) xy(,3) at(sorted) a(la) enable(UseBlackAddresses) v(BlackAddrs) unique(Rule == newItem.Rule)
Rule    = at(checked) text(Rule) v(Enabled)
footer  = [Grid.Footer.Template] subst(Add(onclick(dialog("AntiSpam_AddressEdit", "BSList"))))
rowedit = [Grid.Editor.Template]

[AntiSpamSettings_Tab_Black_BlockedWords]
@       = $SettingsGroup xy(,5) sz(p,p)
Check   = $Check v(UseBlackWords)
BWList  = [AntiSpamSettings_Tab_Black_BlockedWords_BWList]

[AntiSpamSettings_Tab_Black_BlockedWords_BWList]
@       = $List alias(vector) xy(,3) at(sorted) a(la) enable(UseBlackWords) v(BlackWords) unique(Rule == newItem.Rule)
Rule    = at(checked) text(Rule) v(Enabled)
Level   = text(Level)
footer  = [Grid.Footer.Template] subst(Add(onclick(dialog("AntiSpam_BlackWordEdit", "BWList"))))
rowedit = [Grid.Editor.Template]

[AntiSpamSettings_Tab_Bayes]
@               = sz(p,p) enable(level < 4)
General         = [AntiSpamSettings_Tab_Bayes_General]
CertainSpam     = [AntiSpamSettings_Tab_Bayes_CertainSpam]
PossibleSpam    = [AntiSpamSettings_Tab_Bayes_PossibleSpam]
ExcludesSpam    = [AntiSpamSettings_Tab_Bayes_ExcludesSpam]

[AntiSpamSettings_Tab_Bayes_General]
@           = $SettingsGroup
EnableBayes = $Check v(UseBayesian)
Graphics    = $Check a(la) xy(,7) v(UseGSG)
Headers     = $Check a(la) xy(,7) v(UsePDB)

[AntiSpamSettings_Tab_Bayes_CertainSpam]
@                   = $SettingsGroup enable(UseGSG || UsePDB || UseBayesian)
Text                = sz(p,a)
CertainSpamSlider   = t(slider) a(la) sz(p,30) xy(,,60) nl(1,99) v(ProbableSpamHighLevel)
CertainSpamRate     = t(edit) at(number) a(rs) sz(50) nl(1,99) v(ProbableSpamHighLevel)

[AntiSpamSettings_Tab_Bayes_PossibleSpam]
@                   = $SettingsGroup enable(UseGSG || UsePDB || UseBayesian)
Text                = sz(p,a)
PossibleSpamSlider  = t(slider) a(la) xy(,,60) sz(p,30) nl(1,99) v(ProbableSpamLowLevel)
PossibleSpamRate    = t(edit) at(number) a(rs) sz(50) nl(1,99) v(ProbableSpamLowLevel)

[AntiSpamSettings_Tab_Bayes_ExcludesSpam]
@                   = $SettingsGroup
DontCheckMsExNative = $Check v(UseCannotBeSpamValidate.Enabled)

[AntiSpamSettings_Tab_Options]
@       = sz(p,p)
Common  = [AntiSpamSettings_Tab_Options_Common]

[AntiSpamSettings_Tab_Options_Common]
@                       = $SettingsGroup enable(UsePerUserSettings)
Not4me                  = $Check v(UseNotForMeValidate.Enabled)
MyAdresses              = $Button_Medium a(rs) xy(,-4) enable(UseNotForMeValidate.Enabled) onclick(dialog("AntiSpam_AddressList"))
Objects                 = $Check a(la) xy(,7) v(UseObjectsValidate.Enabled)
ObjectsLabel            = a(rs)
ObjectsLevel            = t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseObjectsValidate.Enabled) v(UseObjectsValidate.Level)
ExternalObjects         = $Check a(la) xy(,7) v(UseExternalObjectsValidate.Enabled)
ExternalObjectsLabel    = a(rs)
ExternalObjectsLevel    = t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseExternalObjectsValidate.Enabled) v(UseExternalObjectsValidate.Level)
UnknownDefs             = $Check a(la) xy(,7) v(UseHTMLValidate_UnknownDefsCount.Enabled)
UnknownDefsLabel        = a(rs)
UnknownDefsLevel        = t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseHTMLValidate_UnknownDefsCount.Enabled) v(UseHTMLValidate_UnknownDefsCount.Level)
SeemsColors             = $Check a(la) xy(,7) v(UseHTMLValidate_SeemsColors.Enabled)
SeemsColorsLabel        = a(rs)
SeemsColorsLevel        = t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseHTMLValidate_SeemsColors.Enabled) v(UseHTMLValidate_SeemsColors.Level)
SmallText               = $Check a(la) xy(,7) v(UseHTMLValidate_SmallText.Enabled)
SmallTextLabel          = a(rs)
SmallTextLevel          = t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseHTMLValidate_SmallText.Enabled) v(UseHTMLValidate_SmallText.Level)
InvisibleChar           = $Check a(la) xy(,7) v(UseHTMLValidate_InvisibleCharCount.Enabled)
InvisibleCharLabel      = a(rs)
InvisibleCharLevel      = t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseHTMLValidate_InvisibleCharCount.Enabled) v(UseHTMLValidate_InvisibleCharCount.Level)
Scripts                 = $Check a(la) xy(,7) v(UseHTMLValidate_Scripts.Enabled)
ScriptsLabel            = a(rs)
ScriptsLevel            = t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseHTMLValidate_Scripts.Enabled) v(UseHTMLValidate_Scripts.Level)
HiddenElements          = $Check a(la) xy(,7) v(UseHTMLValidate_HiddenElements.Enabled)
HiddenElementsLabel     = a(rs)
HiddenElementsLevel     = t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseHTMLValidate_HiddenElements.Enabled) v(UseHTMLValidate_HiddenElements.Level)
NonLatLimit             = use($IsLat) $Check a(la) xy(,7) v(UseNonLatLimit.Enabled)
NonLatLimitPercent      = use($IsLat) t(edit) at(number) a(as) sz(50) nl(1,100) xy(1,-3) enable(UseNonLatLimit.Enabled) v(NonLatLimit)
NonLatLimitpart2        = use($IsLat) a(as) xy(2,2)
NonLatLimitLabel        = use($IsLat) a(rs)
NonLatLimitLevel        = use($IsLat) t(edit) at(number) a(ps) sz(50) nl(1,100) xy(,-2) enable(UseNonLatLimit.Enabled) v(UseNonLatLimit.Level)
Empty                   = $Check a(la) xy(,7) v(UseEmptyValidate.Enabled)

[AntiSpam_AddressList]
@       = $DlgAttr sz(300,250) at(resizable) ext(1)
List    = [AntiSpam_AddressList_List]

[AntiSpam_AddressList_List]
@       = $List alias(vector) xy(,,,$DialogPanelSizeY) at(noheader) v(MyAddrs)
Rule    = at(checked) sz(a) text(Rule) v(Enabled)
footer  = [Grid.Footer.Template] subst(Add(onclick(dialog("AntiSpam_AddressEdit", "List"))))
rowedit = [Grid.Editor.Template]

[AntiSpam_AddressEdit]
@ = [EditSimpleItem] subst(Name(v(Rule) onok(if(!Rule, balloon("AdressNotSpecified")))) Example(visible(0))) ext(1)

[AntiSpam_WordEdit]
@ = [EditSimpleItem] subst(Name(v(Rule)) onok(if(!Rule, balloon("WordNotSpecified")))) Example()) ext(1)

[AntiSpam_BlackWordEdit]
@           = $DlgAttr sz(320,a) alias(settings)
Rule        = t(edit) nl(100) sz(p) v(Rule)
Example     = a(la) f("Normal_Grey") sz(a,a)
LevelText   = a(la) xy(,7) sz(a,a)
Level       = t(edit) at(number) a(rs) sz(50) nl(0,100) xy(,-2,,$DialogPanelSizeY) v(Level)

[SettingsLevelMenu.Anti_Spam]
@ = [SettingsLevelMenu] subst(Customize(onclick(dialog("AntiSpamSettings")))) ext(1)

[ParCtl_SwitchProfile_Dialog]
@       = $DlgAttr sz(350,a) h(1333)
Body    = [ParCtl_SwitchProfile_Dialog_Body]

[ParCtl_SwitchProfile_Dialog_Body]
@           = sz(p,a) xy(,,,$DialogPanelSizeY)
Descr       = a(lt) xy(,,,$Control_Shift)
ProfileLbl  = a(la) xy(10,$Control_Shift)
Profile     = a(ls) xy(140,$Edit_CenterOffsetY) sz(p) t(combo) alias(urlflt_profiles_combo) v(nRes)
PasswdLbl   = a(la) xy(10,$Control_Shift)                                             enable(nRes != #eParCtl_ProfId_Child)
Passwd      = a(ls) xy(140,$Edit_CenterOffsetY) sz(p) t(edit) at(password) v(strVal1) enable(nRes != #eParCtl_ProfId_Child)

[ParCtlSettings]
@   = $DlgAttr at(resizable) sz(385,401) alias(taskedit) text($ProfileName) onok(checkPassword(#pwdc_SaveSettings))
Tab = [ParCtlSettings_Tab]

[ParCtlSettings_Tab]
@           = $Tab
Profile3    = [ParCtlSettings_Tab_Profile3]
Profile2    = [ParCtlSettings_Tab_Profile2]
Profile1    = [ParCtlSettings_Tab_Profile1]

[ParCtlSettings_Tab_Profile3]
@           = sz(p,p) text(s_ParCtlProfileName(#eParCtl_ProfId_Child)) ns(find(Profiles, "Id == #eParCtl_ProfId_Child"))
Descr       = sz(273,a) a(ct) xy(,16,,16) f("Normal_Grey")
Settings    = [ParCtlProfileSettView] a(la)

[ParCtlSettings_Tab_Profile2]
@           = sz(p,p) text(s_ParCtlProfileName(#eParCtl_ProfId_Teen)) ns(find(Profiles, "Id == #eParCtl_ProfId_Teen"))
Operate     = [ParCtlProfileOperateView]
Settings    = [ParCtlProfileSettView] a(la) xy(,7)

[ParCtlSettings_Tab_Profile1]
@       = sz(p,p) text(s_ParCtlProfileName(#eParCtl_ProfId_Parent)) ns(find(Profiles, "Id == #eParCtl_ProfId_Parent"))
Operate = [ParCtlProfileOperateView]
Descr   = sz(273,a) a(ca) xy(-3,48,,16) f("Normal_Grey")

[ParCtlProfileSettView]
@           = ext(1) sz(p,a) enable(Enabled)
SecurityGrp = [ParCtlProfileSettView_SecurityGrp]
ActionGrp   = [ParCtlProfileSettView_ActionGrp]
TimeGrp     = [ParCtlProfileSettView_TimeGrp]

[ParCtlProfileSettView_SecurityGrp]
@           = $SettingsGroup sz(p,93) xy(,$Group_Shift)
ProtLevel   = t(slider) sz(46,p) nl(0,2) at(vertical) v(bswitch(Level, "LevelGroup3_ProtLevel")) onchange(Filter.DenyCategoriesMask = switch(Level, "ParCtlProfileDefCategories")) visible(Level != #SETTINGS_LEVEL_CUSTOM)
ProtGroup   = [ParCtlProfileSettView_SecurityGrp_ProtGroup]
Reset       = $Button_Medium a(rb) tt($GroupLevelReset) onclick(Level = #SETTINGS_LEVEL_DEFAULT; Filter.DenyCategoriesMask = switch(Level, "ParCtlProfileDefCategories")) enable(Level != #SETTINGS_LEVEL_DEFAULT) text($ResetLevel)
Customize   = $Button_Medium a(pb) xy($Button_Shift,) text($Customize) tt($GroupLevelCustomize) onclick(dialog("ParCtl_ProfileFilter_Dlg"))

[ParCtlProfileSettView_SecurityGrp_ProtGroup]
@           = a(at) xy(10) sz(p,a)
HeaderText  = f("Header1") text(switch(Level, "SettingsLevel")) sz(a,a)
DescrText   = a(la) xy(10) sz(p) text(switch(Level, "ParCtl_ProtLevelDescr"))

[ParCtlProfileSettView_ActionGrp]
@           = $SettingsGroup v(DenyBadURL) xy(,$Group_Shift)
ReportOnly  = $Radio a(lt) v(0)
DenyReport  = $Radio xy(,7) v(1)

[ParCtlProfileSettView_TimeGrp]
@           = $SettingsGroup xy(,$Group_Shift)
TimeEdit    = $Button_Medium a(rc) onclick(dialog("ParCtl_ProfileTime_Dlg")) text($Customize)
TimeView    = [ParCtlProfileSettView_TimeGrp_TimeView]

[ParCtlProfileSettView_TimeGrp_TimeView]
@               = a(pt) sz(p,a) xy(7)
DayTimeLimit    = [Value] a(la) subst(Name() Val(text(UseDayTimeLimit ? (DayTimeLimit ? timestampshort(DayTimeLimit) : $DayTimeFullRestriction) : $DayTimeUnlimited)))
DayTimeSpace    = [Value] a(la) xy(,7) subst(Name() Val(text(UseDayTimeSpace ? (size(DayTimeSpace, "Enabled == 1") ? format(DayTimeSpace, "if(Enabled, timeshort(TimeFrom) + \"-\" + timeshort(TimeTo))") : $DayTimeFullRestriction) : $DayTimeUnlimited)))

[ParCtlProfileOperateView]
@               = sz(p,a) ext(1)
Enable          = t(check) sz(a,a) xy(8,7) v(Enabled)
Identification  = [ParCtlProfileOperateView_Identification]

[ParCtlProfileOperateView_Identification]
@           = $SettingsGroup xy(0,10) enable(Enabled)
PasswordLbl = sz(a,a)
Password    = t(edit) sz(180,a) a(as) xy(7,$Edit_CenterOffsetY) at(passwordset) v(bicrypt(Password))
Button1     = $Button_Medium a(rs) xy(,-1) onclick(dialog("ParCtl_ProfileAccounts"))

[SettingsLevelMenu_ParCtl]
@ = [SettingsLevelMenuBase] ns(find(Profiles, "Id == $ParCtlCurProfile")) subst(Level(v(Level) onchange(Filter.DenyCategoriesMask = switch(Level, "ParCtlProfileDefCategories"))) Customize(bp(ctl.selected = Level == #SETTINGS_LEVEL_CUSTOM) onclick(dialog("ParCtlSettings:Profile" + Id))))

;---------- ParCtl_ProfileTime_Dlg --------------

[ParCtl_ProfileTime_Dlg]
@       = $DlgAttr sz(350,a) h(1351) alias(settings)
Body    = [ParCtl_ProfileTime_Dlg_Body]

[ParCtl_ProfileTime_Dlg_Body]
@               = sz(p,a) xy(,,,$DialogPanelSizeY)
DayTimeLimitGrp = [ParCtl_ProfileTime_Dlg_Body_DayTimeLimitGrp]
DayTimeSpaceGrp = [ParCtl_ProfileTime_Dlg_Body_DayTimeSpaceGrp]

[ParCtl_ProfileTime_Dlg_Body_DayTimeLimitGrp]
@               = $SettingsGroup text( ) enable(UseDayTimeLimit) xy(,7,,7)
UseDayTimeLimit = $CheckForGroup v(UseDayTimeLimit)
DayTimeLimit    = t(timeedit) sz(100,22) at(seconds) v(DayTimeLimit)

[ParCtl_ProfileTime_Dlg_Body_DayTimeSpaceGrp]
@               = $SettingsGroup text( ) xy(,7,,7)
UseDayTimeSpace = $CheckForGroup v(UseDayTimeSpace)
List            = [ParCtl_ProfileTime_Dlg_Body_DayTimeSpaceGrp_List]

[ParCtl_ProfileTime_Dlg_Body_DayTimeSpaceGrp_List]
@       = $List alias(vector) at(noheader,checked) sz(p,100) v(DayTimeSpace) enable(UseDayTimeSpace) unique(TimeFrom == newItem.TimeFrom && TimeTo == newItem.TimeTo)
Range   = at(checked) text(timeshort(TimeFrom) + "-" + timeshort(TimeTo)) v(Enabled)
footer  = [Grid.Footer.Template]  subst(Add(onclick(dialog("ParCtl_DayTimeSpaceGrp_Edit", "List"))))
rowedit = [Grid.Editor.Template] 

;---------- ParCtl_DayTimeSpaceGrp.Edit -----------

[ParCtl_DayTimeSpaceGrp_Edit]
@       = $DlgAttr sz(260,a) h(1355) alias(settings)
Body    = [ParCtl_DayTimeSpaceGrp_Edit_Body]

[ParCtl_DayTimeSpaceGrp_Edit_Body]
@           = sz(p,a) xy(,,,$DialogPanelSizeY)
Text        = a(la) xy(,7) sz(p,a)
From        = a(la) xy(15,10) sz(a,a)
TimeFrom    = t(timeedit) a(as) sz(60,20) xy(7,-3) v(TimeFrom) at(seconds)
To          = a(as) xy(7,3) sz(a,a)
TimeTo      = t(timeedit) a(as) sz(60,20) xy(7,-3) v(TimeTo) at(seconds)

;---------- ParCtl_ProfileFilter_Dlg --------------

[ParCtl_ProfileFilter_Dlg]
@       = $DlgAttr sz(350,400) at(resizable) h(1337) alias(settings) onok(if(Filter.DenyCategoriesMask != switch(Level, "ParCtlProfileDefCategories"), Level = #SETTINGS_LEVEL_CUSTOM))
Body    = [ParCtl_ProfileFilter_Dlg_Body]

[ParCtl_ProfileFilter_Dlg_Body]
@               = $Tab
CategoriesPage  = [ParCtl_ProfileFilter_Dlg_Body_CategoriesPage]
WhiteListPage   = [ParCtl_ProfileFilter_Dlg_Body_WhiteListPage]
BlackListPage   = [ParCtl_ProfileFilter_Dlg_Body_BlackListPage]

[ParCtl_ProfileFilter_Dlg_Body_CategoriesPage]
@                       = h(1337) sz(p,p)
CategoriesDescr         = xy(,,,15) sz(a,a)
DenyCategoryPorno       = $Check xy($Control_Shift) v(bmask(Filter.DenyCategoriesMask, #eUrlFltCategoryPorno))
DenyCategoryDrugs       = $Check a(sa) xy(,$Control_Shift) v(bmask(Filter.DenyCategoriesMask, #eUrlFltCategoryDrugs))
DenyCategoryViolence    = $Check a(sa) xy(,$Control_Shift) v(bmask(Filter.DenyCategoriesMask, #eUrlFltCategoryViolence))
DenyCategoryUncens      = $Check a(sa) xy(,$Control_Shift) v(bmask(Filter.DenyCategoriesMask, #eUrlFltCategoryUncens))
DenyCategoryWeapons     = $Check a(sa) xy(,$Control_Shift) v(bmask(Filter.DenyCategoriesMask, #eUrlFltCategoryWeapons))
DenyCategoryGambling    = $Check a(sa) xy(,$Control_Shift) v(bmask(Filter.DenyCategoriesMask, #eUrlFltCategoryGambling))
DenyCategoryChat        = $Check a(sa) xy(,$Control_Shift) v(bmask(Filter.DenyCategoriesMask, #eUrlFltCategoryChat))
DenyCategoryWebMail     = $Check a(sa) xy(,$Control_Shift) v(bmask(Filter.DenyCategoriesMask, #eUrlFltCategoryWebMail))

[ParCtl_ProfileFilter_Dlg_Body_WhiteListPage]
@       = h(1352) sz(p,p)
List    = [ParCtl_ProfileFilter_Dlg_Body_WhiteListPage_List]

[ParCtl_ProfileFilter_Dlg_Body_WhiteListPage_List]
@       = $List alias(vector) at(checked,noheader) v(Filter.WhiteList)
Name    = at(checked) text(Name) v(Enabled)
footer  = [Grid.Footer.Template]  subst(Add(onclick(dialog("ParCtl_Url.Edit", "List"))))
rowedit = [Grid.Editor.Template] 

[ParCtl_ProfileFilter_Dlg_Body_BlackListPage]
@       = h(1353) sz(p,p)
List    = [ParCtl_ProfileFilter_Dlg_Body_BlackListPage_List]

[ParCtl_ProfileFilter_Dlg_Body_BlackListPage_List]
@       = $List alias(vector) at(checked,noheader) v(Filter.BlackList)
Name    = at(checked) text(Name) v(Enabled)
footer  = [Grid.Footer.Template]  subst(Add(onclick(dialog("ParCtl_Url.Edit", "List"))))
rowedit = [Grid.Editor.Template] 

[ParCtl_Url.Edit]
@ = [EditSimpleItem] subst(Example(visible(0))) ext(1)

;---------- ParCtl_ProfileAccounts --------------

[ParCtl_ProfileAccounts]
@       = $DlgAttr at(resizable) sz(350,257) h(1351) alias(settings)
Body    = [ParCtl_ProfileAccounts_Body]

[ParCtl_ProfileAccounts_Body]
@       = sz(p,p) xy(,,,$DialogPanelSizeY)
List    = [ParCtl_ProfileAccounts_Body_List]

[ParCtl_ProfileAccounts_Body_List]
@       = $List alias(vector) at(noheader) sz(p,200) v(users) filter(settings.ProfileId == Id)
Name    = text(username(UserId)) i("useracc")
footer  = [Grid.Footer.Template]  subst(Add(onclick(dialog("AccountBrowse", "List"))))
rowedit = [Grid.Editor.Template]  subst(Edit(use(0)))

;------------- AntiSpam_TrainingWizard -----------

[OutlookPlugun.TrainingWizard]
@ = [WizardTpl] sz(500,370) at(minimizable) alias(trainwizard) mg(0,0,0,0) subst(Pages([OutlookPlugun.TrainingWizardPages])) ext(1)

[OutlookPlugun.TrainingWizardPages]
@       = ext(1) sz(p,p)
Page1   = [WizardPage] subst(Name() Descr() Body([OutlookPlugun.TrainingWizardPages_Page1]))
Page2   = [WizardPage] subst(Name() Descr() Body([OutlookPlugun.TrainingWizardPages_Page2]))
Page3   = [WizardPage] subst(Name() Descr() Body([OutlookPlugun.TrainingWizardPages_Page3]))
Page4   = [WizardPage] subst(Name() Descr() Body([OutlookPlugun.TrainingWizardPages_Page4]))
Page5   = [WizardPage] btns(Back(enable(0))) subst(Name() Descr() Body([OutlookPlugun.TrainingWizardPages_Page5]))

[OutlookPlugun.TrainingWizardPages_Page1]
@       = sz(p,p) ext(1)
Text1   = a(la) sz(p,a)
Next    = [WizardButton] onclick(wizNext()) a(lb) xy(10) subst(Name() Descr())

[OutlookPlugun.TrainingWizardPages_Page2]
@           = sz(p,p) ext(1)
Next        = [WizardButton] onclick(wizNext()) a(lb) xy(10) subst(Name() Descr())
;Clear       = $Button_Large a(lp) xy(,7)
FolderTree  = t(tree) alias(folders_ham) a(lp) sz(p,p) rs(0,100) at(checked) xy(,15)

[OutlookPlugun.TrainingWizardPages_Page3]
@           = sz(p,p) ext(1)
Next        = [WizardButton] onclick(wizNext()) a(lb) xy(10) subst(Name() Descr())
;Clear       = $Button_Large a(lp) xy(,7)
FolderTree  = t(tree) alias(folders_spam) a(lp) sz(p,p) at(checked) xy(,15)
InfoText    = a(ra) sz(a,a) i("info") xy(,3)

[OutlookPlugun.TrainingWizardPages_Page4]
@               = sz(p,p) ext(1)
Progress        = t(progress) a(la) sz(p,20) v(PercentCompleted)
TrainingStatus  = $WizardGroupNext
MessageCount    = [Value] a(la) subst(Val([MessagesProcessed]))
NowProcessing   = $WizardGroupNext
Folder          = [Value] a(la) xy(,,110) subst(Name(f("Header1")) Val(v(CurrentFolder)))
Message         = [Value] a(la) xy(,,110) sz(p,50) subst(Name(f("Header1")) Val(v(CurrentMessage)))
Skip            = [WizardButton] sz(a,a) at(clickable) onclick("TwStop") a(rb) xy(0) subst(Name() Descr())

[OutlookPlugun.TrainingWizardPages_Page5]
@               = sz(p,p) ext(1)
StatGroup       = $WizardGroupNext
MessageCount    = [Value] a(la) xy(,,110) subst(Name() Val(v(MessagesProcessed)))
RetrainGroup    = $WizardGroupNext
KeepExisting    = t(radio) a(la) xy(10,10) v(0) sz(a,a)
Retrain         = t(radio) a(la) xy(10,10) v(1) sz(a,a)
Finish          = [WizardButton] onclick(wizNext()) a(lb) xy(10) subst(Name() Descr())

;------------- TrafficMonConnectionTerm -------------

[TrafficMonConnectionTerm]
@           = $DlgAttrBase sz(350,100) at(a_yes,a_no) h(1049)
Confirm
AutoTerm    = a(la) xy(,7)

;------------- TrafficMonAskActionDlg -------------

[TrafficMonAskActionDlg]
@ = [AlertDialogT_Green] h(1304) subst(Caption(text()) Body([TrafficMonAskActionDlg_Body]) ApplyToAll(v(UseRule) use(ShowUseRule) text()))

[TrafficMonAskActionDlg_Body]
Descr   = [TrafficMonAskActionDlg_Body_Descr]
Action  = [TrafficMonAskActionDlg_Body_Action]

[TrafficMonAskActionDlg_Body_Descr]
@       = sz(p,a) mg(7,17,7,7) oninit(if(!sDescription, sDescription = $UnknownApp))
Info    = f("Normal_Bold")
Descr   = a(la) xy(,7) sz(p,a)
App     = a(la) xy(,7) sz(p,a) i(const(getIcon(sImagePath, "unkapp", 1))) text(const(sDescription))
Host    = [LValue] a(la) xy(37,7) subst(Name() Val(xy(100) text(const(ServerName))))
Port    = [LValue] a(la) xy(37,7) subst(Name() Val(xy(100) text(const(ServerPort))))

[TrafficMonAskActionDlg_Body_Action]
@       = $AlertActions at(enum) v(DecodeSSL)
Process = [AlertDialog_ActionButton] enable(1) v(1) subst(Name(f("AlertBtn")) Descr())
Skip    = [AlertDialog_ActionButton] enable(1) v(0) subst(Name(f("AlertBtn")) Descr())

;------------- MailWasher -------------

[MailWasher]
@           = $DlgAttrBase sz(450,300,640,480) at(resizable,minimizable,dragable,ontop,a_ok) h(1164)
Info
Toolbar     = [MailWasher_Toolbar]
Progressbar = [MailWasher_Progressbar]
New         = $Check xy(,7) v(ShowNewMessages) onchange(ctl.Msgs.List.setfilter(ctl.value ? "New && !Deleted" : "!Deleted")))
DontShow    = $Check xy(,7) v(ShowMailwasher)
Msgs        = [MailWasher_Msgs]

[MailWasher_Toolbar]
@           = a(la) sz(a,23) rs(0,0) xy(,7)
Del         = $Button_Large a(lt) enable(Messages.find("MarkToDelete"))
ReadNext    = $Button_Large a(as) xy(7) enable(MessagesLeft)
NumToRead   = t(edit) a(as) xy(7,1) sz(50) at(number) v(MessagesToRead) enable(MessagesLeft)
Letters     = a(as) xy(7,3) enable(MessagesLeft)

[MailWasher_Progressbar]
@           = a(as) sz(a,23) xy(7) at(hide) rs(0,0)
Progress    = t(progress) sz(110,13) xy(,5)
Stop        = $Button a(at) xy(7) text($Stop)

[MailWasher_Msgs]
@       = t(splitter) a(la) sz(p,p) xy(,7,,$DialogPanelSizeY) at(rememberdata)
List    = [MailWasher_Msgs_List]
Cludges = t(edit) sz(p,p) at(multiline,readonly) alias(descriptor) dataowner(List) text(Data)

[MailWasher_Msgs_List]
@           = $List alias(vector) v(Messages) filter(New && !Deleted)
New         = sz(40) at(checked) v(MarkToDelete) i(New ? (MarkToDelete ? "mail_new_bad" : "mail_new") : (MarkToDelete ? "mail_bad" : "mail")) text("")
From        = sz(150) text(From)
Subject     = sz(200) text(Subject)
To          = sz(100) text(To)
Size        = sz(40) text(f_ObjSize(Size))
DateTime    = sz(60) text(DateTime)
Reason      = sz(60) text(s_ReasonEx(Reason))

[MailWasher_CodepageMenu]
@               = t(menu)
KOI8-R
WINDOWS-1251
IBM866
ISO8859-5
X-MAC-CYRILLIC

;------------- OutlookPlugun.Antivirus -----------

[OutlookPlugun.Antivirus]
@           = t(propsheetpage) sz(550,500) mg(7,7) h(1062)
Dlg         = [OutlookPlugun.AntivirusCmn] sz(399,p)

[OutlookPlugun.AntivirusCmn]
@           = sz(p,p) a(lt) mg(7,7)
Main        = a(lt)
MainLine    = b(Topline_medium) a(as) sz(p,7) xy(7,7)
Icon        = a(la) xy(0,7) enable(McEnabled) i("Main.big")
Info        = a(as) sz(p,a)
Status      = a(lt) xy(0,60)
StatusLine  = b(Topline_medium) a(as) sz(p,7) xy(7,7)
EnableStat  = a(la) xy(30,7)
Settings    = a(sa)
Link        = $Link a(as) visible(KavStarted)
Options     = a(lt) xy(0,120)
OptionsLine = b(Topline_medium) a(as) sz(p,7) xy(7,7)
CheckDelivery= $Check a(la) xy(30,7) v(CheckOnDelivery)
CheckRead   = $Check a(la) xy(30,7) v(CheckOnRead)
CheckSend   = $Check a(la) xy(30,7) v(CheckOnWriteComplete)

;------------- OutlookPlugin.Antispam -----------

[OutlookPlugun.AntispamDlg]
@           = t(dialog) sz(430,400) mg(7,7) h(1167)
Dlg         = [OutlookPlugun.AntispamCmn]

[OutlookPlugun.Antispam]
@           = t(propsheetpage) sz(550,500) mg(7,7) h(1166)
Dlg         = [OutlookPlugun.AntispamCmn] sz(399,p)

[OutlookPlugun.AntispamCmn]
$ShowIfFolderCS = (CertainSpamRule.AntispamPluginAction == 0 || CertainSpamRule.AntispamPluginAction == 1)
$ShowIfMarkReadCS = ($ShowIfFolderCS || CertainSpamRule.AntispamPluginAction == 3)
$ShowIfFolderPS = (PossibleSpamRule.AntispamPluginAction == 0 || PossibleSpamRule.AntispamPluginAction == 1)
$ShowIfMarkReadPS = ($ShowIfFolderPS || PossibleSpamRule.AntispamPluginAction == 3)
@           = sz(p,p) a(lt) mg(7,7) ext(1)
Main        = a(lt)
MainLine    = b(Topline_medium) a(as) sz(p,7) xy(7,7)
Icon        = a(la) xy(0,7) enable(AsEnabled) i("Main.big")
Info        = a(as) sz(p,a)
Status      = a(lt) xy(0,60)
StatusLine  = b(Topline_medium) a(as) sz(p,7) xy(7,7)
EnableStat  = a(la) xy(30,7)
Settings    = a(sa)
Link        = $Link a(as) visible(KavStarted) v(configure:Anti_Spam)
CSpam       = a(lt) xy(0,120)
CS_Line     = b(Topline_medium) a(as) sz(p,7) xy(7,7)
CS_Action   = t(combo) a(la) sz(150) xy(35,7) v(CertainSpamRule.AntispamPluginAction) [AS_Actions]
CS_Folder   = t(edit) a(as) at(readonly) sz(160,20) xy(7,1) v(CertainSpamRule.FolderForAction.Name) visible($ShowIfFolderCS)
CS_Browse   = $Button a(as) sz(20,20) visible($ShowIfFolderCS)
CS_MarkAsRead = $Check a(la) xy(35,7) v(CertainSpamRule.MarkAsRead) visible($ShowIfMarkReadCS)
PSpam       = a(lt) xy(0,200)
PS_Line     = b(Topline_medium) a(as) sz(p,7) xy(7,7)
PS_Action   = t(combo) a(la) sz(150) xy(35,7) v(PossibleSpamRule.AntispamPluginAction) [AS_Actions]
PS_Folder   = t(edit) a(as) at(readonly) sz(160,20) xy(7,1) v(PossibleSpamRule.FolderForAction.Name) visible($ShowIfFolderPS)
PS_Browse   = $Button a(as) sz(20,20) visible($ShowIfFolderPS)
PS_MarkAsRead = $Check a(la) xy(35,7) v(PossibleSpamRule.MarkAsRead) visible($ShowIfMarkReadPS)
CAlgo       = a(lt) xy(0,280) 
CA_Line     = b(Topline_medium) a(as) sz(p,7) xy(7,7)
CAlgoGroup  = [C_AlgoGroup]

[AS_Actions]
0 = v(0)
1 = v(1)
2 = v(2)
3 = v(3)

[C_AlgoGroup]
@           = a(la) sz(p,75) v(CheckAlgorithm)
Radio1      = $Radio a(lt) xy(35,7) v(0)
Radio2      = $Radio a(sa) xy(,7) v(1)
LinkOutlook = $Link a(as) sz(a,a) v(help:1166)
Radio2Text  = a(as) xy(,1) sz(a,a)

;------------- OutlookPlugin.Antispam.Browse -----------

[OutlookPlugun.Antispam.Browse]
@           = t(dialog) sz(350,330) mg(7,7) h(1166) at(nohelp)
FolderTree  = t(tree) sz(336,286)
