{\rtf1\ansi \deff5\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fnil\fcharset0\fprq1 Courier{\*\falt Courier New};}
{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}
{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fswiss\fcharset0\fprq2 AvantGarde;}{\f15\froman\fcharset0\fprq2 ITC Bookman;}
{\f16\fswiss\fcharset0\fprq2 Helvetica-Condensed;}{\f17\fswiss\fcharset0\fprq2 Helvetica-Narrow;}{\f18\fswiss\fcharset0\fprq2 LubalinGraph;}{\f19\froman\fcharset0\fprq2 NewCenturySchlbk;}{\f20\froman\fcharset0\fprq2 Palatino;}
{\f21\froman\fcharset0\fprq2 ZapfChancery;}{\f22\fdecor\fcharset2\fprq2 ZapfDingbats;}{\f23\fswiss\fcharset0\fprq2 Helvetica 95 Black;}{\f24\fswiss\fcharset0\fprq2 Helvetica 55 Roman;}{\f25\fswiss\fcharset0\fprq2 Helvetica 45 Light;}
{\f26\fswiss\fcharset0\fprq2 Helvetica 35 Thin;}{\f27\fnil\fcharset2\fprq2 Marlett;}{\f28\fmodern\fcharset0\fprq1 Lucida Console;}{\f29\fswiss\fcharset0\fprq2 Lucida Sans Unicode;}{\f30\fnil\fcharset2\fprq2 Wingdings;}
{\f31\fswiss\fcharset0\fprq2 Arial Narrow;}{\f32\fswiss\fcharset0\fprq2 Arial Black;}{\f33\froman\fcharset0\fprq2 Book Antiqua;}{\f34\froman\fcharset0\fprq2 Bookman Old Style;}{\f35\froman\fcharset0\fprq2 Century Schoolbook;}
{\f36\fnil\fcharset2\fprq2 Monotype Sorts;}{\f37\fswiss\fcharset0\fprq2 Haettenschweiler;}{\f38\froman\fcharset0\fprq2 Garamond;}{\f39\fmodern\fcharset2\fprq1 MS LineDraw;}{\f40\fscript\fcharset0\fprq2 Comic Sans MS;}
{\f41\fmodern\fcharset0\fprq1 linedraw;}{\f42\fswiss\fcharset0\fprq2 Impact;}{\f43\fswiss\fcharset0\fprq2 Verdana;}{\f44\fswiss\fcharset0\fprq2 Tahoma;}{\f45\froman\fcharset255\fprq2 Roman;}{\f46\fscript\fcharset255\fprq2 Script;}
{\f47\fmodern\fcharset255\fprq2 Modern;}{\f48\fswiss\fcharset0\fprq1 MS Dialog;}{\f49\froman\fcharset238\fprq2 Times New Roman CE;}{\f50\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f51\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f52\froman\fcharset162\fprq2 Times New Roman Tur;}{\f53\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f54\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f55\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f56\fswiss\fcharset238\fprq2 Arial CE;}{\f57\fswiss\fcharset204\fprq2 Arial Cyr;}{\f58\fswiss\fcharset161\fprq2 Arial Greek;}{\f59\fswiss\fcharset162\fprq2 Arial Tur;}{\f60\fswiss\fcharset177\fprq2 Arial (Hebrew);}
{\f61\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f62\fswiss\fcharset186\fprq2 Arial Baltic;}{\f63\fmodern\fcharset238\fprq1 Courier New CE;}{\f64\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f65\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f66\fmodern\fcharset162\fprq1 Courier New Tur;}{\f67\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f68\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f69\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 \snext0 Normal;}{\s1\ri29\sb720\sa120\keep\keepn\pagebb\widctlpar \b\f5\fs36\lang2057 
\sbasedon0\snext2 heading 1;}{\s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 \sbasedon0\snext0 heading 2;}{\s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 \sbasedon0\snext0 heading 3;}{\s4\ri23\sb240\sa80\keep\keepn\widctlpar 
\b\f5\fs20\lang2057 \sbasedon0\snext0 heading 4;}{\s5\ri23\sa80\widctlpar \f5\fs20\lang2057 \sbasedon0\snext0 heading 5;}{\s6\ri23\sa80\widctlpar \f5\fs20\lang2057 \sbasedon0\snext0 heading 6;}{\s7\ri29\sb720\sa120\keep\keepn\pagebb\widctlpar 
\b\f5\fs36\lang2057 \sbasedon1\snext0 heading 7;}{\s8\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 \sbasedon0\snext0 heading 8;}{\s9\ri40\widctlpar \f3\fs18\lang1024 \sbasedon15\snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\fi-295\li1559\ri40\widctlpar \f3\fs18\lang1024 \sbasedon0\snext15 Code Sample;}{\s16\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 \sbasedon0\snext0 toc 7;}{\s17\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 \sbasedon0\snext0 toc 6;}{
\s18\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 \sbasedon0\snext0 toc 5;}{\s19\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 \sbasedon0\snext0 toc 4;}{\s20\ri23\widctlpar\tqr\tx9633 \scaps\f5\fs22\lang2057 \sbasedon0\snext0 toc 3;}{
\s21\ri23\widctlpar\tqr\tx9633 \b\scaps\f5\fs22\lang2057 \sbasedon0\snext0 toc 2;}{\s22\ri23\sb360\sa360\widctlpar\tqr\tx9633 \b\caps\f5\fs22\ul\lang2057 \sbasedon0\snext0 toc 1;}{\s23\li283\sb20\sa80\widctlpar \f5\fs20\lang2057 \sbasedon0\snext0 
index 2;}{\s24\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 \sbasedon0\snext0 index 1;}{\s25\nowidctlpar\brdrt\brdrs\brdrw15 \tqc\tx4780\tqr\tx9600 \f5\fs16\lang2057 \sbasedon0\snext25 footer;}{\s26\sb320\nowidctlpar\brdrb\brdrs\brdrw15 
\tqc\tx4780\tqr\tx9600 \f5\fs16\lang2057 \sbasedon0\snext26 header;}{\*\cs27 \additive\f5\fs18\up6 \sbasedon10 footnote reference;}{\s28\fi-700\li839\ri23\sa80\widctlpar \f5\fs20\lang2057 \sbasedon0\snext28 footnote text;}{
\s29\fi-238\li1259\ri17\sb40\sa40\keep\widctlpar{\*\pn \pnlvl11\ulw\pnf1\pnstart1\pnindent240\pnhang{\pntxtb \'b7}}\f5\fs20\lang2057 \sbasedon0\snext29 Bulleted List;}{\s30\qc\li680\ri23\sb200\sa80\sl300\slmult0\keep\widctlpar \f5\fs20\lang2057 
\sbasedon0\snext31 Picture;}{\s31\qc\li1120\ri498\sa80\keep\widctlpar \f5\fs20\lang2057 \sbasedon30\snext0 Picture Annotation;}{\s32\sa120\keep\keepn\pagebb\widctlpar \b\f5\fs48\lang2057 \sbasedon0\snext0 Title Heading;}{\s33\qc\sa80\widctlpar 
\b\f5\fs20\lang2057 \sbasedon0\snext33 Picture Title;}{\*\cs34 \additive\fs16 \sbasedon10 annotation reference;}{\s35\li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 \sbasedon0\snext35 annotation text;}{\s36\fi-1288\li2127\ri23\sb80\sa80\widctlpar 
\f5\fs20\lang2057 \sbasedon0\snext36 Table;}{\s37\fi-4264\li5103\ri23\keep\widctlpar\tx3686 \f5\fs20\lang2057 \sbasedon0\snext37 Menu Item;}{\*\cs38 \additive\sbasedon10 line number;}{\s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 
\b\f5\fs20\lang2057 \sbasedon0\snext39 Item Header;}{\s40\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 \sbasedon0\snext0 toc 8;}{\s41\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 \sbasedon0\snext0 toc 9;}}{\*\revtbl {Unknown;}{Urmas Rahu;}}{\info{\title  }{\author Jukka Kohonen}
{\operator Jukka Kohonen}{\creatim\yr1999\mo1\dy14\hr16\min23}{\revtim\yr2000\mo2\dy3\hr13\min46}{\printim\yr1998\mo10\dy27\hr14\min29}{\version2}{\edmins1}{\nofpages39}{\nofwords8845}{\nofchars50422}{\*\company Data Fellows Ltd.}{\vern57443}}
\paperw11909\paperh16834\margl1138\margr1138\margt1411\margb1411 \deftab709\widowctrl\ftnbj\aenddoc\ftnrstpg\hyphhotz0\sprstsp\otblrul\brkfrm\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0 \fet0\sectd 
\psz9\pgnrestart\linex0\linecont\headery706\footery706\colsx709\endnhere\titlepg {\header \pard\plain \s26\sb320\nowidctlpar\brdrb\brdrs\brdrw15 \tqc\tx4780\tqr\tx9600 \f5\fs16\lang2057 {\lang1024 {\*\do\dobxcolumn\dobypara\dodhgt8192
\dptxbx\dptxbxmar0{\dptxbxtext \pard\plain \ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\pard\plain \ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\object\objemb\objsetsize\objw1271\objh9029{\*\objclass }{\*\objdata 01050000020000000c000000
4d53576f72644172742e32000000000000000000000e0000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff0900060000000000000000000000010000000100000000000000001000000200000001000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdffffff04000000feffffff05000000fefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffff02000000f012020000000000c000000000000046000000000000000000000000f06e
134f3c6ebf0103000000400200000000000001004f006c00650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000201ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
0000000000000000000000001400000000000000030050004900430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0002010100000004000000ffffffff0000000000000000000000000000000000000000000000000000
00000000000000000000010000004c00000000000000010043006f006d0070004f0062006a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012000201ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000000000030000006600000000000000feffffff02000000feffffff04000000fefffffffeffffff07000000fefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff010000020000000000000000000000000000000000600100ffffffff000000000000000000000000000000000000000000000000c502a12500000000000000004c0000000000000000000800c2080000353e0000f7040000442300000000
0000000000000000000000000000e8030000e8030000000000000000000000000000000000000000000000000000c502a1250000000000000000da01000007150000ae0f0000dc000000c0440000b04500000700000000000000ffff0000ffffffff0100feff030a0000fffffffff012020000000000c000000000000046
160000004d6963726f736f667420576f726441727420322e30000c0000004d53576f72644172742e32000c0000004d53576f72644172742e3200f439b27100000000000000000000000000000000000000000000000000000000000000000000c502a1250002030000000000da01000026010000ae0f0000d80000000000
0000360000000900000000000000ffff00000100000000c0000200200100ffffffffffffffff576f72644172742000020c436f6e666964656e7469616c05417269616c000000001420000000000000090001000200000001000000ff0000000000090001000200000000000000a6ff32000100640000000000c208353eb4
0000000000000000000000000000000000000000000000000000000000000000da0100005419000003004f0062006a0049006e0066006f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120002000300000005000000ffffffff000000000000
00000000000000000000000000000000000000000000000000000000000005000000040000000000000043006f006e00740065006e007400730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012000201ffffffff06000000ffffffff00000000
0000000000000000000000000000000000000000000000000000000000000000060000006700000000000000030049006e007400650072006e0061006c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000200ffffffffffffffffffffffff0000
000000000000000000000000000000000000000000000000000000000000000000000800000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000000000002003140020031400000000000000000000000000ec00f7004900860100000000000314000003140077000000b90000000900000000000000ffff00000300
000000c0000000200100ffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000da010000a1190000ae0f00004d000000b9000000fc0000000900000000000000ffff00000300000000c0000000200100ffffffffffffffff0000000000000000000000000000000000000000
000000000000000000000000da010000ee190000ae0f000052000000fc000000470100000900000000000000ffff00000300000000c0000000200100ffffffffffffffff00000000000000000000000000000000000000000000000000000000000000002800610100001c02f8011400f801140007021c0207021c020702
1c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c02
07021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c020105000000000000}{\result {\pict\wmetafile8\picw2312\pich15995\picwgoal1311\pichgoal9068 
010009000003f90500000400b80000000000050000000b02e0e0b1fb050000000c02211f62040500000004010d0000000500000006010200000007000000fc020000c0c0c0000000040000002d01000008000000fa0205000100000000000000040000002d010100aa0000002403530084fe83fca9fef4fbfbfe0ffc44ff33
fc82ff60fcb6ff96fcdeffd4fcfcff19fd0c0063fd1200b5fd0d0008fe000054feebff97feccffd2fea4ff05ff74ff33ff3dff59fffdfe79ffb8fe92ff70fea4ff27feafffdafdb2ff88fdaeff3cfda2fff4fc8effb3fc71ff77fc4eff44fc23ff18fcf2fef4fbb9fed7fb7cfec2fb3cfeb6fbf9fdb2fbb3fdb7fb65fdc7fb
1dfde1fbdcfc05fca1fc32fc6efc68fc43fca7fc21fceefc06fc0ffd94fcd8fca9fca9fcc2fc81fcdffc63fc01fd4bfc28fd3afc52fd30fc82fd2dfcb5fd31fcf2fd3cfc28fe4efc5afe69fc86fe89fcaefeaffccefed9fce8fe0afdfcfe3cfd0bff70fd16ffdafd1eff1dfe1cff5bfe14ff95fe08ffcbfef6fefbfedffe25
ffc3fe48ffa1fe65ff79fe7bff4dfe8bff20fe95fff1fd98ffc1fd94ff87fd87ff51fd71ff21fd53fff5fc2cffcefcfcfeaffcc4fe96fc84fe83fc84fe83fc07000000fc020000ffffff000000040000002d01020008000000fa0200000000000000000000040000002d01030004000000f001000007000000fc020000c0c0
c0000000040000002d010000040000002d0101009c000000380502002900220078fe86fb12fe7ffbe4fd75fbbafd68fb93fd57fb70fd42fb51fd29fb35fd0dfb0efdd8faf3fc9dfae3fc5cfadefc16fae4fcc9f9f8fc83f919fd45f948fd0df982fde1f8c6fdc1f814feadf86dfea7f8b5feaaf8f4feb2f82cffc1f85bffd4
f884ffeef8a8ff0cf9c8ff30f9e2ff58f9f7ff85f90500b3f90e00e4f9110016fa0b0065faf8ffabfad7ffeafaa9ff21fb6eff4dfb27ff6dfbd5fe80fb78fe86fb78fe86fb78fefdfabefef9fafbfeedfa2fffd9fa5affbcfa7aff99fa92ff71faa0ff46faa5ff16faa0ffe7f992ffbcf97aff94f959ff71f92fff55f9fafe
40f9bcfe34f973fe2ff92ffe34f9f3fd40f9c1fd55f997fd72f976fd95f95efdbcf950fde7f94cfd16fa50fd46fa5efd71fa75fd99fa96fdbcfac0fdd9faf4fdedfa31fef9fa78fefdfa78fefdfa040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000
002d0101004c0000002403240000000bf8effc0bf8effc93f75ffd93f740fd7cf726fd63f7fefc29f7e5fce6f6defc99f6e4fc55f6f7fc17f614fde3f53afdbef567fda4f59cfd94f5cffd8ff51efe8df500008df5000012f623fe12f6dcfd16f6a9fd21f685fd37f669fd58f657fd84f651fdb5f654fddff65efd05f76ffd
28f787fd48f7a8fd63f7d5fd76f70efe82f754fe86f7000086f700000bf8040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d0101003e00000024031d000000a1f457fda1f457fd16f5effc16f5effca1f49cfca1f457fc9ef426fc93f4f7fb79
f4d2fb4ff4c4fb35f4bafb15f4b4fbf1f3b2fbc8f3b5fb8cf3bffb4bf333fc5ff32cfcaef332fce1f346fc03f46bfc16f486fc1bf4a7fc1df4effc1df4effc84f357fd84f357fd1df400001df40000a1f4040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000
040000002d0101001a00000038050200050005005efc1cf3c5fb1cf3c5fb97f25efc97f25efc1cf300001cf3effc1cf3effc97f2000097f200001cf3040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d01010096000000380502002600220000
00cfef9dffcfefd0fff9eff5ff2cf00a0067f01100abf00e00d9f0040005f1f5ff2ff1deff58f1c2ff7df1a0ff9df17affbaf14effd2f11effe5f1eafef2f1b3fefaf179fefdf13ffefbf108fef3f1d4fde7f1a3fdd6f176fdc0f14ffda5f12dfd85f111fd60f1fafc38f1eafc0df1e0fce0f0defcb1f0e5fc6ef0fbfc32f0
1efd00f049fdd8efc5fbd8efc5fb54ef000054ef0000cfef79fe74f1bffe70f1fcfe64f130ff51f15aff34f17bff14f192ffeff0a0ffc8f0a5ff9ef0a0ff75f093ff4ef07dff2af05dff0af035fff0ef03ffddefc8fed1ef84fecdef38fed1eff8fdddefc2fdf0ef97fd0bf076fd2cf05ffd51f050fd79f04cfda4f050fdcf
f05efdf6f074fd19f194fd38f1befd53f1f1fd65f130fe70f179fe74f179fe74f1040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d01010094000000380502003400130004ff69ec15ffe0eb4dfff4eb7fff0eecabff30ecd0ff58ecedff88ec
0100bcec0d00f8ec110039ed0b008bedf8ffd3edd6ff13eea8ff4aee6eff77ee29ff96eed9fea9ee7ffeafee21fea9eecffd96ee87fd76ee4bfd49ee1bfd12eef9fcd4ede4fc8eeddefc40ede4fcf5ecf8fcb1ec1afd75ec49fd3fec84fd14eccafdf4eb1afee2eb76fedbeb9afedceb9afe26eed7fe1fee0cff10ee3afffa
ed60ffdced7effbaed93ff92eda0ff68eda5ff38eda2ff15ed9bfff5ec8fffd7ec7effbbec4cff8dec2bff7aec04ff69ec04ff69ec2cfe1eee2cfe68ecfefd6eecd6fd79ecb4fd88ec98fd9aec76fdbcec5efde3ec50fd0fed4bfd3fed4ffd6bed5afd94ed6dfdb8ed88fdd9edaafdf5edd0fd0aeefcfd18ee2cfe1eee2cfe
1eee040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d0101004c00000024032400000039ebeffc39ebeffcc1ea5ffdc1ea40fdaaea26fd91eafefc57eae5fc14eadefcc7e9e4fc83e9f7fc45e914fd11e93afdece867fdd2e89cfdc2e8cffdbd
e81efebbe80000bbe8000040e923fe40e9dcfd44e9a9fd4fe985fd65e969fd86e957fdb2e951fde3e954fd0dea5efd33ea6ffd56ea87fd76eaa8fd91ead5fda4ea0efeb0ea54feb4ea0000b4ea000039eb040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000
040000002d0101003e00000024031d0089ffcce6ffffb9e60700eee60a001de704005ee7f4ff8ee7d9ffb0e7b8ffc6e77effd2e71bffd6e757fdd6e757fd38e8effc38e8effcd6e72dfcd6e7ddfb52e7effc52e7effccce657fdcce657fd52e722ff52e751ff50e76bff4be77aff42e785ff34e78cff21e78fff07e789ffcc
e689ffcce6040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d0101001a00000038050200050005005efc4ae6c5fb4ae6c5fbc5e55efcc5e55efc4ae600004ae6effc4ae6effcc5e50000c5e500004ae6040000002d010200040000002d010300
04000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d010100b80000003805020040001900a0fffae2d5ff43e3f8ff89e30b00d0e311001be40d0058e401008ee4eeffbce4d3ffe2e4b1ff01e58bff16e560ff24e531ff28e5fafe22e5c8fe0ee59dfeefe47cfec9e462fe9ce450fe69e43c
fef3e327fe67e30efe05e3ebfd05e3c6fd07e3a6fd0ee38cfd1ae379fd2ae365fd47e357fd6ae34efd93e34cfdc2e34efdeee354fd14e45efd33e46dfd4de480fd62e49afd74e4bafd83e4e1fd8fe4cffd11e584fdfae448fdd6e41bfda5e408fd85e4f9fc61e4e4fc0ee4defcafe3e3fc54e3f5fc0be310fdd5e231fdafe2
59fd96e28bfd86e2bbfd81e206fe7fe2b7fe7fe24fff7de2a2ff76e2d2ff6ae2000055e20000e0e2d3fff1e2a0fffae2a0fffae276fe05e392fe60e3a9fedfe3b5fe25e4c3fe53e4d5fe71e4effe87e40dff95e42eff9ae447ff98e45fff90e474ff83e487ff72e496ff5be4a1ff40e4a8ff20e4aafffce3a1ffb3e397ff92
e388ff73e360ff3fe32cff1be3f4fe0be3a7fe05e376fe05e3040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d0101000e000000240305000000b4e1c5fbb4e1c5fb2fe100002fe10000b4e1040000002d010200040000002d01030004000000
f00100000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}}}
\par }\dpx-708\dpy1453\dpxsize1311\dpysize9068\dplinehollow\dplinecor0\dplinecog0\dplinecob0\dplinew0\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat0}}{\field{\*\fldinst  SAVEDATE  \\@ yyyy-MM-dd}{\fldrslt {
\lang1024 2000-02-02}}}\tab Confidential\tab \chpgn 
\par }{\footer \pard\plain \s25\nowidctlpar\brdrt\brdrs\brdrw15 \tqc\tx4780\tqr\tx9600 \f5\fs16\lang2057 \tab {\field{\*\fldinst  FILENAME  \\p \\*lower}{\fldrslt {\lang1024 k:\\common\\countersign\\apis\\fpi-api.doc}}}
\par \tab Copyright \'a9 1997-2000 F-Secure Corporation. All Rights Reserved.
\par \tab Email: Info@F-Secure.com, World Wide Web: http://www.F-Secure.com
\par \tab PL 24, FIN-02210 Espoo Finland {{\field{\*\fldinst SYMBOL 183 \\f "Symbol" \\s 8}{\fldrslt\f1\fs16}}} tel +358 9 859 900, fax +358 9 8599 0599
\par }{\headerf \pard\plain \s26\sb320\nowidctlpar\tqc\tx4780\tqr\tx9600 \f5\fs16\lang2057 {\lang1024 {\*\do\dobxcolumn\dobypara\dodhgt8193\dptxbx\dptxbxmar0{\dptxbxtext \pard\plain \ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\pard\plain 
\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\object\objemb\objsetsize\objw1271\objh9029{\*\objclass }{\*\objdata 01050000020000000c0000004d53576f72644172742e32000000000000000000000e0000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff0900060000000000000000000000010000000100000000000000001000000200000001000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdffffff04000000feffffff05000000fefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffff02000000f012020000000000c000000000000046000000000000000000000000e00b
1d4f3c6ebf0103000000400200000000000001004f006c00650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000201ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
0000000000000000000000001400000000000000030050004900430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0002010100000004000000ffffffff0000000000000000000000000000000000000000000000000000
00000000000000000000010000004c00000000000000010043006f006d0070004f0062006a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012000201ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000000000030000006600000000000000feffffff02000000feffffff04000000fefffffffeffffff07000000fefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff010000020000000000000000000000000000000078041400ffffffff000000000000000000000000000000000000000000000000c502a12500000000000000004c0000000000000000000800c2080000353e0000f7040000442300000000
0000000000000000000000000000e8030000e8030000000000000000000000000000000000000000000000000000c502a1250000000000000000da01000007150000ae0f0000dc000000c0440000b04500000700000000000000ffff0000ffffffff0100feff030a0000fffffffff012020000000000c000000000000046
160000004d6963726f736f667420576f726441727420322e30000c0000004d53576f72644172742e32000c0000004d53576f72644172742e3200f439b27100000000000000000000000000000000000000000000000000000000000000000000c502a1250002030000000000da01000026010000ae0f0000d80000000000
0000360000000900000000000000ffff00000100000000c0000200200100ffffffffffffffff576f72644172742000020c436f6e666964656e7469616c05417269616c000000001420000000000000090001000200000001000000ff0000000000090001000200000000000000a6ff32000100640000000000c208353eb4
0000000000000000000000000000000000000000000000000000000000000000da0100005419000003004f0062006a0049006e0066006f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120002000300000005000000ffffffff000000000000
00000000000000000000000000000000000000000000000000000000000005000000040000000000000043006f006e00740065006e007400730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012000201ffffffff06000000ffffffff00000000
0000000000000000000000000000000000000000000000000000000000000000060000006700000000000000030049006e007400650072006e0061006c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000200ffffffffffffffffffffffff0000
000000000000000000000000000000000000000000000000000000000000000000000800000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000000000002003140020031400000000000000000000000000f400f7004900860100000000000314000003140077000000b90000000900000000000000ffff00000300
000000c0000000200100ffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000da010000a1190000ae0f00004d000000b9000000fc0000000900000000000000ffff00000300000000c0000000200100ffffffffffffffff0000000000000000000000000000000000000000
000000000000000000000000da010000ee190000ae0f000052000000fc000000470100000900000000000000ffff00000300000000c0000000200100ffffffffffffffff00000000000000000000000000000000000000000000000000000000000000002800610100001c02f8011400f801140007021c0207021c020702
1c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c02
07021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c0207021c020105000000000000}{\result {{\pict\wmetafile8\picw2312\pich15995\picwgoal1311\pichgoal9068 
010009000003f90500000400b80000000000050000000b02e0e0b1fb050000000c02211f62040500000004010d0000000500000006010200000007000000fc020000c0c0c0000000040000002d01000008000000fa0205000100000000000000040000002d010100aa0000002403530084fe83fca9fef4fbfbfe0ffc44ff33
fc82ff60fcb6ff96fcdeffd4fcfcff19fd0c0063fd1200b5fd0d0008fe000054feebff97feccffd2fea4ff05ff74ff33ff3dff59fffdfe79ffb8fe92ff70fea4ff27feafffdafdb2ff88fdaeff3cfda2fff4fc8effb3fc71ff77fc4eff44fc23ff18fcf2fef4fbb9fed7fb7cfec2fb3cfeb6fbf9fdb2fbb3fdb7fb65fdc7fb
1dfde1fbdcfc05fca1fc32fc6efc68fc43fca7fc21fceefc06fc0ffd94fcd8fca9fca9fcc2fc81fcdffc63fc01fd4bfc28fd3afc52fd30fc82fd2dfcb5fd31fcf2fd3cfc28fe4efc5afe69fc86fe89fcaefeaffccefed9fce8fe0afdfcfe3cfd0bff70fd16ffdafd1eff1dfe1cff5bfe14ff95fe08ffcbfef6fefbfedffe25
ffc3fe48ffa1fe65ff79fe7bff4dfe8bff20fe95fff1fd98ffc1fd94ff87fd87ff51fd71ff21fd53fff5fc2cffcefcfcfeaffcc4fe96fc84fe83fc84fe83fc07000000fc020000ffffff000000040000002d01020008000000fa0200000000000000000000040000002d01030004000000f001000007000000fc020000c0c0
c0000000040000002d010000040000002d0101009c000000380502002900220078fe86fb12fe7ffbe4fd75fbbafd68fb93fd57fb70fd42fb51fd29fb35fd0dfb0efdd8faf3fc9dfae3fc5cfadefc16fae4fcc9f9f8fc83f919fd45f948fd0df982fde1f8c6fdc1f814feadf86dfea7f8b5feaaf8f4feb2f82cffc1f85bffd4
f884ffeef8a8ff0cf9c8ff30f9e2ff58f9f7ff85f90500b3f90e00e4f9110016fa0b0065faf8ffabfad7ffeafaa9ff21fb6eff4dfb27ff6dfbd5fe80fb78fe86fb78fe86fb78fefdfabefef9fafbfeedfa2fffd9fa5affbcfa7aff99fa92ff71faa0ff46faa5ff16faa0ffe7f992ffbcf97aff94f959ff71f92fff55f9fafe
40f9bcfe34f973fe2ff92ffe34f9f3fd40f9c1fd55f997fd72f976fd95f95efdbcf950fde7f94cfd16fa50fd46fa5efd71fa75fd99fa96fdbcfac0fdd9faf4fdedfa31fef9fa78fefdfa78fefdfa040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000
002d0101004c0000002403240000000bf8effc0bf8effc93f75ffd93f740fd7cf726fd63f7fefc29f7e5fce6f6defc99f6e4fc55f6f7fc17f614fde3f53afdbef567fda4f59cfd94f5cffd8ff51efe8df500008df5000012f623fe12f6dcfd16f6a9fd21f685fd37f669fd58f657fd84f651fdb5f654fddff65efd05f76ffd
28f787fd48f7a8fd63f7d5fd76f70efe82f754fe86f7000086f700000bf8040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d0101003e00000024031d000000a1f457fda1f457fd16f5effc16f5effca1f49cfca1f457fc9ef426fc93f4f7fb79
f4d2fb4ff4c4fb35f4bafb15f4b4fbf1f3b2fbc8f3b5fb8cf3bffb4bf333fc5ff32cfcaef332fce1f346fc03f46bfc16f486fc1bf4a7fc1df4effc1df4effc84f357fd84f357fd1df400001df40000a1f4040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000
040000002d0101001a00000038050200050005005efc1cf3c5fb1cf3c5fb97f25efc97f25efc1cf300001cf3effc1cf3effc97f2000097f200001cf3040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d01010096000000380502002600220000
00cfef9dffcfefd0fff9eff5ff2cf00a0067f01100abf00e00d9f0040005f1f5ff2ff1deff58f1c2ff7df1a0ff9df17affbaf14effd2f11effe5f1eafef2f1b3fefaf179fefdf13ffefbf108fef3f1d4fde7f1a3fdd6f176fdc0f14ffda5f12dfd85f111fd60f1fafc38f1eafc0df1e0fce0f0defcb1f0e5fc6ef0fbfc32f0
1efd00f049fdd8efc5fbd8efc5fb54ef000054ef0000cfef79fe74f1bffe70f1fcfe64f130ff51f15aff34f17bff14f192ffeff0a0ffc8f0a5ff9ef0a0ff75f093ff4ef07dff2af05dff0af035fff0ef03ffddefc8fed1ef84fecdef38fed1eff8fdddefc2fdf0ef97fd0bf076fd2cf05ffd51f050fd79f04cfda4f050fdcf
f05efdf6f074fd19f194fd38f1befd53f1f1fd65f130fe70f179fe74f179fe74f1040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d01010094000000380502003400130004ff69ec15ffe0eb4dfff4eb7fff0eecabff30ecd0ff58ecedff88ec
0100bcec0d00f8ec110039ed0b008bedf8ffd3edd6ff13eea8ff4aee6eff77ee29ff96eed9fea9ee7ffeafee21fea9eecffd96ee87fd76ee4bfd49ee1bfd12eef9fcd4ede4fc8eeddefc40ede4fcf5ecf8fcb1ec1afd75ec49fd3fec84fd14eccafdf4eb1afee2eb76fedbeb9afedceb9afe26eed7fe1fee0cff10ee3afffa
ed60ffdced7effbaed93ff92eda0ff68eda5ff38eda2ff15ed9bfff5ec8fffd7ec7effbbec4cff8dec2bff7aec04ff69ec04ff69ec2cfe1eee2cfe68ecfefd6eecd6fd79ecb4fd88ec98fd9aec76fdbcec5efde3ec50fd0fed4bfd3fed4ffd6bed5afd94ed6dfdb8ed88fdd9edaafdf5edd0fd0aeefcfd18ee2cfe1eee2cfe
1eee040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d0101004c00000024032400000039ebeffc39ebeffcc1ea5ffdc1ea40fdaaea26fd91eafefc57eae5fc14eadefcc7e9e4fc83e9f7fc45e914fd11e93afdece867fdd2e89cfdc2e8cffdbd
e81efebbe80000bbe8000040e923fe40e9dcfd44e9a9fd4fe985fd65e969fd86e957fdb2e951fde3e954fd0dea5efd33ea6ffd56ea87fd76eaa8fd91ead5fda4ea0efeb0ea54feb4ea0000b4ea000039eb040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000
040000002d0101003e00000024031d0089ffcce6ffffb9e60700eee60a001de704005ee7f4ff8ee7d9ffb0e7b8ffc6e77effd2e71bffd6e757fdd6e757fd38e8effc38e8effcd6e72dfcd6e7ddfb52e7effc52e7effccce657fdcce657fd52e722ff52e751ff50e76bff4be77aff42e785ff34e78cff21e78fff07e789ffcc
e689ffcce6040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d0101001a00000038050200050005005efc4ae6c5fb4ae6c5fbc5e55efcc5e55efc4ae600004ae6effc4ae6effcc5e50000c5e500004ae6040000002d010200040000002d010300
04000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d010100b80000003805020040001900a0fffae2d5ff43e3f8ff89e30b00d0e311001be40d0058e401008ee4eeffbce4d3ffe2e4b1ff01e58bff16e560ff24e531ff28e5fafe22e5c8fe0ee59dfeefe47cfec9e462fe9ce450fe69e43c
fef3e327fe67e30efe05e3ebfd05e3c6fd07e3a6fd0ee38cfd1ae379fd2ae365fd47e357fd6ae34efd93e34cfdc2e34efdeee354fd14e45efd33e46dfd4de480fd62e49afd74e4bafd83e4e1fd8fe4cffd11e584fdfae448fdd6e41bfda5e408fd85e4f9fc61e4e4fc0ee4defcafe3e3fc54e3f5fc0be310fdd5e231fdafe2
59fd96e28bfd86e2bbfd81e206fe7fe2b7fe7fe24fff7de2a2ff76e2d2ff6ae2000055e20000e0e2d3fff1e2a0fffae2a0fffae276fe05e392fe60e3a9fedfe3b5fe25e4c3fe53e4d5fe71e4effe87e40dff95e42eff9ae447ff98e45fff90e474ff83e487ff72e496ff5be4a1ff40e4a8ff20e4aafffce3a1ffb3e397ff92
e388ff73e360ff3fe32cff1be3f4fe0be3a7fe05e376fe05e3040000002d010200040000002d01030004000000f001000007000000fc020000c0c0c0000000040000002d010000040000002d0101000e000000240305000000b4e1c5fbb4e1c5fb2fe100002fe10000b4e1040000002d010200040000002d01030004000000
f00100000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}}}}
\par }\dpx-708\dpy1453\dpxsize1311\dpysize9068\dplinehollow\dplinecor0\dplinecog0\dplinecob0\dplinew0\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat0}}
\par }{\*\pnseclvl1\pndec\pnprev1\pnstart1\pnindent708\pnhang}{\*\pnseclvl2\pndec\pnprev1\pnstart1\pnindent708\pnhang{\pntxtb ?}}{\*\pnseclvl3\pndec\pnprev1\pnstart1\pnindent708\pnhang{\pntxtb ?}}{\*\pnseclvl4\pndec\pnprev1\pnstart1\pnindent708\pnhang
{\pntxtb ?}}{\*\pnseclvl5\pndec\pnprev1\pnstart1\pnindent708\pnhang{\pntxtb ?}}{\*\pnseclvl6\pndec\pnprev1\pnstart1\pnindent708\pnhang{\pntxtb ?}}{\*\pnseclvl7\pndec\pnprev1\pnstart1\pnindent708\pnhang{\pntxtb ?}}{\*\pnseclvl8
\pndec\pnprev1\pnstart1\pnindent708\pnhang{\pntxtb ?}}{\*\pnseclvl9\pndec\pnprev1\pnstart1\pnindent708\pnhang{\pntxtb ?}}\pard\plain \s32\sa120\keep\keepn\pagebb\widctlpar \b\f5\fs48\lang2057 {\lang1033 {\*\bkmkstart NameOfProject}
F-Secure Anti-Virus Plug-In API (FPI API){\*\bkmkend NameOfProject}
\par }\pard\plain \ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\b\fs28\lang1033 API version: {\*\bkmkstart APIVerMajor}1{\*\bkmkend APIVerMajor}.{\*\bkmkstart APIVerMinor}1{\*\bkmkend APIVerMinor}6}{\b\fs28\revised\lang1033\revauth1\revdttm1178733632  (draft)}
{\b\fs28\lang1033 
\par }\trowd \trgaph108\trleft-108 \cellx4320\cellx8748 \pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Last saved: }{\field{\*\fldinst {\lang1033  SAVEDATE \\@ "yyyy-MM-dd" \\* MERGEFORMAT }}{\fldrslt {\lang1024 2000-02-02}}}{\lang1033 \line Version: }
{\field{\*\fldinst {\lang1033  REVNUM  \\* MERGEFORMAT }}{\fldrslt {\lang1024 2}}}{\lang1033 \line Last saved by: }{\field{\*\fldinst {\lang1033  LASTSAVEDBY  \\* MERGEFORMAT }}{\fldrslt {\lang1024 Jukka Kohonen}}}{\lang1033 \cell Status: Draft, }{
\b\lang1033 Reviewed}{\lang1033 , Valid, Archive \line Keywords: }{\field{\*\fldinst {\lang1033  KEYWORDS  \\* MERGEFORMAT }}{\fldrslt }}{\lang1033 \cell }\pard \widctlpar\intbl {\lang1033 \row }\trowd \trgaph108\trleft-108 \cellx8748 \pard 
\ri23\sb80\sa80\widctlpar\intbl {\lang1033 Filename: }{\field{\*\fldinst {\lang1033  FILENAME \\p \\* MERGEFORMAT }}{\fldrslt {\lang1024 K:\\Common\\CounterSign\\APIs\\fpi-api.doc}}}{\lang1033 \cell }\pard \widctlpar\intbl {\lang1033 \row }\pard 
\li839\ri23\sb80\sa80\widctlpar {\b\lang1033 {\*\bkmkstart NameOfProduct}API description{\*\bkmkend NameOfProduct}
\par }{\lang1033 This document is confidential and contains trade secrets of F-Secure Corporation.\line Copyright \'a9 1997-2000 F-Secure Corporation. All Rights Reserved.
\par Last update: }{\field{\*\fldinst {\lang1033  SAVEDATE \\@ "yyyy-MM-dd HH:mm" \\* MERGEFORMAT }}{\fldrslt {\lang1024 2000-02-01 16:58}}}{\lang1033 
\par The original copy of this document is maintained at:
\par }\pard\plain \s15\fi-295\li1559\ri40\widctlpar \f3\fs18\lang1024 {\field{\*\fldinst  FILENAME \\p \\* MERGEFORMAT }{\fldrslt K:\\Common\\CounterSign\\APIs\\fpi-api.doc}}
\par 
\par \pard\plain \qc\li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 \page }{\b\fs36\lang1033 Contents
\par }\pard\plain \s22\ri23\sb360\sa360\widctlpar\tx362\tqr\tx9633 \b\caps\f5\fs22\ul\lang2057 {\field\fldedit{\*\fldinst {\lang1033  TOC \\o "1-3" \\t "Item Header;4" }}{\fldrslt {\lang1024 1}{\b0\caps0\f4\fs24\ulnone\lang1024 \tab }{\lang1024 Overview\tab }
{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058582 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003800320000000000}}}{\fldrslt {\lang1024 5}}}{
\b0\caps0\f4\fs24\ulnone\lang1024 
\par }\pard\plain \s21\ri23\widctlpar\tx546\tqr\tx9633 \b\scaps\f5\fs22\lang2057 {\lang1024 1.1}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Introduction\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058583 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003800330000000000}}}{\fldrslt {\lang1024 5}}}{\b0\scaps0\f4\fs24\lang1024 
\par }{\lang1024 1.2}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Audience\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058584 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003800340000000000}}}{\fldrslt {\lang1024 5}}}{\b0\scaps0\f4\fs24\lang1024 
\par }{\lang1024 1.3}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Related documents\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058585 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003800350000000000}}}{\fldrslt {\lang1024 5}}}{\b0\scaps0\f4\fs24\lang1024 
\par }{\lang1024 1.4}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Requirements for the FPI API and FPI modules\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058586 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003800360000000000}}}{\fldrslt {\lang1024 5}}}{\b0\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s20\ri23\widctlpar\tx729\tqr\tx9633 \scaps\f5\fs22\lang2057 {\lang1024 1.4.1}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 General requirements\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058587 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003800370000000000}}}{\fldrslt {\lang1024 5}}}{\scaps0\f4\fs24\lang1024 
\par }{\lang1024 1.4.2}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Portability requirements\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058588 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003800380000000000}}}{\fldrslt {\lang1024 6}}}{\scaps0\f4\fs24\lang1024 
\par }{\lang1024 1.4.3}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Multithreading requirements\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058589 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003800390000000000}}}{\fldrslt {\lang1024 6}}}{\scaps0\f4\fs24\lang1024 
\par }{\lang1024 1.4.4}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Restrictions\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058590 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900300000000000}}}{\fldrslt {\lang1024 6}}}{\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s21\ri23\widctlpar\tx546\tqr\tx9633 \b\scaps\f5\fs22\lang2057 {\lang1024 1.5}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 API Version History\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058591 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900310000000000}}}{\fldrslt {\lang1024 6}}}{\b0\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s22\ri23\sb360\sa360\widctlpar\tx423\tqr\tx9633 \b\caps\f5\fs22\ul\lang2057 {\lang1024 2.}{\b0\caps0\f4\fs24\ulnone\lang1024 \tab }{\lang1024 API reference\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058592 \\h }{\fs20\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900320000000000}}}{\fldrslt {\lang1024 8}}}{\b0\caps0\f4\fs24\ulnone\lang1024 
\par }\pard\plain \s21\ri23\widctlpar\tx546\tqr\tx9633 \b\scaps\f5\fs22\lang2057 {\lang1024 2.1}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Functions reference\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058593 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900330000000000}}}{\fldrslt {\lang1024 8}}}{\b0\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s20\ri23\widctlpar\tx729\tqr\tx9633 \scaps\f5\fs22\lang2057 {\lang1024 2.1.1}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 General and scanning functions\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058594 \\h }{\fs20\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900340000000000}}}{\fldrslt {\lang1024 8}}}{\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s19\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 {\lang1024 FPI_GetModuleInformation\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058595 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900350000000000}}}{\fldrslt {\lang1024 8}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_Initialize\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058596 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900360000000000}}}{\fldrslt {
\lang1024 9}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_Uninitialize\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058597 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900370000000000}}}{\fldrslt {
\lang1024 10}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_ValidateDatabases\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058598 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900380000000000}}
}{\fldrslt {\lang1024 10}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_ReportScanningStatus\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058599 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380035003900390000000000}}
}{\fldrslt {\lang1024 12}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_ReloadDatabases\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058600 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000300000000000}}
}{\fldrslt {\lang1024 12}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_AutoReloadOff\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058601 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000310000000000}}}{\fldrslt {
\lang1024 13}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_AutoReloadOn\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058602 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000320000000000}}}{\fldrslt {
\lang1024 13}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_CustomSettings\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058603 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000330000000000}}}{\fldrslt 
{\lang1024 13}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_ScanFile\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058604 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000340000000000}}}{\fldrslt {
\lang1024 14}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_ScanBootBlock\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058605 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000350000000000}}}{\fldrslt {
\lang1024 15}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPI_ScanMemory\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058606 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000360000000000}}}{\fldrslt {
\lang1024 17}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPICALLBACK\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058607 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000370000000000}}}{\fldrslt {
\lang1024 17}}}{\f4\fs24\lang1024 
\par }\pard\plain \s20\ri23\widctlpar\tx729\tqr\tx9633 \scaps\f5\fs22\lang2057 {\lang1024 2.1.2}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 FPI file and sector I/O functions\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058608 \\h }{\fs20\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000380000000000}}}{\fldrslt {\lang1024 20}}}{\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s19\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 {\lang1024 FPIFILEIOFN_GETLASTERROR\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058609 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003000390000000000}}}{\fldrslt {\lang1024 20}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_OPEN\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058610 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100300000000000}}}{\fldrslt {
\lang1024 20}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_READ\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058611 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100310000000000}}}{\fldrslt {
\lang1024 21}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_WRITE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058612 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100320000000000}}}{\fldrslt {
\lang1024 22}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_CLOSE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058613 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100330000000000}}}{\fldrslt {
\lang1024 23}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_GETSIZE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058614 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100340000000000}}
}{\fldrslt {\lang1024 23}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_GETPOS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058615 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100350000000000}}}{\fldrslt 
{\lang1024 24}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_SETPOS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058616 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100360000000000}}}{\fldrslt 
{\lang1024 24}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_SETEND\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058617 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100370000000000}}}{\fldrslt 
{\lang1024 25}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_GETATTR\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058618 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100380000000000}}
}{\fldrslt {\lang1024 25}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_RWBOOTBLOCK\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058619 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003100390000000000}}
}{\fldrslt {\lang1024 26}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_RWSECTORPHYS\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058620 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200300000000000}}
}{\fldrslt {\lang1024 27}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_RWSECTORLOGC\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058621 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200310000000000}}
}{\fldrslt {\lang1024 28}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFN_GETDRIVEGEOMETRY\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058622 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200320000000000}}
}{\fldrslt {\lang1024 28}}}{\f4\fs24\lang1024 
\par }\pard\plain \s20\ri23\widctlpar\tx729\tqr\tx9633 \scaps\f5\fs22\lang2057 {\lang1024 2.1.3}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Virus descriptions information functions\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058623 \\h }{\fs20\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200330000000000}}}{\fldrslt {\lang1024 29}}}{\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s19\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 {\lang1024 FPIVI_GetInterfaceType\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058624 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200340000000000}}}{\fldrslt {\lang1024 29}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIVI_InternalGetIndexCount\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058625 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200350000000000}}
}{\fldrslt {\lang1024 29}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIVI_InternalGetName\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058626 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200360000000000}}
}{\fldrslt {\lang1024 30}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIVI_InternalGetDescription\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058627 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200370000000000}}
}{\fldrslt {\lang1024 30}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIVI_ExternalShowDescription\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058628 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200380000000000}}
}{\fldrslt {\lang1024 31}}}{\f4\fs24\lang1024 
\par }\pard\plain \s21\ri23\widctlpar\tx546\tqr\tx9633 \b\scaps\f5\fs22\lang2057 {\lang1024 2.2}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Structures reference\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058629 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003200390000000000}}}{\fldrslt {\lang1024 31}}}{\b0\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s19\ri23\widctlpar\tqr\tx9633 \f5\fs22\lang2057 {\lang1024 FPIMODULEINFO\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058630 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300300000000000}}}{\fldrslt {\lang1024 31}}}{\f4\fs24\lang1024 
\par }{\lang1024 FPIFILEIOFNTABLE\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058631 \\h }{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300310000000000}}}{\fldrslt {
\lang1024 32}}}{\f4\fs24\lang1024 
\par }\pard\plain \s21\ri23\widctlpar\tx546\tqr\tx9633 \b\scaps\f5\fs22\lang2057 {\lang1024 2.3}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Error codes reference\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058632 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300320000000000}}}{\fldrslt {\lang1024 33}}}{\b0\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s20\ri23\widctlpar\tx729\tqr\tx9633 \scaps\f5\fs22\lang2057 {\lang1024 2.3.1}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 General error codes\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058633 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300330000000000}}}{\fldrslt {\lang1024 33}}}{\scaps0\f4\fs24\lang1024 
\par }{\lang1024 2.3.2}{\scaps0\f4\fs24\lang1024 \tab }{\lang1024 File and sector I/O error codes\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058634 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300340000000000}}}{\fldrslt {\lang1024 33}}}{\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s22\ri23\sb360\sa360\widctlpar\tx423\tqr\tx9633 \b\caps\f5\fs22\ul\lang2057 {\lang1024 3.}{\b0\caps0\f4\fs24\ulnone\lang1024 \tab }{\lang1024 FPI module programmer\rquote s guide\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058635 \\h 
}{\fs20\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300350000000000}}}{\fldrslt {\lang1024 35}}}{\b0\caps0\f4\fs24\ulnone\lang1024 
\par }\pard\plain \s21\ri23\widctlpar\tx546\tqr\tx9633 \b\scaps\f5\fs22\lang2057 {\lang1024 3.1}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Introduction\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058636 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300360000000000}}}{\fldrslt {\lang1024 35}}}{\b0\scaps0\f4\fs24\lang1024 
\par }{\lang1024 3.2}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 General algorithm for FPI_ScanFile()\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058637 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300370000000000}}}{\fldrslt {\lang1024 35}}}{\b0\scaps0\f4\fs24\lang1024 
\par }{\lang1024 3.3}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Compiler support\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058638 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300380000000000}}}{\fldrslt {\lang1024 35}}}{\b0\scaps0\f4\fs24\lang1024 
\par }{\lang1024 3.4}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Platform-specific information\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058639 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003300390000000000}}}{\fldrslt {\lang1024 35}}}{\b0\scaps0\f4\fs24\lang1024 
\par }{\lang1024 3.5}{\b0\scaps0\f4\fs24\lang1024 \tab }{\lang1024 Eicar-test example\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc474058640 \\h }{\fs20\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f00630034003700340030003500380036003400300000000000}}}{\fldrslt {\lang1024 36}}}{\b0\scaps0\f4\fs24\lang1024 
\par }\pard\plain \s1\ri29\sb240\sa120\keep\keepn\pagebb\widctlpar \b\f5\fs36\lang2057 }}\pard\plain \s1\ri29\sb240\sa120\keep\keepn\pagebb\widctlpar \b\f5\fs36\lang2057 {\lang1033 {\*\bkmkstart _Toc419856620}{\*\bkmkstart _Toc426525410}
{\*\bkmkstart _Toc434132662}
\par {\*\bkmkstart _Toc474058582}1\tab Overview{\*\bkmkend _Toc419856620}{\*\bkmkend _Toc426525410}{\*\bkmkend _Toc434132662}{\*\bkmkend _Toc474058582}
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc474058583}{\*\bkmkstart _Toc419856621}{\*\bkmkstart _Toc426525411}{\*\bkmkstart _Toc434132663}1.1\tab Introduction{\*\bkmkend _Toc474058583}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 F-Secure Anti-Virus Plug-In API (FPI API) is a high-performance interface to the anti-virus engines supported by F-Secure:
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}}\pard\plain \s29\fi-238\li1259\ri17\sb40\sa40\keep\widctlpar{\*\pn \pnlvlblt\ulw\pnf1\pnstart1\pnindent240\pnhang{\pntxtb \'b7}}\f5\fs20\lang2057 {\lang1033 F\_PROT
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}AVP
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}Orion
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 The API provides access to mult
iple scanning engines simultaneously and includes services such as scanning inside ZIP, LZH and ARJ files in a recursive fashion. It also includes disinfection capabilities.
\par FPI is currently available and supported on Windows 95, 98, NT, 3.1, OS/2 and Linux. Additional Intel based UNIX platforms are made available on demand.}
\par \pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc474058584}1.2\tab Audience{\*\bkmkend _Toc474058584}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 This document It is targeted for two audiences:
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}}\pard\plain \s29\fi-238\li1259\ri17\sb40\sa40\keep\widctlpar{\*\pn \pnlvlblt\ulw\pnf1\pnstart1\pnindent240\pnhang{\pntxtb \'b7}}\f5\fs20\lang2057 {\lang1033 Programmers of anti\_
virus products that want to use one or more of the scanning engines supported by F-Secure.
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}Programmers of scan engine plug-in modules (FPI modules) for the products which use this API.
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc452345639}{\*\bkmkstart _Toc474058585}{\*\bkmkstart _Toc419856623}{\*\bkmkstart _Toc426525413}{\*\bkmkstart _Toc434132665}{\*\bkmkend _Toc419856621}
{\*\bkmkend _Toc426525411}{\*\bkmkend _Toc434132663}1.3\tab Related documents{\*\bkmkend _Toc452345639}{\*\bkmkend _Toc474058585}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 The FPI API is part of the CounterSign architecture.  See }{\i\lang1033 CounterSign Architecture Overview}{\lang1033  for more information about the CounterSign architecture.
\par The Countersign SDK provides header files and sample code necessary for developing FPI modules.
\par See }{\i\lang1033 F-Secure Gatekeeper Device Driver API Description}{\lang1033  for the API to be used by plug-in modules for the F-Secure real-time scanner (Gatekeeper).
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc419856624}{\*\bkmkstart _Toc426525414}{\*\bkmkstart _Toc434132666}{\*\bkmkstart _Toc474058586}{\*\bkmkend _Toc419856623}{\*\bkmkend _Toc426525413}
{\*\bkmkend _Toc434132665}1.4\tab Requirements for the FPI API and FPI modules{\*\bkmkend _Toc419856624}{\*\bkmkend _Toc426525414}{\*\bkmkend _Toc434132666}{\*\bkmkend _Toc474058586}
\par }\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart _Toc419856625}{\*\bkmkstart _Toc426525415}{\*\bkmkstart _Toc434132667}{\*\bkmkstart _Toc474058587}1.4.1\tab General requirements{\*\bkmkend _Toc419856625}
{\*\bkmkend _Toc426525415}{\*\bkmkend _Toc434132667}{\*\bkmkend _Toc474058587}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 FPI modules provide FSAV ODS with the following services through the FPI API:
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}}\pard \fi-283\li1701\ri23\sb80\sa80\widctlpar{\*\pn \pnlvlblt\ulw\pnf1\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}{\lang1033 scanning files and disk boot blocks for viruses
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}optional disinfection of infected files
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}returning necessary information (name, version etc) about the FPI module
\par }\pard \li839\ri23\sb80\sa80\widctlpar{\*\pn \pnlvlcont\pndec\ulw }{\lang1033 FSAV ODS provides the FPI modules with the following services through callback functions of the FPI API:
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}}\pard \fi-283\li1701\ri23\sb80\sa80\widctlpar{\*\pn \pnlvlblt\ulw\pnf1\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}{\lang1033 file and disk I/O functions, including \ldblquote virtual\rdblquote 
 file I/O (for scanning files inside ZIP etc archives; see Appendix A for the list of currently supported archive formats)
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\lang1033 In addition to signature based virus scanning, the API supports heuristic scanning and integrity checking.
\par The API makes it possible for FPI modules to provide their own virus descriptions information.  It is not required for the FPI module to provide that information.
\par An FPI module must provide all the functions which are specified to be provided by the FPI module in }{\i\lang1033 API reference }{\lang1033 of this document.  Similarly, t
he ODS will provide all the functions which are specified to be provided by it (eg, the file and sector I/O functions).
\par Failure to conform to the requirements presented in this document may result in the FPI module not to get certified by F-Secure to be used with F-Secure Anti-Virus.  At run time, ill-behaved FPI modules may be stopped from being used by the ODS.
\par }\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart _Toc419856626}{\*\bkmkstart _Toc426525416}{\*\bkmkstart _Toc434132668}{\*\bkmkstart _Toc474058588}1.4.2\tab Portability requirements
{\*\bkmkend _Toc419856626}{\*\bkmkend _Toc426525416}{\*\bkmkend _Toc434132668}{\*\bkmkend _Toc474058588}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Although the API is primarily targeted for Windows platforms, its design will not be restricting it from being deployed on other operating system platforms in the future.
\par FPI API is identical for Win16 and Win32 FPI modules.
\par The same Win32 FPI module (DLL) must work on the following platforms: Windows 95/98, Windows NT (Intel) 3.50, 3.51, 4.0, 5.0.
\par File names and text messages containing DBCS (double-byte character set) characters must be supported.
\par Unicode is }{\ul\lang1033 not}{\lang1033  supported for file names and text messages.  The FPI modules may use Unicode internally as long as they conform to other portability requirements, but the FPI API does not support Unicode.
\par UNC filenames must be supported.
\par }\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart _Toc419856627}{\*\bkmkstart _Toc426525417}{\*\bkmkstart _Toc434132669}{\*\bkmkstart _Toc474058589}1.4.3\tab Multithreading requirements
{\*\bkmkend _Toc419856627}{\*\bkmkend _Toc426525417}{\*\bkmkend _Toc434132669}{\*\bkmkend _Toc474058589}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Scanning functions must work synchronously (scan of an object must be completed and necessary reporting done) before the function returns.
\par Scanning functions of Win32 FPI modules must be reentrant (scan of an object may be requested before a previous scan has completed).  Such modules can also expect the API functions provided by the ODS (FPICALLBACK, FPIFILEIOFNxxx) to be reentrant.
\par }\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart _Toc419856628}{\*\bkmkstart _Toc426525418}{\*\bkmkstart _Toc434132670}{\*\bkmkstart _Toc474058590}1.4.4\tab Restrictions{\*\bkmkend _Toc419856628}
{\*\bkmkend _Toc426525418}{\*\bkmkend _Toc434132670}{\*\bkmkend _Toc474058590}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 API functions must not return error values other than those specified under \ldblquote Possible error conditions\rdblquote  as documented for each function.
\par FPI modules are not allowed to interact with the computer\rquote s desktop (to show message boxes etc) unless explicitly permitted in this document.
\par FPI modules are allowed to maintain their own private settings in the registry or ini files, as long as they confirm to the requirements documented in }{\i\lang1033 FPI Modules Installation and Registration Guide}{\lang1033 .}{\cs34\v\fs16\lang1033 
{\*\atnid URR}{\*\atnauthor Urmas Rahu}\chatn {\*\annotation \pard\plain \s35\li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\field\flddirty{\*\fldinst PAGE \\# "'Page: '#'\line '"{\cs34\fs16   }}{\fldrslt }}{\cs34\fs16 \chatn }
Idea for the future: we may add a generic API function for passing FPI module specific settings to the module.  Such settings would be managed through normal F-Secure settings/policy management channels.}}{\lang1033 
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc474058591}1.5\tab API Version History{\*\bkmkend _Toc474058591}
\par }\pard\plain \fi-630\li1440\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 1.0\tab First version.
\par 1.10\tab More uniform error handling (always uses the callback function). Calling conventions of FPI_GetModuleInformation and FPI_Initialize modified. 
\par 1.11\tab Added support for aborting a scan (FPIEVENT_QUERYABORT, FPIERROR_ABORTED).
\par 1.12\tab Added database validation features (FPI_ValidateDatabases, FPIEVENT_DBVALIDATION)
\par 1.15\tab 
Extended database validation features.  Calling convention and status codes of FPI_ValidateDatabases modified; new functions added (FPI_ReportScanningStatus, FPI_ReloadDatabases, FPI_AutoReloadOff, FPI_AutoReloadOn); semantics of FPI_Initialize chang
ed in case of database errors. 
\par {\revised\revauth1\revdttm1178733632 1.16\tab Added support for custom settings (FPI_CustomSettings).}
\par 
\par \pard\plain \s1\ri29\sb720\sa120\keep\keepn\pagebb\widctlpar \b\f5\fs36\lang2057 {\lang1033 {\*\bkmkstart _Toc419856629}{\*\bkmkstart _Toc426525419}{\*\bkmkstart _Toc434132671}{\*\bkmkstart _Toc474058592}2.\tab API reference{\*\bkmkend _Toc419856629}
{\*\bkmkend _Toc426525419}{\*\bkmkend _Toc434132671}{\*\bkmkend _Toc474058592}
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc419856630}{\*\bkmkstart _Toc426525420}{\*\bkmkstart _Toc434132672}{\*\bkmkstart _Toc474058593}2.1\tab Functions reference{\*\bkmkend _Toc419856630}
{\*\bkmkend _Toc426525420}{\*\bkmkend _Toc434132672}{\*\bkmkend _Toc474058593}
\par }\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart _Toc419856631}{\*\bkmkstart _Toc426525421}{\*\bkmkstart _Toc434132673}{\*\bkmkstart _Toc474058594}2.1.1\tab General and scanning functions
{\*\bkmkend _Toc419856631}{\*\bkmkend _Toc426525421}{\*\bkmkend _Toc434132673}{\*\bkmkend _Toc474058594}
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856632}{\*\bkmkstart _Toc426525422}{\*\bkmkstart _Toc434132674}{\*\bkmkstart _Toc474058595}FPI_GetModuleInformation
{\*\bkmkend _Toc419856632}{\*\bkmkend _Toc426525422}{\*\bkmkend _Toc434132674}{\*\bkmkend _Toc474058595}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 BOOL FPI_GetModuleInformation (DWORD apiversion_, LPFPIMODULEINFO moduleinfo_, LPCFPIFILEIOFNTABLE fileiotable, LPFPICALLBACK reportcallback_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 
Fills the module information structure with information about the FPI module.  This function may be called before FPI_Initialize() is called.  In fact, an FPI module may rely on the fact that it will be called before FPI_Initialize().
\par Also provides the fileiotable_ and reportcallback_ pointers which the scanner should save in global variables, for later use in other FPI_xxx functions.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 apiversion_\tab }{\lang1033 
Contains the version number of FPI API, with major version number is in the high byte of the high word, and minor version number in the low byte of the high word.  Contents of the low word are reserved for future use.\line 
FPI API version conforming to the current document is: }{\field{\*\fldinst {\lang1033  REF APIVerMajor}}{\fldrslt {\b\fs28\lang1033 1}}}{\lang1033 .}{\field{\*\fldinst {\lang1033  REF APIVerMinor}}{\fldrslt {\b\fs28\lang1033 1}}}{\i\lang1033 
\par moduleinfo_}{\lang1033 \tab Points to the module information structure to be filled by the FPI module.
\par }{\i\lang1033 fileiotable_\tab }{\lang1033 Points to the structure with FPI file I/O function po
inters.  These functions are to be called for performing all file I/O (opening, reading etc) and disk I/O operations.  These function pointers will remain valid until FPI_Uninitialize() is called.  Note that the pointer to the function pointers structure 
will also remain valid (the FPI module does not need to make a local copy of the table).  See }{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\* MERGEFORMAT }}{\fldrslt {\lang1033 2.1.2\tab FPI file and sector I/O functions}}}{\lang1033  (}
{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\n }}{\fldrslt {\lang1033 0}}}{\lang1033 ) for more information.}{\i\lang1033 
\par reportcallback_}{\lang1033 \tab Callback 
function for reporting about infections, errors, and asking for confirmation about possible actions. All subsequent FPI_xxx functions (such as FPI_Initialize and FPI_ScanFile) shall use this same callback function; the refdata_ parameter is used for telli
ng the error context.
\par 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success
\par FALSE\tab The FPI module was unable to fill all fields of the structure.
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions (reported through the callback):
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIERROR_UNKNOWN\line FPIERROR_WRONGAPI\line FPIERROR_INVALIDPARAMETER\line FPIERROR_NOMEM}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 Before calling the function, the }{\i\lang1033 fStructSize}{\lang1033 
 field of the FPIMODULEINFO structure must be set to the size of the structure.  If the FPI module expects this value to be smaller (meaning that the caller expects more fields to be filled than the FPI module is aware of), the function should fail.  If t
he FPI module expects this value to be larger, it should fill only the fields that are below the }{\i\lang1033 fStructSize}{\lang1033  limit, and return TRUE to indicate success.  The FPI module should also return FALSE if it is not compati
ble with the version of the API as passed in the }{\i\lang1033 apiversion_}{\lang1033  parameter.}{\b\lang1033 
\par }{\lang1033 FPI_GetModuleInformation should not fail because of missing or invalid database files. If it cannot fill the date fields of FPIMODULEINFO, it should set them zero and return TRUE.}{\b\lang1033  
\par }{\lang1033 In case of an error, FPI_GetModuleInformation must call the report callback to report the cause. It must use FPIREFDATA_GETMODULEINFORMATION as the refdata_ parameter.}{\b\lang1033 
\par }{\lang1033 See also: FPIMODULEINFO structure, FPI_Initialize(), }{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\* MERGEFORMAT }}{\fldrslt {\lang1033 2.1.2\tab FPI file and sector I/O functions}}}{\lang1033 .}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856633}{\*\bkmkstart _Toc426525423}{\*\bkmkstart _Toc434132675}{\*\bkmkstart _Toc474058596}FPI_Initialize
{\*\bkmkend _Toc419856633}{\*\bkmkend _Toc426525423}{\*\bkmkend _Toc434132675}{\*\bkmkend _Toc474058596}
\par }\pard\plain \s15\fi-288\li1706\ri43\sb120\widctlpar \f3\fs18\lang1024 BOOL FPI_Initialize{\b  }();
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 
Performs the necessary initialization of the module (allocation of memory, loading of signature databases etc).  FSAV ODS will not call any scanning functions before this function has been called.  If FPI_Initialize() is called after the module has alread
y been initialized by a previous FPI_Initialize() call, the function should fail with the FPIERROR_INIT_MULTIPLE error code.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 none
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success
\par FALSE\tab The FPI module failed to initialize.\line 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions (reported through the callback):
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIERROR_UNKNOWN\line FPIERROR_INIT_MULTIPLE\line FPIERROR_NOMEM\line FPIERROR_NOPGMFILE\line FPIERROR_NODBFILE\line FPIERROR_BADDBFILE}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 An FPI module is not allowed to show its own error message in case it fails to initialize.  However, a module is allowed to write diagnostic information to a log file, NT\rquote 
s event log etc.  If it fails and returns FALSE to indicate failure , the module will be unloaded and FPI_Uninitialize() will not be called.
\par In case of an error, FPI_Initialize must call the report callback to report the cause. It must use FPIREFDATA_INITIALIZE as the refdata_ parameter.
\par In case of missing or invalid database files, FPI_Initialization should not fail. It can report an error, but should return TRUE. Further scan requests should be silently ignored until the database files are in place and valid.}{\b\lang1033  
\par }{\lang1033 See also: }{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\* MERGEFORMAT }}{\fldrslt {\lang1033 2.1.2\tab FPI file and sector I/O functions}}}{\lang1033  (}{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\n }}{\fldrslt {
\lang1033 0}}}{\lang1033 ), FPI_Uninitialize().
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856634}{\*\bkmkstart _Toc426525424}{\*\bkmkstart _Toc434132676}{\*\bkmkstart _Toc474058597}FPI_Uninitialize
{\*\bkmkend _Toc419856634}{\*\bkmkend _Toc426525424}{\*\bkmkend _Toc434132676}{\*\bkmkend _Toc474058597}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 BOOL FPI_Uninitialize ();
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 
This function is called when the ODS does not need the module any longer.  The FPI module can free allocated memory and do other cleanup.  An ODS instance (process) will not call any scanning functions after it has called this function.  If FPI
_Uninitialize() is called for a module which has not been initialized yet then it should fail with the FPIERROR_NOTINIT error code.  Multithreading note: an FPI module is not expected to behave gracefully should FPI_Uninitialize() be called while a scan c
all is in process.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 none
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success
\par FALSE\tab Error occurred.
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions (reported through the callback):
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIERROR_UNKNOWN\line FPIERROR_NOTINIT\line FPIERROR_NOMEM}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 See also: FPI_Initialize().}{\b\lang1033 
\par }{\lang1033 In case of an error, FPI_Uninitialize must call the report callback to report the cause. It must use FPIREFDATA_UNINITIALIZE as the refdata_ parameter.}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc474058598}FPI_ValidateDatabases{\*\bkmkend _Toc474058598}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 DWORD FPI_ValidateDatabases (LPCSTR dbdir_, DWORD refdata_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Examines database files in specified directory (}{\i\lang1033 update directory}{\lang1033 ), }{\i\lang1033 without}{\lang1033 
 taking them into actual use, and reports their validity.
\par This function is not called before FPI_GetModuleInformation has been called.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 dbdir_\tab }{\lang1033 Specifies a directory (}{\i\lang1033 update directory}{\lang1033 ) where the FPI module can find the database files to be validated. If }{\i\lang1033 dbdir_}{
\lang1033  is NULL, then the regular database directory is used.
\par }{\i\lang1033 refdata_\tab }{\lang1033 Reference data: this value must be passed to the callback function as the }{\i\lang1033 refdata_}{\lang1033  parameter.}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab if database validation was performed successfully (whether or not the databases were valid)
\par FALSE\tab if database validation could not be performed succesfully
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 FPI_ValidateDatabases reports the database status by calling the report callback once for each database file found in the update directory (or expected to be found but missing).
 See the table below for exact rules.}{\b\lang1033 
\par }{\lang1033 The callback must be called with the following parameters:}{\b\lang1033 
\par }{\i\lang1033 event_}{\lang1033 \tab FPIEVENT_DBVALIDATION}{\b\lang1033 
\par }{\i\lang1033 param_}{\lang1033 \tab One of the database status codes, see below}{\b\lang1033 
\par }{\i\lang1033 flags_}{\lang1033 \tab Date of the database file, packed as follows:}{\b\lang1033 
\par }\pard \fi-22\li2149\ri23\sb80\sa80\widctlpar {\lang1033 high word:\tab full year (eg. 1999)}{\b\lang1033 
\par }{\lang1033 high byte of low word:\tab month (1-12)}{\b\lang1033 
\par }{\lang1033 low byte of low word:\tab day (1-31)}{\b\lang1033 
\par }{\lang1033 If the database date cannot be determined, }{\i\lang1033 flags_}{\lang1033  should be zero.}{\b\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\i\lang1033 message_}{\lang1033 \tab Name of the database file, without path (eg. \ldblquote sign.def\rdblquote )}{\b\lang1033 
\par }{\i\lang1033 refdata_}{\lang1033 \tab The refdata_ that was passed to FPI_ValidateDatabases}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible database status codes (reported through the callback):
\par }\pard \li1418\ri23\sb80\sa80\widctlpar\tx3828 {\fs16\lang1033 FSAV_DB_VALID\tab This database file is valid.
\par FSAV_DB_NOTCHECKED\tab The file was not reliably verified, but is assumed to be valid.
\par FSAV_DB_DELETE\tab The file exists in the in-use directory, but does not exist in the update directory, and is not needed any more after the update, thus it can be deleted from the in-use directory after the update has been performed.
\par FSAV_DB_MISSING\tab The file is required, but missing.
\par FSAV_DB_INVALID\tab Generic error code: The file is not a valid database file.
\par FSAV_DB_NOTDB\tab The file does not even look like a database file (eg. header format or magic number does not match).
\par FSAV_DB_CORRUPT\tab The file seems to be corrupted (eg. a CRC check fails).
\par FSAV_DB_VERSION\tab The file version is not compatible with this version of the FPI module (either too old or too new).}{\b\fs16\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\fs16\lang1033 If the FPI module knows that a database file is not valid, it is recommended that it reports this w
ith a specific error code (FSAV_DB_NOTDB, FSAV_DB_CORRUPT or FSAV_DB_VERSION). If the exact reason cannot be determined, then it should return the generic error code FSAV_DB_INVALID.
\par If a required database file is not found in the update directory, it should be reported with FSAV_DB_MISSING, }{\i\fs16\lang1033 unless}{\fs16\lang1033  the }{\i\fs16\lang1033 in-use}{\fs16\lang1033 
 directory already contains a valid file by that name; in that case, nothing should be reported about that file.
\par Files in the in-use directory should be reported only if the FPI module wants to delete them. If no files are found in the update directory, but a valid set of files already exists in the in-use directory, the module should report nothing.
\par \page The following chart summarizes what should be reported for a file, depending on its existence and validity in the in-use and update directories.
\par 
\par }\trowd \trgaph108\trleft851 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx2356\clbrdrt\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx3891\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx5938\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx7729\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx9498 \pard 
\ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 \cell update\line existing and valid\cell update\line existing but invalid\cell update\line missing (and required)\cell update\line missing (and not needed after the update)\cell }\pard \widctlpar\intbl {
\fs16\lang1033 \row }\trowd \trgaph108\trleft851 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx2356\clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx3891\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 
\cellx5938\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx7729\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx9498 \pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 in-use\line existing and valid
\cell FSAV_DB_VALID\cell One of FSAV_DB_INVALID, FSAV_DB_NOTDB, FSAV_DB_CORRUPT,\line FSAV_DB_VERSION\cell no message\cell FSAV_DB_DELETE\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\trowd \trgaph108\trleft851 \clbrdrt\brdrs\brdrw15 \clbrdrl
\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx2356\clbrdrt\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx3891\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx5938
\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx7729\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx9498 \pard \ri23\sb80\sa80\widctlpar\intbl {
\fs16\lang1033 in-use\line existing but invalid\cell FSAV_DB_VALID\cell One of FSAV_DB_INVALID, FSAV_DB_NOTDB, FSAV_DB_CORRUPT,\line FSAV_DB_VERSION\cell FSAV_DB_MISSING\cell FSAV_DB_DELETE\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\trowd 
\trgaph108\trleft851 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx2356\clbrdrt\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx3891\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 
\clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx5938\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx7729\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 
\cellx9498 \pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 in-use\line missing (and required)\cell FSAV_DB_VALID\cell One of FSAV_DB_INVALID, FSAV_DB_NOTDB, FSAV_DB_CORRUPT,\line FSAV_DB_VERSION\cell FSAV_DB_MISSING\cell no message\cell }\pard 
\widctlpar\intbl {\fs16\lang1033 \row }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\fs16\lang1033 
\par }{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions (reported through the callback):
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIERROR_UNKNOWN
\par FPIERROR_NOMEM}{\b\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc474058599}FPI_ReportScanningStatus{\*\bkmkend _Toc474058599}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 BOOL FPI_ReportScanningStatus ();
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 This function is called to determine whether the FPI module is currently able to scan files successfully.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 none
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx5387 {\lang1033 TRUE\tab Yes, scanning is possible.
\par FALSE\tab No, scanning is not possible, eg. because the database files are missing or invalid.
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc474058600}FPI_ReloadDatabases{\*\bkmkend _Toc474058600}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 void FPI_ReloadDatabases ();
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 This function is called to inform the FPI module that its database files have been updated and the module should reload them.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 none
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx5387 {\lang1033 nothing
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc474058601}FPI_AutoReloadOff{\*\bkmkend _Toc474058601}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 void FPI_AutoReloadOff ();
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 This function is called to inform the FPI module that database files will be updated, and it should not try to reopen or read them until FPI_AutoReloadOn has been called.
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\lang1033 If scanning is not possible at all during the time while database files cannot be read, the module is allowed to silently ignore all scanning requests.
\par If scanning is still possible, the module should perform scanning requests normally (without touching the database files).
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 none
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx5387 {\lang1033 nothing
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc474058602}{\*\bkmkstart _Toc419856635}{\*\bkmkstart _Toc426525425}{\*\bkmkstart _Toc434132677}FPI_AutoReloadOn
{\*\bkmkend _Toc474058602}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 void FPI_AutoReloadOn ();
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 This function is called to inform the FPI module that database files have been updated, and may now be reopened and read when needed.
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\lang1033 All scanning requests should now be performed normally.
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 none
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx5387 {\lang1033 nothing
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\revised\lang1033\revauth1\revdttm1178733583 {\*\bkmkstart _Toc474058603}FPI_CustomSettings{\*\bkmkend _Toc474058603}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\revised\revauth1\revdttm1178733583 void FPI_CustomSettings (}{\revised\revauth1\revdttm1178733585 LPCSTR settings_}{\revised\revauth1\revdttm1178733583 );
\par }\pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\revised\lang1033\revauth1\revdttm1178733583 This function is called to pass }{\revised\lang1033\revauth1\revdttm1178733584 scan engine}{\revised\lang1033\revauth1\revdttm1178733583 
 specific settings to }{\revised\lang1033\revauth1\revdttm1178733584 an FPI module}{\revised\lang1033\revauth1\revdttm1178733583 .  }{\revised\lang1033\revauth1\revdttm1178733586 
This function may be called after initializing an FPI module, and at any point }{\revised\lang1033\revauth1\revdttm1178733587 after that when necessary to inform the FPI module of its settings being changed.}{\revised\lang1033\revauth1\revdttm1178733618 
  This API function has been added to the specification in version 1.16.}{\revised\lang1033\revauth1\revdttm1178733583 
\par }{\b\revised\lang1033\revauth1\revdttm1178733583 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\revised\lang1033\revauth1\revdttm1178733588 settings_\tab }{\revised\lang1033\revauth1\revdttm1178733588 Specifies FPI module specific settings as a NULL-terminated string.}{
\revised\lang1033\revauth1\revdttm1178733589   The passed pointer is never NULL}{\revised\lang1033\revauth1\revdttm1178733590 ,}{\revised\lang1033\revauth1\revdttm1178733589  but may point to an empty string}{\revised\lang1033\revauth1\revdttm1178733590 
 ("").}{\revised\lang1033\revauth1\revdttm1178733593   See Notes below for more information.}{\revised\lang1033\revauth1\revdttm1178733588 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\revised\lang1033\revauth1\revdttm1178733583 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx5387 {\revised\lang1033\revauth1\revdttm1178733590 nothing
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\revised\lang1033\revauth1\revdttm1178733583 Possible error conditions (reported through the callback):
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\revised\lang1033\revauth1\revdttm1178733591 The function call must not generate errors.}{\revised\lang1033\revauth1\revdttm1178733583 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\revised\lang1033\revauth1\revdttm1178733583 Notes:}{\revised\lang1033\revauth1\revdttm1178733583 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\revised\lang1033\revauth1\revdttm1178733593 The settings string contains scanner specific parameters}{\revised\lang1033\revauth1\revdttm1178733594  in text format}{
\revised\lang1033\revauth1\revdttm1178733593 .  For example, it could look li}{\revised\lang1033\revauth1\revdttm1178733595 ke:
\par }{\f11\revised\lang1033\revauth1\revdttm1178733595 "/noheuristocs /flags=04fc"}{\f11\revised\lang1033\revauth1\revdttm1178733597 
\par }{\revised\lang1033\revauth1\revdttm1178733597 or}{\revised\lang1033\revauth1\revdttm1178733596 
\par }{\f11\revised\lang1033\revauth1\revdttm1178733596 "heuristics=0;flags=04fc"
\par }{\revised\lang1033\revauth1\revdttm1178733597 The exact format of the settings }{\revised\lang1033\revauth1\revdttm1178733619 string}{\revised\lang1033\revauth1\revdttm1178733602  }{\revised\lang1033\revauth1\revdttm1178733597 is specific }{
\revised\lang1033\revauth1\revdttm1178733598 to }{\revised\lang1033\revauth1\revdttm1178733597 particular FPI module}{\revised\lang1033\revauth1\revdttm1178733599 s}{\revised\lang1033\revauth1\revdttm1178733597  and is not specified by }{
\revised\lang1033\revauth1\revdttm1178733598 FPI API.  The only re}{\revised\lang1033\revauth1\revdttm1178733599 commendation}{\revised\lang1033\revauth1\revdttm1178733598  is that the string should be in human readable format.  For example, }{
\revised\lang1033\revauth1\revdttm1178733599 a}{\revised\lang1033\revauth1\revdttm1178733598  settings string }{\revised\lang1033\revauth1\revdttm1178733599 as shown in the following example would not be recommended}{
\revised\lang1033\revauth1\revdttm1178733600 :
\par }{\f11\revised\lang1033\revauth1\revdttm1178733600 "X@34!!G$\{.%}{\f11\revised\lang1033\revauth1\revdttm1178733601 #}{\f11\revised\lang1033\revauth1\revdttm1178733600 %F*$$$GHRZ/GD##"
\par }{\revised\lang1033\revauth1\revdttm1178733602 Also, }{\revised\lang1033\revauth1\revdttm1178733591 FPI API}{\revised\lang1033\revauth1\revdttm1178733592  does not specify how the anti-virus product}{\revised\lang1033\revauth1\revdttm1178733593  }{
\revised\lang1033\revauth1\revdttm1178733608 (ODS) }{\revised\lang1033\revauth1\revdttm1178733593 will }{\revised\lang1033\revauth1\revdttm1178733602 obtain the FPI module specific settings}{\revised\lang1033\revauth1\revdttm1178733603 
 that it will pass to the modules}{\revised\lang1033\revauth1\revdttm1178733604 , and it}{\revised\lang1033\revauth1\revdttm1178733603  does not require }{\revised\lang1033\revauth1\revdttm1178733604 this function to be used}{
\revised\lang1033\revauth1\revdttm1178733611 :}{\revised\lang1033\revauth1\revdttm1178733605  FPI modules can therefore not rely on this function be}{\revised\lang1033\revauth1\revdttm1178733620 ing}{\revised\lang1033\revauth1\revdttm1178733605  called.}{
\revised\lang1033\revauth1\revdttm1178733607   }{\revised\lang1033\revauth1\revdttm1178733613 Different settings retrieval mechanisms }{\revised\lang1033\revauth1\revdttm1178733621 as implemented by different }{
\revised\lang1033\revauth1\revdttm1178733622 versions of }{\revised\lang1033\revauth1\revdttm1178733621 anti-virus products }{\revised\lang1033\revauth1\revdttm1178733613 will }{\revised\lang1033\revauth1\revdttm1178733614 possibly }{
\revised\lang1033\revauth1\revdttm1178733613 be }{\revised\lang1033\revauth1\revdttm1178733614 documented in the appendix of this document.  }{\revised\lang1033\revauth1\revdttm1178733607 Po}{\revised\lang1033\revauth1\revdttm1178733608 
ssible implementations are:
\par }\pard \fi-360\li2138\ri23\sb80\sa80\widctlpar\tx2138 {\f1\revised\lang1033\revauth1\revdttm1178733608 \'b7\tab }{\revised\lang1033\revauth1\revdttm1178733608 Settings are read from an initialization file or }{\revised\lang1033\revauth1\revdttm1178733609 
system }{\revised\lang1033\revauth1\revdttm1178733608 registry.
\par }{\f1\revised\lang1033\revauth1\revdttm1178733609 \'b7\tab }{\revised\lang1033\revauth1\revdttm1178733609 Settings are transferred from administrator's computer using some}{\revised\lang1033\revauth1\revdttm1178733610  remote}{
\revised\lang1033\revauth1\revdttm1178733609  }{\revised\lang1033\revauth1\revdttm1178733611 software }{\revised\lang1033\revauth1\revdttm1178733609 management}{\revised\lang1033\revauth1\revdttm1178733610  framework.}{
\revised\lang1033\revauth1\revdttm1178733611 
\par }{\f1\revised\lang1033\revauth1\revdttm1178733611 \'b7\tab }{\revised\lang1033\revauth1\revdttm1178733611 Settings are obtained from a user interface component }{\revised\lang1033\revauth1\revdttm1178733615 which would be able to }{
\revised\lang1033\revauth1\revdttm1178733617 convert}{\revised\lang1033\revauth1\revdttm1178733615  user input (}{\revised\lang1033\revauth1\revdttm1178733616 as }{\revised\lang1033\revauth1\revdttm1178733615 from dialog }{
\revised\lang1033\revauth1\revdttm1178733616 controls like check boxes, radio buttons etc.) }{\revised\lang1033\revauth1\revdttm1178733617 into the settings string.}{\revised\lang1033\revauth1\revdttm1178733623 
\par }{\f1\revised\lang1033\revauth1\revdttm1178733623 \'b7\tab }{\revised\lang1033\revauth1\revdttm1178733623 Combinations of the above, for example, a user interface component running on administrator's c}{\revised\lang1033\revauth1\revdttm1178733624 o}{
\revised\lang1033\revauth1\revdttm1178733623 mputer will }{\revised\lang1033\revauth1\revdttm1178733624 convert user input to settings string format that will be transferred}{\revised\lang1033\revauth1\revdttm1178733625  via remote management channel}{
\revised\lang1033\revauth1\revdttm1178733624  to end user's computer}{\revised\lang1033\revauth1\revdttm1178733625 .}{\revised\lang1033\revauth1\revdttm1178733583 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc474058604}FPI_ScanFile{\*\bkmkend _Toc419856635}{\*\bkmkend _Toc426525425}{\*\bkmkend _Toc434132677}{\*\bkmkend _Toc474058604}

\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 BOOL FPI_ScanFile (LPCSTR filename_, FPICONTAINERHANDLE parent_, WORD action_, DWORD refdata_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Scans a file for viruses, optionally disinfecting the file.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 filename_}{\lang1033 \tab Pathname of file to be scanned.  The name may be in the \ldblquote d:\\path\\filename.ext\rdblquote 
 format, or the UNC format.  On platforms supporting long filenames, the name may be (but is not guaranteed to be) a long filename.  If the file is inside a container then the 
name is relative to the parent container.  The name must be passed unchanged to the FPIFILEIOFN_OPEN function when opening the file.
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 parent_\tab }{\lang1033 Contains the handle of a parent container if the file to be scanned is not a physical file on a disk, but a file inside a \ldblquote container
\rdblquote  like a ZIP archive (for physical files, the value is FPICONTAINERHANDLE_NULL).  This handle must be passed to the FPIFILEIOFN_OPEN function when opening the file; see }{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\* MERGEFORMAT }
}{\fldrslt {\lang1033 2.1.2\tab FPI file and sector I/O functions}}}{\lang1033  (}{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\n }}{\fldrslt {\lang1033 0}}}{\lang1033 ) for more information.}{\i\lang1033 
\par action_}{\lang1033 \tab Specifies which action must be taken if the file is found to be infected, may be one of:\line \tab FPIACTION_NONE\tab : only report\line \tab FPIACTION_DISINFECT\tab : remove virus\line }{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 refdata_\tab }{\lang1033 Reference data: this value must be passed to the callback function as the }{\i\lang1033 refdata_}{\lang1033  parameter.}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success
\par FALSE\tab Scanning failed; note that the function should not return FALSE if it fails to disinfect the file, but succeeds in scanning otherwise; if the functio
n returns FALSE, it must report about the cause of the error by calling the callback with FPIEVENT_ERROR event.
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions (reported through the callback):
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIERROR_UNKNOWN\line FPIERROR_NOTINIT\line FPIERROR_NOMEM\line FPIERROR_FILEOPEN\line FPIERROR_FILEENCRYPTED\line FPIERROR_FILEREAD\line FPIERROR_FILEWRITE\line 
FPIERROR_INVALIDPARAMETER}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 The FPI module should use the FPIFILEIOFN_xxx functions provided by the ODS for opening/closing/reading/writing operations.  If the file is not inside a container (}{\i\lang1033 parent_}{\lang1033 
 is NULL), then it is also possible to use the file I/O services provided by the operating system, but it is recommended that all I/O is done through the FPIFILEIOFN_xxx functions).  
\par {\*\bkmkstart MultipleInfectionNote}
It is possible that the scanned object is infected by multiple viruses.  In that case, the FPI module should report of all such infections, and disinfect the object if possible and if so required.  The function will be called only once per scanned object 
by the ODS.{\*\bkmkend MultipleInfectionNote}
\par }\pard \li1440\ri23\sb80\sa80\widctlpar {\lang1033 The callback is not to be called if no errors occur, and if the scanned
 object is not found to be infected. For multiple infections in the same object, confirmation of multiple possible disinfection methods, etc, the callback should be called multiple times: see the description of FPICALLBACK for more information.
\par See also: }{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\* MERGEFORMAT }}{\fldrslt {\lang1033 2.1.2\tab FPI file and sector I/O functions}}}{\lang1033  (}{\field{\*\fldinst {\lang1033  REF FPIFileIOFunctions \\n }}{\fldrslt {\lang1033 0}}}{
\lang1033 ), FPICALLBACK.}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856636}{\*\bkmkstart _Toc426525426}{\*\bkmkstart _Toc434132678}{\*\bkmkstart _Toc474058605}FPI_ScanBootBlock
{\*\bkmkend _Toc419856636}{\*\bkmkend _Toc426525426}{\*\bkmkend _Toc434132678}{\*\bkmkend _Toc474058605}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 BOOL FPI_ScanBootBlock (WORD drive_, WORD blocktype_, WORD blocksize_, WORD action_, DWORD refdata_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Scans a boot block for viruses, optionally disinfecting it.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 drive_}{\lang1033 \tab Drive identifier: for MBR scans, specifies the physical drive ID (0x80 for the 1}{\lang1033\super st}{\lang1033 
 hard disk etc); for boot sector scans, specifies the logical drive ID (legal values are in the range 0...25, 0 for A: etc).  This identifier should be passed to the block read/write functions.
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 blocktype_}{\lang1033 \tab Identifies the boot block type, may be one of:\line \tab FPIBOOTBLOCK_MBR\tab : master boot record\line \tab FPIBOOTBLOCK_BOOT\tab : boot sector}{
\b\lang1033 
\par }{\i\lang1033 blocksize_\tab }{\lang1033 Specifies the size of boot block in bytes.  The FPI module must provide a buffer of appropriate length to the block read/write functions.}{\i\lang1033 
\par action_}{\lang1033 \tab Specifies which action must be taken if the boot block is found to be infected, may be one of:\line \tab FPIACTION_NONE\tab : only report\line \tab FPIACTION_DISINFECT\tab : remove virus}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 refdata_\tab }{\lang1033 Reference data: this value must be passed to the callback function as the }{\i\lang1033 refdata_}{\lang1033  parameter.}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success
\par FALSE\tab Scanning failed; if the function returns FALSE, it must report about the cause of the error by calling the callback with FPIEVENT_ERROR event.
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions (reported through the callback):
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIERROR_UNKNOWN\line FPIERROR_NOTINIT\line FPIERROR_NOMEM\line FPIERROR_SECTORREAD\line FPIERROR_SECTORWRITE\line FPIERROR_WRITEPROTECT\line FPIERROR_NOTSUPPORTED\line 
FPIERROR_INVALIDPARAMETER}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 
The boot block size is typically 512 bytes, but it may be larger, like 1024 bytes, especially for boot sectors of FAT32 partitions, and disks for NEC PC 98 series computers.  The scan function must also not assume that logical drive 0 (A:) refers to flopp
y disk, as on NEC PC 98 computers, 0 refers to the current boot drive, which is typically the hard disk.  
\par }{\field{\*\fldinst {\lang1033  REF MultipleInfectionNote \\* MERGEFORMAT }}{\fldrslt {\lang1033 It is possible that the scanned object is infected by multiple viruses.  In that case, the FPI module should
 report of all such infections, and disinfect the object if possible and if so required.  The function will be called only once per scanned object by the ODS.}}}{\lang1033 
\par If the FPI module does not support scanning boot blocks then it should report of the }{\fs16\lang1033 FPIERROR_NOTSUPPORTED }{\lang1033 error through the callback and return FALSE.
\par See also: FPICALLBACK.}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856637}{\*\bkmkstart _Toc426525427}{\*\bkmkstart _Toc434132679}{\*\bkmkstart _Toc474058606}FPI_ScanMemory
{\*\bkmkend _Toc419856637}{\*\bkmkend _Toc426525427}{\*\bkmkend _Toc434132679}{\*\bkmkend _Toc474058606}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 BOOL FPI_ScanMemory (WORD action_, DWORD refdata_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Scans computer's memory for active viruses.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 action_}{\lang1033 \tab Specifies which action must be taken if a virus is found in memory, may be one of:\line \tab FPIACTION_NONE\tab : only report\line \tab 
FPIACTION_DISINFECT\tab : remove virus}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 refdata_\tab }{\lang1033 Reference data: this value must be passed to the callback function as the }{\i\lang1033 refdata_}{\lang1033  parameter.}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success
\par FALSE\tab Scanning failed; if the function returns FALSE, it must report about the cause of the error by calling the callback with FPIEVENT_ERROR event.
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions (reported through the callback):
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIERROR_UNKNOWN\line FPIERROR_NOTINIT\line FPIERROR_NOMEM\line FPIERROR_NOTSUPPORTED\line FPIERROR_INVALIDPARAMETER}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 It is up to the FPI module, which memory areas are to be scanned for virus detection.
\par }{\field{\*\fldinst {\lang1033  REF MultipleInfectionNote \\* MERGEFORMAT }}{\fldrslt {\lang1033 
It is possible that the scanned object is infected by multiple viruses.  In that case, the FPI module should report of all such infections, and disinfect the object if possible and if so required.  The function will be called only once per scanned object 
by the ODS.}}}{\lang1033 
\par If the FPI module does not support scanning memory then it should report of the }{\fs16\lang1033 FPIERROR_NOTSUPPORTED }{\lang1033 error through the callback and return FALSE.
\par See also: FPICALLBACK.}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856638}{\*\bkmkstart _Toc426525428}{\*\bkmkstart _Toc434132680}{\*\bkmkstart _Toc474058607}FPICALLBACK}{\cs34\v\fs16\lang1033 
{\*\bkmkend _Toc419856638}{\*\bkmkend _Toc426525428}{\*\bkmkend _Toc434132680}{\*\bkmkend _Toc474058607}{\*\atnid URR}{\*\atnauthor Urmas Rahu}\chatn {\*\annotation \pard\plain \s35\li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 
{\field\flddirty{\*\fldinst PAGE \\# "'Page: '#'\line '"{\cs34\fs16   }}{\fldrslt }}{\cs34\fs16 \chatn }
\par Date: Wed, 14 Jan 1998 11:04:03 +0300
\par To: Jukka Kohonen <Jukka.Kohonen@datafellows.com>
\par From: Urmas Rahu <urmas.rahu@DataFellows.com>
\par Subject: Re: FPI API: FPICALLBACK
\par Cc: urmas@datafellows.com, kikka@datafellows.com
\par 
\par At 19:40 12.01.1998 +0200, Jukka Kohonen wrote:
\par >FPICALLBACKin dokumentaatio on IMHO hivenen sekava.
\par >Ts. siit\'e4 on hankala saada selville, mit\'e4 tarkkaan ottaen modulin odotetaan
\par >tekev\'e4n miss\'e4kin tilanteessa.
\par >
\par >Luulen kyll\'e4 ymm\'e4rt\'e4neeni oikein, ett\'e4
\par >
\par >(1) mik\'e4li infektio havaitaan, siit\'e4 ensin raportoidaan, joko
\par >INFECTION-eventill\'e4, tai QUERY-eventill\'e4 (jos action!=NONE ja
\par >moduli uskoo pystyv\'e4ns\'e4 tekem\'e4\'e4n pyydetyn actionin).
\par >Siis vain yksi callbackin kutsu joka tapauksessa (joko infection tai query,
\par >ei molempia);
\par 
\par Ei, kuten siell\'e4 sanotaan,
\par 
\par No matter whether the action is performed ot not, the FPI module should 
\par always call the callback with the FPIEVENT_INFECTION event parameter 
\par afterwards.
\par 
\par Eli FPIEVENT_INFECTION k\'e4ytet\'e4\'e4n aina FPIEVENT_QUERY:n j\'e4lkeen.
\par 
\par 
\par >(2) Sitten, mik\'e4li action!=NONE ja queryst\'e4 saatiin TRUE, tehd\'e4\'e4n se;
\par >
\par >(3) Sitten raportoidaan, onnistuiko homma, INFECTION-eventill\'e4,
\par >jonka action==NONE, jos ei onnistunut, ja esim. DISINFECTION, jos disinfektio
\par >onnistui.
\par 
\par Aina raportoidaan FPIEVENT_INFECTION eventilla; <param_> parametrissa
\par ilmoitetaan mit\'e4 sille tiedostolle/boottilohkolle tehtiin (FPIACTION_xxx).
\par 
\par 
\par >Eli jos aktiota pyydettiin ja yritet\'e4\'e4n, j\'e4rjestys on:
\par >
\par >callback(QUERY), yritys, callback(INFECTION).
\par 
\par Kyll\'e4, ja jos action on FPIACTION_NONE, niin j\'e4rjestys on:
\par 
\par callback(FPIEVENT_INFECTION)
\par 
\par 
\par >T\'e4m\'e4 oli kuitenkin sen verran mutkikkaasti sanottu dokussa, ett\'e4 vaati
\par >hiukkasen dekryptausta, ett\'e4 sen sai selville. Esim. ensi lukemalta
\par >ei ollut selv\'e4\'e4, pit\'e4\'e4k\'f6 ennen disinfektioyrityst\'e4 tehd\'e4 _kaksi_ callbackia
\par >(ensin INFECTION, jolla kerrotaan infektiosta ja sitten QUERY, jolla
\par >kysyt\'e4\'e4n tehd\'e4\'e4nk\'f6 jotain), ja sitten viel\'e4 kolmas disinfektion j\'e4lkeen.
\par 
\par Joo, ymm\'e4rr\'e4n.  Yrit\'e4n muuttaa sit\'e4 kuvausta selvemm\'e4ksi.
\par 
\par 
\par >Samaten se on hiukka ep\'e4selv\'e4\'e4, mit\'e4 modulin pit\'e4isi tehd\'e4, jos actionia
\par >yritet\'e4\'e4n, mutta se ep\'e4onnistuu. Tuleeko t\'e4ll\'f6in kutsua pelk\'e4st\'e4\'e4n
\par >callback(FPIEVENT_ERROR), vai pelk\'e4st\'e4\'e4n callback(FPIEVENT_INFECTION,
\par >FPIACTION_NONE)
\par >jolla kerrotaan ett\'e4 ei tehty mit\'e4\'e4n, vai ehk\'e4 molempia?
\par >Vai voiko modulin tekij\'e4 tehd\'e4 ihan oman maun mukkaan?
\par 
\par If the scan action passed to a scan function is FPIACTION_DISINFECT and the 
\par scanned file can not be disinfected, the scan function should query for 
\par renaming the file, and rename it if confirmation is given.  If rename 
\par confirmation is not given, it should query for deleting the file, and 
\par delete the file if confirmation is given.
\par 
\par T\'e4h\'e4\'e4nkin pit\'e4isi kai lis\'e4t\'e4 ett\'e4 FPIEVENT_INFECTION t\'e4ytyy kutsua joka
\par tapauksessa.  Jos esimerkiksi delete ep\'e4onnistuu niin ilmoitetaan 
\par FPIEVENT_ERROR:illa ja lopuksi FPIEVENT_INFECTION:illa.  Lis\'e4\'e4n t\'e4m\'e4n 
\par speksiin.
\par 
\par 
\par >Ehdotus: Jos asiat ryhmittelisi dokussa hiukan toisin, siit\'e4 voisi saada
\par >v\'e4h\'e4n selke\'e4mm\'e4n. En nyt ihan t\'e4h\'e4n h\'e4t\'e4\'e4n osaa sanoa, mik\'e4 olisi hyv\'e4
\par >ryhmittely, mutta ehk\'e4 l\'e4ht\'f6kohtana voisi olla, ett\'e4 KUN tilanne on se ja se,
\par >modulin pit\'e4isi ENSIN tehd\'e4 n\'e4in, SITTEN n\'e4in jne.
\par 
\par Joo.  Kannattaisi ehk\'e4 lis\'e4t\'e4 "API Reference" sektion lis\'e4ksi sektio
\par "FPI Module Programmer's Guide" tai jotain miss\'e4 niit\'e4 asioita 
\par selvitet\'e4\'e4n.}}{\lang1033 
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 typedef BOOL (* LPFPICALLBACK) (WORD event_, WORD param_, DWORD flags_, LPCSTR message_, DWORD refdata_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 
FPICALLBACK is the callback function provided by the ODS which needs to be called by the FPI in case an infection is found in the scanned object, in case the FPI needs confirmation about performing disinfection or other actions, and in case error occurs d
uring scanning or during any other FPI_xxx function.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 event_}{\lang1033 \tab Identifies the type of event for which the callback is called, may be one of:\line \tab FPIEVENT_INFECTION\tab : object infected\line \tab FPIE
VENT_QUERY\tab : confirmation query\line \tab FPIEVENT_ERROR\tab : error occured\line \tab FPIEVENT_QUERYABORT\tab : scan abort query}{\b\lang1033 \line }{\lang1033 \tab FPIEVENT_DBVALIDATION\tab : information about a database file}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 param_}{\lang1033 \tab 
Additional parameter whose meaning depends on the event type: if the event is FPIEVENT_ERROR, it contains an error code, otherwise, it identifies the action (action to be confirmed if the event is FPIEVENT_QUERY, or action which has been performed on the
 scanned object otherwise).  See the notes below for more information.}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 flags_\tab }{\lang1033 For FPIEVE
NT_ERROR, this parameter should be set to zero.  For FPIEVENT_INFECTION and FPIEVENT_QUERY events, contains flags, a combination of the following values:\line \tab FPIFLAG_SUSPECTED\tab : suspected (uncertain)\line \tab \tab   infection\line \tab 
FPIFLAG_HEURISTIC\tab : suspected infection\line \tab \tab   (virus-like code found)\line \tab FPIFLAG_INTEGRITY\tab : integrity check failed\line \tab FPIFLAG_MSGEXTRA\tab : extra info in }{\i\lang1033 message_\line \tab \tab }{\lang1033 
  (see the notes below)}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 message_}{\lang1033 \tab Contains an optional text message, which would be an error message in case of FPIEVENT_ERROR, a query and/or v
irus name in case of FPIEVENT_QUERY, or infection report and/or virus name in case of FPIEVENT_INFECTION.  See the notes below for more information  If the FPI module does not wish to give a text message then it may pass NULL in this parameter.
\par }{\i\lang1033 refdata_}{\lang1033 \tab Reference data: this must be the same value that was passed to the scan function as the }{\i\lang1033 refdata_}{\lang1033  parameter.}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab In case of FPIEVENT_QUERY, means that the action being confirmed is to be performed.\line In case of FPIEVENT_QUERYABORT, means that the scan should be aborted.\line 
Ignored for other events.
\par FALSE\tab \tab In case of FPIEVENT_QUERY, means that the action being confirmed is not to be performed.\line In case of FPIEVENT_QUERYABORT, means that the scan should continue.\line Ignored for other events.
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 If the scan action passed to a scan function is something else than FPIACTION_NONE, and if the specified action can be performed by the scanner, it should call th
e callback with the FPIEVENT_QUERY event parameter to confirm whether this action should actually be carried out (the ODS may prompt the user for confirmation here).  In that case, }{\i\lang1033 param_}{\lang1033 
 specifies which action is being confirmed (one of FPIACTION_xxx values).  If the callback returns nonzero then it should perform that action, otherwise not.  No matter whether the action is performed or not, the FPI module should always call the callback
 with the FPIEVENT_INFECTION event parameter afterwards.
\par }\pard \li1440\ri23\sb80\sa80\widctlpar {\lang1033 The callback is not to be called with FPIEVENT_ERROR }{\i\lang1033 event_}{\lang1033 
 if disinfection fails because of scan engine's own disability to handle the removal of virus (for example, if it is an overwriting virus, or the virus could not be accurately identified and therefore not reliably removed).  In that case, callback with FP
IEVENT_INFECTION must be called with }{\i\lang1033 param_}{\lang1033  set to FPIACTION_NONE to inform the caller that the virus was not removed.  If disinfection fails because of I/O or out-of memory error, the callback should be called 
with FPIEVENT_ERROR  and appropriate error code.}{\b\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 For FPIEVENT_QUERY and FPIEVENT_INFECTION events, the }{\i\lang1033 message_}{\lang1033  parameter will contain the virus name.  If the FPIFLAG_MSGEXTRA flag is set in the }{\i\lang1033 flags_}{
\lang1033  parameter, then }{\i\lang1033 message_}{\lang1033  is supposed to contain a formatted question or report string.  In that case, the actual virus name must be delimited by \lquote \\x01\rquote 
 (ASCII 1) characters.  For example, instead of passing only a virus name \ldblquote Cascade\rdblquote  in }{\i\lang1033 message_}{\lang1033 , the FPI module may format a report string \ldblquote Unknown variant of \\x01Cascade\\x01 (27 extra bytes)
\rdblquote : the ODS would then show the report string as presented by the scanner to the user (replacing the \lquote \\x01\rquote  characters with something nicer of course).  
\par In case of FPIEVENT_INFECTION, }{\i\lang1033 message_}{\lang1033  should }{\b\lang1033 not}{\lang1033 
 start with a string like "Infection found:" or "Infection:" or "Suspected infection:" etc., because the ODS will already prepend such a string to the message.
\par In case of FPIEVENT_QUERY, }{\i\lang1033 message_}{\lang1033  should always be in the format of a question if FPIFLAG_MSGEXTRA flag is given, eg \ldblquote Infected by \\x01Cascade.A\\x01, disinfect?\rdblquote 
.  Report strings and questions may be in other languages than English in localized versions of FPI modules.  Questions must be formulated in such a way that a \ldblquote Yes\rdblquote  answer to the question would confirm the act
ion (FPI module will get a TRUE return value), and a \ldblquote No\rdblquote  answer would reject the action (FALSE is returned).
\par If FPIFLAG_MSGEXTRA is not given, the ODS will format the report or question by itself.  The virus name in }{\i\lang1033 message_ }{\lang1033 should not be surrounded by the \lquote \\x01\rquote  characters in that case.
\par The FPIFLAG_HEURISTIC flag should be used if a heuristic scan method has found virus-like code.  The FPIFLAG_INTEGRITY flag should be used if an integrity checker has detected that the scanned object has been modified.  Note that both FPIFLAG_HEURISTIC an
d FPIFLAG_INTEGRITY already contain FPIFLAG_SUSPECTED.  As no virus name will be available with FPIFLAG_HEURISTIC and FPIFLAG_INTEGRITY, the }{\i\lang1033 message_}{\lang1033  parameter will be ignored unless FPIFLAG_MSGEXTRA is also specified.
\par For the FPIEVENT_ERROR event, }{\i\lang1033 message_}{\lang1033  may contain an error message string.  The error message string should only be passed to the callback if the error code given in }{\i\lang1033 param_ }{\lang1033 
is not enough to describe the error condition.  See }{\field{\*\fldinst {\ul\lang1033  REF GeneralErrorCodes \\* MERGEFORMAT }}{\fldrslt {\ul\lang1033 2.3.1\tab General error}{\lang1033  codes}}}{\ul\lang1033  (}{\field{\*\fldinst {\ul\lang1033 
 REF GeneralErrorCodes \\n }}{\fldrslt {\ul\lang1033 0}}}{\ul\lang1033 )}{\lang1033  for descriptions of the error codes.
\par FPIEVENT_INFECTION may be called multiple times per one scanned object, if the object is infected by multiple viruses.  Also, FPIEVENT_QUERY may be called
 multiple times for the same reason, or if there are multiple ways of disinfecting an object.  In the latter case, the FPIFLAG_MSGEXTRA method should be used to describe the different disinfection methods.  
\par If disinfection fails or is not provided by the FPI module, the ODS may delete or rename an object after it has been scanned, depending on the program\rquote s settings.
\par FPI module should not send an FPIEVENT_QUERY event to confirm the disinfection action if it is clear to the scan engine that it is not possib
le to disinfect the object.  For example, it would generally not be possible for integrity checker to disinfect files.  On the other hand, a heuristic macro virus scanner may provide disinfection of documents it suspects to be infected by removing all mac
ros from the document.  For boot block infections, overwriting a boot sector with a \ldblquote generic\rdblquote  boot image (in case a virus has destroyed the original boot sector) is also considered a disinfection action.
\par During scanning, the scan engine may send an FPIEVENT
_QUERYABORT any time, to query the calling program whether the current scan should be aborted. It is up to the calling program to decide when and why that would be done (possible causes include: user-requested abort, or a time limit exceeded). If the call
back returns TRUE, the engine should abort the scan as soon as possible. It must send an FPIEVENT_ERROR event with the FPI_ABORTED parameter, then return FALSE from the FPI_ScanXXX function. Scan engines are recommended to send FPIEVENT_QUERYABORT events 
often - for example, several times a second - during scanning.
\par See the documentation of FPI_ValidateDatabases for information about the event FPIEVENT_DBVALIDATION.
\par }\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart _Toc419856639}{\*\bkmkstart FPIFileIOFunctions}{\*\bkmkstart _Toc426525429}{\*\bkmkstart _Toc434132681}{\*\bkmkstart _Toc474058608}2.1.2\tab 
FPI file and sector I/O functions{\*\bkmkend _Toc419856639}{\*\bkmkend FPIFileIOFunctions}{\*\bkmkend _Toc426525429}{\*\bkmkend _Toc434132681}{\*\bkmkend _Toc474058608}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 The functions documented in this section are provided by the ODS; pointers to these functions are passed to the FPI module in FPI_Initialize().
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856640}{\*\bkmkstart _Toc426525430}{\*\bkmkstart _Toc434132682}{\*\bkmkstart _Toc474058609}FPIFILEIOFN_GETLASTERROR
{\*\bkmkend _Toc419856640}{\*\bkmkend _Toc426525430}{\*\bkmkend _Toc434132682}{\*\bkmkend _Toc474058609}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef WORD (* LPFPIFILEIOFN_GETLASTERROR) (void);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Returns the error code of the last failed I/O operation, or FPIFILEIO_ERROR_NONE if the last operation was successful.
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 FPIFILEIO_ERROR_NONE\tab Last operation was successful}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 other values\tab Error code, see }{\field{\*\fldinst {\ul\lang1033  REF FileIOErrorCodes \\* MERGEFORMAT }}{\fldrslt {\ul\lang1033 2.3.2\tab File and sector I/O error}{
\lang1033  codes}}}{\ul\lang1033  (}{\field{\*\fldinst {\ul\lang1033  REF FileIOErrorCodes \\n }}{\fldrslt {\ul\lang1033 0}}}{\ul\lang1033 )}{\lang1033 .}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 Multithreading note: the value returned reflects the error condition of the calling thread.}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856641}{\*\bkmkstart _Toc426525431}{\*\bkmkstart _Toc434132683}{\*\bkmkstart _Toc474058610}FPIFILEIOFN_OPEN
{\*\bkmkend _Toc419856641}{\*\bkmkend _Toc426525431}{\*\bkmkend _Toc434132683}{\*\bkmkend _Toc474058610}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }
\par 
\par    {\f5\fs24  }typedef FPIFILEHANDLE (* LPFPIFILEIOFN_OPEN) (FPICONTAINERHANDLE parent_, LPCSTR filename_, DWORD accessmode_, DWORD reservedA_, DWORD reservedB_, DWORD reservedC_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Opens a file.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 parent_}{\lang1033 \tab Contains the parent container handle, or FPICONTAINERHANDLE_NULL if there is no parent container.
\par }{\i\lang1033 filename_}{\lang1033 \tab Points to the name of file to be opened.  If }{\i\lang1033 parent_ }{\lang1033 
is FPICONTAINERHANDLE_NULL, this is the name of physical file on disk, otherwise, it is the name of a file inside a container (eg a ZIP archive).
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 accessmode_\tab }{\lang1033 Specifies the access mode for opened file, may be one of:}{\b\lang1033 \line \tab }{\lang1033 FPIFILEIO_READ\tab : open for reading\line \tab 
FPIFILEIO_WRITE\tab : open for writing\line \tab FPIFILEIO_RDWR\tab : open for reading\line \tab \tab   and writing\line 
\par }{\i\lang1033 reservedA_\tab }{\b\lang1033 
\par }{\lang1033 FPIFILEIO_OPENFLAG_DATABASE : This flag can be passed in }{\i\lang1033 reservedA_ }{\lang1033 
parameter to specify that the file is one of the scanning engine's own database files. FPIFILEIOFN_OPEN implementation can use this information to optimize file access.}{\b\lang1033 
\par }{\i\lang1033 reservedB_\tab }{\lang1033 Reserved for future use, must be zero.}{\b\lang1033 
\par }{\i\lang1033 reservedC_\tab }{\lang1033 Reserved for future use, must be zero.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 FPIFILEHANDLE_ERROR\tab Open failed
\par other values\tab Open was successful: handle of the opened file is returned.
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_OPENFAILED\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line 
FPIFILEIO_ERROR_NOTINARCHIVE\line FPIFILEIO_ERROR_BADFILE\line FPIFILEIO_ERROR_BADHANDLE\line FPIFILEIO_ERROR_ENCRYPTED}{\b\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 The file being opened must already exist (the function does not support creating files).  The file is always opened in binary mode.  See also: }{\field{\*\fldinst {\lang1033 
 REF SpecificRestrictions \\n }}{\fldrslt {\lang1033 0}}}{\lang1033 : }{\field{\*\fldinst {\lang1033  REF SpecificRestrictions \\* MERGEFORMAT }}{\fldrslt {\lang1033 Appendix B: \tab Specific restrictions}}}{\lang1033 .}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856642}{\*\bkmkstart _Toc426525432}{\*\bkmkstart _Toc434132684}{\*\bkmkstart _Toc474058611}FPIFILEIOFN_READ
{\*\bkmkend _Toc419856642}{\*\bkmkend _Toc426525432}{\*\bkmkend _Toc434132684}{\*\bkmkend _Toc474058611}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef BOOL (* LPFPIFILEIOFN_READ) (FPIFILEHANDLE handle_, LPVOID buf_, DWORD bytestoread_, LPDWORD bytesread_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Reads data from a file.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 handle_}{\lang1033 \tab Handle of an open file, obtained from a call to FPIFILEIOFN_OPEN().}{\b\lang1033 
\par }{\i\lang1033 buf_}{\lang1033 \tab Points to the buffer for storing data.
\par }{\i\lang1033 bytestoread_\tab }{\lang1033 Specifies the number of bytes to be read.
\par }{\i\lang1033 bytesread_\tab }{\lang1033 Points to the location where the number of bytes actually read will be stored by the function.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 FALSE\tab Read failed}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line FPIFILEIO_ERROR_BADFILE\line 
FPIFILEIO_ERROR_BADHANDLE\line FPIFILEIO_ERROR_BADARGUMENT}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 Reading more than FPIMAX_READLENGTH (65534) bytes is not supported.
\par If the function is not able to read as many bytes as requested (like near the end of file), it will store the actual number of bytes read in }{\i\lang1033 *bytesread_}{\lang1033  and return TRUE to i
ndicate success.  If the file pointer is at the very end of file then TRUE is returned, and }{\i\lang1033 *bytesread_}{\lang1033  will contain zero.}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856643}{\*\bkmkstart _Toc426525433}{\*\bkmkstart _Toc434132685}{\*\bkmkstart _Toc474058612}FPIFILEIOFN_WRITE
{\*\bkmkend _Toc419856643}{\*\bkmkend _Toc426525433}{\*\bkmkend _Toc434132685}{\*\bkmkend _Toc474058612}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef BOOL (* LPFPIFILEIOFN_WRITE) (FPIFILEHANDLE handle_, LPCVOID buf_, DWORD bytestowrite_, LPDWORD byteswritten_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Writes data to a file.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 handle_}{\lang1033 \tab Handle of an open file, obtained from a call to FPIFILEIOFN_OPEN().}{\b\lang1033 
\par }{\i\lang1033 buf_}{\lang1033 \tab Points to the buffer with data to be written.
\par }{\i\lang1033 bytestowrite_\tab }{\lang1033 Specifies the number of bytes to be write.
\par }{\i\lang1033 byteswritten_\tab }{\lang1033 Points to the location where the number of bytes actually written will be stored by the function.}{\b\lang1033 
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 FALSE\tab Write failed}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line FPIFILEIO_ERROR_BADFILE\line 
FPIFILEIO_ERROR_BADHANDLE\line FPIFILEIO_ERROR_BADARGUMENT\line FPIFILEIO_ERROR_READONLY}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 Writing more than FPIMAX_WRITELENGTH (65534) bytes is not supported.}{\b\lang1033  
\par }{\lang1033 If the function is not able to write as many bytes as requested (like if the disk runs out of space), it will store the actual number of bytes written in }{\i\lang1033 *byteswritten_}{\lang1033  and return TRUE to indicate success.}{
\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856644}{\*\bkmkstart _Toc426525434}{\*\bkmkstart _Toc434132686}{\*\bkmkstart _Toc474058613}FPIFILEIOFN_CLOSE
{\*\bkmkend _Toc419856644}{\*\bkmkend _Toc426525434}{\*\bkmkend _Toc434132686}{\*\bkmkend _Toc474058613}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef BOOL (* LPFPIFILEIOFN_CLOSE) (FPIFILEHANDLE handle_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Closes a file.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 handle_}{\lang1033 \tab Handle of an open file, obtained from a call to FPIFILEIOFN_OPEN().}{\b\lang1033 
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 FALSE\tab Close failed}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line FPIFILEIO_ERROR_BADFILE\line 
FPIFILEIO_ERROR_BADHANDLE}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 If the close operation fails for an object being disinfected, the FPI module should consider the disinfection unsuccessful.  Otherwise, it should ignore the failure.}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856645}{\*\bkmkstart _Toc426525435}{\*\bkmkstart _Toc434132687}{\*\bkmkstart _Toc474058614}FPIFILEIOFN_GETSIZE
{\*\bkmkend _Toc419856645}{\*\bkmkend _Toc426525435}{\*\bkmkend _Toc434132687}{\*\bkmkend _Toc474058614}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef DWORD (* LPFPIFILEIOFN_GETSIZE) (FPIFILEHANDLE handle_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Retrieves file size.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 handle_}{\lang1033 \tab Handle of an open file, obtained from a call to FPIFILEIOFN_OPEN().}{\b\lang1033 
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 FPIFILESIZE_ERROR\tab Error}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 other values\tab Success, file size in bytes is returned.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line FPIFILEIO_ERROR_BADFILE\line 
FPIFILEIO_ERROR_BADHANDLE}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856646}{\*\bkmkstart _Toc426525436}{\*\bkmkstart _Toc434132688}{\*\bkmkstart _Toc474058615}FPIFILEIOFN_GETPOS
{\*\bkmkend _Toc419856646}{\*\bkmkend _Toc426525436}{\*\bkmkend _Toc434132688}{\*\bkmkend _Toc474058615}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef DWORD (* LPFPIFILEIOFN_GETPOS) (FPIFILEHANDLE handle_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Retrieves the current position of the file read/write pointer (number of bytes from the beginning of file).
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 handle_}{\lang1033 \tab Handle of an open file, obtained from a call to FPIFILEIOFN_OPEN().}{\b\lang1033 
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 FPIFILESIZE_ERROR\tab Error}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 other values\tab Success, current position of file pointer is returned.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line FPIFILEIO_ERROR_BADFILE\line 
FPIFILEIO_ERROR_BADHANDLE}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856647}{\*\bkmkstart _Toc426525437}{\*\bkmkstart _Toc434132689}{\*\bkmkstart _Toc474058616}FPIFILEIOFN_SETPOS
{\*\bkmkend _Toc419856647}{\*\bkmkend _Toc426525437}{\*\bkmkend _Toc434132689}{\*\bkmkend _Toc474058616}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef DWORD (* LPFPIFILEIOFN_SETPOS) (FPIFILEHANDLE handle_, LONG distance_, WORD fromwhere_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Sets the position of the file pointer.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 handle_}{\lang1033 \tab Handle of an open file, obtained from a call to FPIFILEIOFN_OPEN().
\par }{\i\lang1033 distance_}{\lang1033 \tab Specifies the number of bytes to move the file pointer (may be negative).
\par }{\i\lang1033 fromwhere_}{\lang1033 \tab Specifies the reference point relative to which the actual position is calculated, may be one of:\line \tab FPIFILEIO_BEGIN\tab : beginning of file\line \tab FPIFILEIO_CURRENT\tab : current position\line \tab 
FPIFILEIO_END\tab : end of file}{\b\lang1033 
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 FPIFILESIZE_ERROR\tab Error}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 other values\tab Success, new position of file pointer (number of bytes from the beginning of file) is returned.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line FPIFILEIO_ERROR_BADFILE\line 
FPIFILEIO_ERROR_BADHANDLE\line FPIFILEIO_ERROR_BADARGUMENT\line FPIFILEIO_ERROR_READONLY}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856648}{\*\bkmkstart _Toc426525438}{\*\bkmkstart _Toc434132690}{\*\bkmkstart _Toc474058617}FPIFILEIOFN_SETEND
{\*\bkmkend _Toc419856648}{\*\bkmkend _Toc426525438}{\*\bkmkend _Toc434132690}{\*\bkmkend _Toc474058617}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef BOOL (* LPFPIFILEIOFN_SETEND) (FPIFILEHANDLE handle_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Truncates the file beyond the current file pointer position.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 handle_}{\lang1033 \tab Handle of an open file, obtained from a call to FPIFILEIOFN_OPEN().}{\b\lang1033 
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 FALSE\tab Truncation failed}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line FPIFILEIO_ERROR_BADFILE\line 
FPIFILEIO_ERROR_BADHANDLE\line FPIFILEIO_ERROR_BADARGUMENT\line FPIFILEIO_ERROR_READONLY}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856649}{\*\bkmkstart _Toc426525439}{\*\bkmkstart _Toc434132691}{\*\bkmkstart _Toc474058618}FPIFILEIOFN_GETATTR
{\*\bkmkend _Toc419856649}{\*\bkmkend _Toc426525439}{\*\bkmkend _Toc434132691}{\*\bkmkend _Toc474058618}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef DWORD (* LPFPIFILEIOFN_GETATTR) (FPIFILEHANDLE handle_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Retrieves the file attributes.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 handle_}{\lang1033 \tab Handle of an open file, obtained from a call to FPIFILEIOFN_OPEN().}{\b\lang1033 
\par }\pard \li839\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 FPIFILEATTR_ERROR\tab Error}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 other values\tab Success, file attributes (which is a combination of FPIFILEIO_FILEATTR_xxx flags) returned}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_BADARCHIVE\line FPIFILEIO_ERROR_BADFILE\line 
FPIFILEIO_ERROR_BADHANDLE}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 
File attributes support is operating system specific: not all FPIFILEIO_FILEATTR_xxx values need to be valid on a given platform.  In Win16 platform, only the low byte of the attributes value will be valid.}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856650}{\*\bkmkstart _Toc426525440}{\*\bkmkstart _Toc434132692}{\*\bkmkstart _Toc474058619}FPIFILEIOFN_RWBOOTBLOCK
{\*\bkmkend _Toc419856650}{\*\bkmkend _Toc426525440}{\*\bkmkend _Toc434132692}{\*\bkmkend _Toc474058619}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef BOOL (* LPFPIFILEIOFN_RWBOOTBLOCK) (WORD drive_, WORD blocktype_, BOOL write_, LPVOID buf_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Reads or writes the boot block for a given drive.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 drive_}{\lang1033 \tab Drive identifier: for MBR scans, specifies the physical drive ID (0x80 for the 1}{\lang1033\super st}{\lang1033 
 hard disk etc); for boot sector scans, specifies the logical drive ID (0 for A: etc).  This identifier must be the same that was passed to the scan function as the }{\i\lang1033 drive_ }{\lang1033 parameter.
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 blocktype_}{\lang1033 \tab Identifies the boot block type, may be one of:\line \tab FPIBOOTBLOCK_MBR\tab : master boot record\line \tab FPIBOOTBLOCK_BOOT\tab : boot sector
\line \line This identifier must be the same that was passed to the scan function as the }{\i\lang1033 blocktype_ }{\lang1033 parameter.}{\b\lang1033 
\par }{\i\lang1033 write_}{\lang1033 \tab If this value is nonzero, the boot block will be written to disk, otherwise, it will be read from the disk.}{\b\lang1033 
\par }{\i\lang1033 buf_}{\lang1033 \tab Points to the buffer for the boot block image.  The length of the buffer must match the boot block size, as passed in the }{\i\lang1033 blocksize_ }{\lang1033 parameter to the scan function.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 FALSE\tab Operation failed}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_DISKWRITEPROT}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856651}{\*\bkmkstart _Toc426525441}{\*\bkmkstart _Toc434132693}{\*\bkmkstart _Toc474058620}FPIFILEIOFN_RWSECTORPHYS
{\*\bkmkend _Toc419856651}{\*\bkmkend _Toc426525441}{\*\bkmkend _Toc434132693}{\*\bkmkend _Toc474058620}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef BOOL (* LPFPIFILEIOFN_RWSECTORPHYS) (WORD physdrive_, WORD head_, WORD cylinder_, WORD physsector_, BOOL write_, LPVOID buf_, WORD size_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Reads or writes a specified physical disk sector.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 physdrive_}{\lang1033 \tab Specifies the physical drive ID (0x80 for the 1}{\lang1033\super st}{\lang1033  hard disk etc).
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 head_\tab }{\lang1033 Specifies the head number.
\par }{\i\lang1033 cylinder_\tab }{\lang1033 Specifies the cylinder number.
\par }{\i\lang1033 physsector_}{\lang1033 \tab Specifies the physical sector number.}{\i\lang1033 
\par write_}{\lang1033 \tab If this value is nonzero, the sector will be written to disk, otherwise, it will be read from the disk.}{\b\lang1033 
\par }{\i\lang1033 buf_}{\lang1033 \tab Points to the buffer for the sector image.  The length of the buffer must match the sector size for the given drive.
\par }{\i\lang1033 size_\tab }{\lang1033 Specifies the length of }{\i\lang1033 buf_}{\lang1033 ; must equal to the sector size for the given drive.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 FALSE\tab Operation failed}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_DISKWRITEPROT}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes:
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 
It is up to the FPI module to see to it that the parameters passed to this function are valid.  The function is not guaranteed to do any parameters validity checking before passing the call to a low-level disk I/O routine.}{\b\lang1033  
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856652}{\*\bkmkstart _Toc426525442}{\*\bkmkstart _Toc434132694}{\*\bkmkstart _Toc474058621}FPIFILEIOFN_RWSECTORLOGC
{\*\bkmkend _Toc419856652}{\*\bkmkend _Toc426525442}{\*\bkmkend _Toc434132694}{\*\bkmkend _Toc474058621}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef BOOL (* LPFPIFILEIOFN_RWSECTORLOGC) (WORD drive_, DWORD sector_, BOOL write_, LPVOID buf_, WORD size_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Reads or writes a specified logical disk sector.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 drive_}{\lang1033 \tab Specifies the logical drive ID (0 for A: etc).
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 sector_\tab }{\lang1033 Specifies the logical sector number.}{\i\lang1033 
\par write_}{\lang1033 \tab If this value is nonzero, the sector will be written to disk, otherwise, it will be read from the disk.}{\b\lang1033 
\par }{\i\lang1033 buf_}{\lang1033 \tab Points to the buffer for the sector image.  The length of the buffer must match the sector size for the given drive.}{\b\lang1033 
\par }{\i\lang1033 size_\tab }{\lang1033 Specifies the lenth of }{\i\lang1033 buf_}{\lang1033 ; must equal to the sector size for the given drive.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 FALSE\tab Operation failed}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR\line FPIFILEIO_ERROR_DISKWRITEPROT}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 
It is up to the FPI module to see to it that the parameters passed to this function are valid.  The function is not guaranteed to do any parameters validity checking before passing the call to a low-level disk I/O routine.}{\b\lang1033  
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc434132695}{\*\bkmkstart _Toc474058622}FPIFILEIOFN_GETDRIVEGEOMETRY{\*\bkmkend _Toc434132695}{\*\bkmkend _Toc474058622}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef BOOL (* LPFPIFILEIOFN_GETDRIVEGEOMETRY) (WORD drive_, struct FPI_DISK_GEOMETRY_struct* geom_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Obtains information about a disk drive\rquote s geometry: type, number of cylinders, tracks per cylinder, sectors per 
track, and bytes per sector. The information is returned in a structure that is modeled after the Win32 DISK_GEOMETRY structure.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 drive_}{\lang1033 \tab Specifies the drive ID (0 for A: etc).
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 geom_\tab }{\lang1033 The structure that the function fills with the information.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 TRUE\tab Success}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 FALSE\tab Operation failed}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\line FPIFILEIO_ERROR_NOMEM\line FPIFILEIO_ERROR_IOERROR}{\b\lang1033 
\par }\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart _Toc419856653}{\*\bkmkstart _Toc426525443}{\*\bkmkstart _Toc434132696}{\*\bkmkstart _Toc474058623}2.1.3\tab Virus descriptions information functions
{\*\bkmkend _Toc419856653}{\*\bkmkend _Toc426525443}{\*\bkmkend _Toc434132696}{\*\bkmkend _Toc474058623}
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856654}{\*\bkmkstart _Toc426525444}{\*\bkmkstart _Toc434132697}{\*\bkmkstart _Toc474058624}FPIVI_GetInterfaceType
{\*\bkmkend _Toc419856654}{\*\bkmkend _Toc426525444}{\*\bkmkend _Toc434132697}{\*\bkmkend _Toc474058624}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }WORD FPIVI_GetInterfaceType (void);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Returns the type of virus information interface provided by the FPI module.
\par }{\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 FPIVI_NONE\tab The FPI module does not support virus descriptions.
\par FPIVI_INTERNAL\tab The FPI module maintains its virus info database and supports returning virus information through the FPIVI_InternalXXX() functions; virus information will be shown to the user by the ODS.
\par FPIVI_EXTERNAL\tab The FPI module will provide its own interface to the virus descriptions (eg through WinHelp, or Web pages); the information will be shown by FPIVI_ExternalShowDescription().}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856655}{\*\bkmkstart _Toc426525445}{\*\bkmkstart _Toc434132698}{\*\bkmkstart _Toc474058625}FPIVI_InternalGetIndexCount
{\*\bkmkend _Toc419856655}{\*\bkmkend _Toc426525445}{\*\bkmkend _Toc434132698}{\*\bkmkend _Toc474058625}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }UINT FPIVI_InternalGetIndexCount (void);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Returns the number of virus names associated with virus descriptions.
\par }{\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 0\tab The FPI module does not support internal virus descriptions.}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 other\tab The number of virus names associated with virus descriptions.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 
Note that the number of actual description records is typically considerably smaller than the number of virus names, since many viruses have several names (aliases), and multiple variants of t
he same virus could be described in the same virus description record.  For example, descriptions for viruses with names \ldblquote Vienna\rdblquote , \ldblquote Unesco\rdblquote  (alias for Vienna), \ldblquote DOS-62\rdblquote  (alias for Vienna), 
\ldblquote Lisbon\rdblquote  (variant of Vienna) etc could all be in the same description record.
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856656}{\*\bkmkstart _Toc426525446}{\*\bkmkstart _Toc434132699}{\*\bkmkstart _Toc474058626}FPIVI_InternalGetName
{\*\bkmkend _Toc419856656}{\*\bkmkend _Toc426525446}{\*\bkmkend _Toc434132699}{\*\bkmkend _Toc474058626}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }UINT FPIVI_InternalGetName (UINT index_, LPSTR name_, UINT namelen_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Retrieves the virus name for a given virus name index.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 index_}{\lang1033 \tab 0-based index of the virus name, must be less than the value returned by FPIVI_InternalGetIndexCount().}{\b\lang1033 
\par }{\i\lang1033 name_\tab }{\lang1033 Points to the location where the virus name (alias/variant name) is to be copied.}{\i\lang1033 
\par namelen_}{\lang1033 \tab Specifies the length of the }{\i\lang1033 name_}{\lang1033  buffer, including space for the null terminator.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 0\tab Invalid index value.}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 other\tab Length of the virus name, including space for the null terminator.  May be larger than }{\i\lang1033 namelen_}{\lang1033 
 if the virus name length is larger than that.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 If the virus name is longer than allowed by }{\i\lang1033 namelen_}{\lang1033 , the name should be copied truncated; terminating null must always be copied.
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856657}{\*\bkmkstart _Toc426525447}{\*\bkmkstart _Toc434132700}{\*\bkmkstart _Toc474058627}FPIVI_InternalGetDescription
{\*\bkmkend _Toc419856657}{\*\bkmkend _Toc426525447}{\*\bkmkend _Toc434132700}{\*\bkmkend _Toc474058627}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }HGLOBAL FPIVI_IntrnGetDescription (UINT index_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Retrieves the virus description text for a given virus name index.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 index_}{\lang1033 \tab 0-based index of the virus name, must be less than the value returned by FPIVI_InternalGetIndexCount().}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 NULL\tab Invalid index value, or description not available.}{\b\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 other\tab 
Handle of a global memory object (as allocated by GlobalAlloc(), unlocked), containing the virus description text.  The handle will be freed by the caller.  A virus description may not be longer than FPIMAX_VIRUSDESCRIPTION bytes.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 
The virus description text is a null-terminated buffer containing a virus description.  CR/LF pairs should be used for terminating paragraphs of text; the caller will wrap the text for the display, so the length of a single line is not limited.
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856658}{\*\bkmkstart _Toc426525448}{\*\bkmkstart _Toc434132701}{\*\bkmkstart _Toc474058628}FPIVI_ExternalShowDescription
{\*\bkmkend _Toc419856658}{\*\bkmkend _Toc426525448}{\*\bkmkend _Toc434132701}{\*\bkmkend _Toc474058628}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\f5\fs20 
\par  }void FPIVI_ExternalShowDescription (HWND hwnd_, LPCSTR name_);
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Displays virus information for a given virus name.
\par }{\b\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 hwnd_\tab }{\lang1033 Handle of window requesting the information.  If virus information is provided through WinHelp, this handle should be passed to the WinHelp() function.

\par }{\i\lang1033 name_\tab }{\lang1033 Specifies the virus name for which information is requested.}{\i\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\lang1033 None}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 The virus name passed to this function is the same as provided by the FPI module\rquote s scanning functions.
\par If the FPI module is not able to show the virus description, eg because the required application (WinHelp, Web browser) is not available, it must show its own error message, describing the cause of the error.
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc419856659}{\*\bkmkstart _Toc426525449}{\*\bkmkstart _Toc434132702}{\*\bkmkstart _Toc474058629}2.2\tab Structures reference{\*\bkmkend _Toc419856659}
{\*\bkmkend _Toc426525449}{\*\bkmkend _Toc434132702}{\*\bkmkend _Toc474058629}
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856660}{\*\bkmkstart _Toc426525450}{\*\bkmkstart _Toc434132703}{\*\bkmkstart _Toc474058630}FPIMODULEINFO
{\*\bkmkend _Toc419856660}{\*\bkmkend _Toc426525450}{\*\bkmkend _Toc434132703}{\*\bkmkend _Toc474058630}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar\tx2700\tx6390 \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef struct FPIMODULEINFO_struct\line \{\line WORD\tab fStructSize;\tab // size of the structure\line WORD\tab fModuleID;\tab // module ID\line CHAR\tab fModuleName [FPIMAX_MODULENAME];\tab // module name\line CHAR\tab 
fVendorName [FPIMAX_VENDORNAME];\tab // vendor name\line WORD\tab fVerMajor;\tab // major version number\line WORD\tab fVerMinor;\tab // minor version number\line WORD\tab fVerBuild;\tab // build number\line WORD\tab fDatabaseYear;\tab 
// signatures database year\line BYTE\tab fDatabaseMonth;\tab // database month (Jan=1 etc)\line BYTE\tab fDatabaseDay;\tab // database day of the month\line \}\line FPIMODULEINFO, * LPFPIMODULEINFO;
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 This structure is filled by the FPI module upon initialization.
\par }{\b\lang1033 Fields:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\i\lang1033 fStructSize}{\lang1033 \tab Size of the structure in bytes.  This field must be filled by the caller before calling FPI_GetModuleInformation().
\par }{\i\lang1033 fModuleID\tab }{\lang1033 FPI module identifier (assigned by DF).
\par }{\i\lang1033 fModuleName\tab }{\lang1033 Null-terminated FPI module name string, eg \ldblquote Scan-O-Matic\rdblquote .}{\i\lang1033 
\par fVendorName\tab }{\lang1033 Null-terminated vendor name, may contain copyright information, eg \ldblquote \'a9 Copyright 1997-98, Bill\rquote s Software Hut\rdblquote .}{\i\lang1033 
\par fVerMajor\tab }{\lang1033 Major version number of FPI module.}{\i\lang1033 
\par fVerMinor\tab }{\lang1033 Minor version number of FPI module.  Specify 1 for version x.01, and 10 for version x.10, etc.}{\i\lang1033 
\par fVerBuild\tab }{\lang1033 Build number of FPI module.}{\i\lang1033 
\par fDatabaseYear\tab }{\lang1033 Virus signatures database year (full years A.D.).}{\i\lang1033 
\par fDatabaseMonth\tab }{\lang1033 Virus signatures database month (Jan=1 etc).}{\i\lang1033 
\par fDatabaseDay\tab }{\lang1033 Virus signatures database day of the month.}{\i\lang1033 
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\b\lang1033 Notes:}{\lang1033 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar {\lang1033 If the FPI module uses multiple virus signatures databases then the }{\i\lang1033 fDatabaseXXX}{\lang1033 
 fields should contain the timestamp of the latest (youngest) database file.  FPI modules which do not employ virus signature databases should set }{\i\lang1033 fDatabaseYear}{\lang1033  to zero. 
\par When displaying the module information to the user, ODS will display the version number in the format \ldblquote %d.%02d.%d\rdblquote  (major, minor, build), or alternatively, \ldblquote %d.%02d build %d\rdblquote .
\par See also: FPI_GetModuleInformation().}{\b\lang1033 
\par }\pard\plain \s39\li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 \b\f5\fs20\lang2057 {\lang1033 {\*\bkmkstart _Toc419856661}{\*\bkmkstart _Toc426525451}{\*\bkmkstart _Toc434132704}{\*\bkmkstart _Toc474058631}FPIFILEIOFNTABLE
{\*\bkmkend _Toc419856661}{\*\bkmkend _Toc426525451}{\*\bkmkend _Toc434132704}{\*\bkmkend _Toc474058631}
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar\tx4590\tx6390 \f3\fs18\lang1024 {\f5\fs20 
\par  }typedef struct FPIFILEIOFNTABLE_struct\line \{\line DWORD\tab fFunctionCount;\tab // function pointers counter\line LPFPIFILEIOFN_GETLASTERROR\tab fFnGetLastError; \line LPFPIFILEIOFN_OPEN\tab fFnOpen; \line LPFPIFILEIOFN_READ\tab fFnRead; \line 
LPFPIFILEIOFN_WRITE\tab fFnWrite; \line LPFPIFILEIOFN_CLOSE\tab fFnClose; \line LPFPIFILEIOFN_GETSIZE\tab fFnGetSize; \line LPFPIFILEIOFN_GETPOS\tab fFnGetPos; \line LPFPIFILEIOFN_SETPOS\tab fFnSetPos; \line LPFPIFILEIOFN_SETEND\tab fFnSetEnd; \line 
LPFPIFILEIOFN_GETATTR\tab fFnGetAttr; \line LPFPIFILEIOFN_RWBOOTBLOCK\tab fFnRWBootBlock; \line LPFPIFILEIOFN_RWSECTORPHYS\tab fFnRWSectorPhys; \line LPFPIFILEIOFN_RWSECTORLOGC\tab fFnRWSectorLogc; LPFPIFILEIOFN_GETDRIVEGEOMETRY  fFnGetDriveGeometry;
\line \}\line FPIFILEIOFNTABLE, * LPFPIFILEIOFNTABLE, * const LPCFPIFILEIOFNTABLE; 
\par \pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 This structure holds the pointers to file and disk I/O functions provided by the ODS.  
\par }{\b\lang1033 Fields:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\lang1033 fFunctionCount}{\lang1033 \tab Contains the counter of function pointers in this structure.}{\b\lang1033 
\par }{\lang1033 other\tab See }{\field{\*\fldinst {\ul\lang1033  REF FPIFileIOFunctions \\* MERGEFORMAT }}{\fldrslt {\ul\lang1033 2.1.2\tab FPI file and sector I/O}{\lang1033  functions}}}{\ul\lang1033  (}{\field{\*\fldinst {\ul\lang1033  REF FPIFileIOFunct
ions \\n }}{\fldrslt {\ul\lang1033 0}}}{\ul\lang1033 )}{\lang1033  for descriptions of the I/O functions.}{\b\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\lang1033 Notes: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\lang1033 See also: FPI_Initialize(). 
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart ErrorCodesReference}{\*\bkmkstart _Toc419856662}{\*\bkmkstart _Toc426525452}{\*\bkmkstart _Toc434132705}{\*\bkmkstart _Toc474058632}2.3\tab 
Error codes reference{\*\bkmkend ErrorCodesReference}{\*\bkmkend _Toc419856662}{\*\bkmkend _Toc426525452}{\*\bkmkend _Toc434132705}{\*\bkmkend _Toc474058632}
\par }\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart GeneralErrorCodes}{\*\bkmkstart _Toc419856663}{\*\bkmkstart _Toc426525453}{\*\bkmkstart _Toc434132706}{\*\bkmkstart _Toc474058633}2.3.1\tab 
General error codes{\*\bkmkend GeneralErrorCodes}{\*\bkmkend _Toc419856663}{\*\bkmkend _Toc426525453}{\*\bkmkend _Toc434132706}{\*\bkmkend _Toc474058633}
\par }\trowd \trgaph108\trleft720\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx3870\clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx9708 \pard\plain \ri23\sb80\sa80\widctlpar\intbl \f5\fs20\lang2057 {\b\lang1033 Symbolic name\cell Description\cell }\pard 
\widctlpar\intbl {\b\lang1033 \row }\trowd \trgaph108\trleft720\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx3870\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx9708 \pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_SUCCESS\cell No error.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard 
\ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_UNKNOWN\cell Unknown error: the particular error condition could not be described by any other error code.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {
\fs16\lang1033 FPIERROR_INIT_MULTIPLE\cell FPI module has already been initialized.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\trowd \trgaph108\trleft720\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 
\trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx3870\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx9708 
\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_NOTINIT\cell FPI module has not been initialized; the function can only be called for an initialized FPI module.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard 
\ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_NOMEM\cell Not enough memory to complete the operation.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_NOPGMFILE\cell 
A required program file (DLL/EXE) was not found or could not be executed.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_NODBFILE\cell 
A required virus signature or checksum database file was not found or could not be opened.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_BADDBFILE\cell 
A virus signature or checksum database file is corrupted.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_FILEOPEN\cell A file to be scanned could not be opened.\cell }\pard 
\widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_FILEENCRYPTED\cell A file could not be scanned because it is encrypted or password protected.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard 
\ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_FILEREAD\cell Error reading from file.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_FILEWRITE\cell Error writing to file.\cell 
}\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_SECTORREAD\cell Disk sector read failed.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 
FPIERROR_SECTORWRITE\cell Disk sector write failed.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_WRITEPROTECT\cell Disk sector write failed because the disk is write protected.\cell 
}\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_NOTSUPPORTED\cell Functionality to be provided by a given API function is not supported by the FPI module.\cell }\pard \widctlpar\intbl {
\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_INVALIDPARAMETER\cell Invalid parameter (not conforming to the API specification) was passed to a function.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard 
\ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_WRONGAPI\cell The module does not support the FPI API version that the ODS requested\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\trowd \trgaph108\trleft720\trbrdrt\brdrs\brdrw30 \trbrdrl
\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw15 \cellx3870\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 
\clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw30 \cellx9708 \pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIERROR_ABORTED\cell The scan was aborted due to FPIEVENT_QUERYABORT returning nonzero\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row 
}\pard\plain \s3\ri29\sb240\sa80\keep\keepn\widctlpar \b\f5\lang2057 {\fs20\lang1033 {\*\bkmkstart FileIOErrorCodes}{\*\bkmkstart _Toc419856664}{\*\bkmkstart _Toc426525454}{\*\bkmkstart _Toc434132707}{\*\bkmkstart _Toc474058634}2.3.2\tab 
File and sector I/O error codes{\*\bkmkend FileIOErrorCodes}{\*\bkmkend _Toc419856664}{\*\bkmkend _Toc426525454}{\*\bkmkend _Toc434132707}{\*\bkmkend _Toc474058634}
\par }\trowd \trgaph108\trleft720\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx3870\clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx9708 \pard\plain \ri23\sb80\sa80\widctlpar\intbl \f5\fs20\lang2057 {\b\lang1033 Symbolic name\cell Description\cell }\pard 
\widctlpar\intbl {\b\lang1033 \row }\trowd \trgaph108\trleft720\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx3870\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx9708 \pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_NONE\cell No error.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard 
\ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_UNKNOWN\cell Unknown error: the particular error condition could not be described by any other error code.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard 
\ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_NOMEM\cell Not enough memory to complete the operation.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\trowd \trgaph108\trleft720\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb
\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx3870\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 
\clbrdrr\brdrs\brdrw30 \cellx9708 \pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_OPENFAILED\cell Error opening file.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 
FPIFILEIO_ERROR_IOERROR\cell Read/write or other I/O error.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_BADARCHIVE\cell Container is corrupted.\cell }\pard \widctlpar\intbl {
\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_NOTINARCHIVE\cell No such file in container.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 
FPIFILEIO_ERROR_BADFILE\cell File is corrupted.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_BADHANDLE\cell Invalid container or file handle.\cell }\pard \widctlpar\intbl {
\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_BADARGUMENT\cell Invalid file pointer or other argument.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 
FPIFILEIO_ERROR_ENCRYPTED\cell File is encrypted.\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_READONLY\cell Write operations not allowed on this file.\cell }\pard 
\widctlpar\intbl {\fs16\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 FPIFILEIO_ERROR_DISKWRITEPROT\cell Write failed because the disk is write-protected\cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\trowd \trgaph108\trleft720
\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw15 \cellx3870\clbrdrt
\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw30 \cellx9708 \pard \ri23\sb80\sa80\widctlpar\intbl {\fs16\lang1033 \cell \cell }\pard \widctlpar\intbl {\fs16\lang1033 \row }\pard \li839\ri23\sb80\sa80\widctlpar {
\lang1033 
\par }\pard\plain \s1\ri29\sb720\sa120\keep\keepn\pagebb\widctlpar \b\f5\fs36\lang2057 {\lang1033 {\*\bkmkstart _Toc419856665}{\*\bkmkstart _Toc426525455}{\*\bkmkstart _Toc434132708}{\*\bkmkstart _Toc474058635}3.\tab FPI module programmer\rquote s guide
{\*\bkmkend _Toc419856665}{\*\bkmkend _Toc426525455}{\*\bkmkend _Toc434132708}{\*\bkmkend _Toc474058635}
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc419856666}{\*\bkmkstart _Toc426525456}{\*\bkmkstart _Toc434132709}{\*\bkmkstart _Toc474058636}3.1\tab Introduction{\*\bkmkend _Toc419856666}
{\*\bkmkend _Toc426525456}{\*\bkmkend _Toc434132709}{\*\bkmkend _Toc474058636}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 The programmer\rquote s guide will aid the developers of FPI modules by providing guidelines for FPI modules implementation.  A sample FPI module providing detection and \ldblquote 
disinfection\rdblquote  of the EICAR test file is presented.  The Countersign SDK will provide full source code for the sample FPI module.
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc419856667}{\*\bkmkstart _Toc426525457}{\*\bkmkstart _Toc434132710}{\*\bkmkstart _Toc474058637}3.2\tab General algorithm for FPI_ScanFile()
{\*\bkmkend _Toc419856667}{\*\bkmkend _Toc426525457}{\*\bkmkend _Toc434132710}{\*\bkmkend _Toc474058637}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 FPI_ScanFile() should work by following the basic steps presented below:
\par }\pard \fi-708\li708\ri23\sb80\sa80\widctlpar {\lang1033 1\tab Open the file to be scanned (in read-only mode).  If open fails, report error via FPICALLBACK (FPIEVENT_ERROR) and return.
\par 2\tab Scan the file.  If no infection or suspected infection found, go to step 5.
\par 3\tab For each infection or suspected infection found, repeat:
\par }\pard \fi-708\li1416\ri23\sb80\sa80\widctlpar {\lang1033 3.1\tab If disinfection action required and disinfection can be possible, query FPICALLBACK (FPIEVENT_QUERY) for confirmation.  If confirmation granted:
\par }\pard \fi-708\li2124\ri23\sb80\sa80\widctlpar {\lang1033 3.1.1\tab Reopen file in read-write mode.  If open fails, report error via FPICALLBACK (FPIEVENT_ERROR) and go to step 3.2.
\par 3.1.2\tab Disinfect file. 
\par }\pard \fi-708\li1416\ri23\sb80\sa80\widctlpar {\lang1033 3.2\tab Call FPICALLBACK (FPIEVENT_INFECTION) to report of the infection.
\par }\pard \fi-708\li708\ri23\sb80\sa80\widctlpar {\lang1033 4\tab 
If the file has been disinfected, go to step 2 to make sure that no other virus is present in the same file.  For multiple infections by the same virus, the module may rescan/disinfect repeatedly in step 3.1.2 as well.
\par 5\tab Close file and return.
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc419856668}{\*\bkmkstart _Toc426525458}{\*\bkmkstart _Toc434132711}{\*\bkmkstart _Toc474058638}3.3\tab Compiler support{\*\bkmkend _Toc419856668}
{\*\bkmkend _Toc426525458}{\*\bkmkend _Toc434132711}{\*\bkmkend _Toc474058638}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 F-Secure has tested building of the FPI modules with the following compilers:
\par 
\par }\trowd \trgaph108\trleft1260\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx3240\clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx5310 \pard \ri23\sb80\sa80\widctlpar\intbl {\b\lang1033 Compiler\cell Target platform(s)\cell }\pard \widctlpar\intbl {\b\lang1033 
\row }\trowd \trgaph108\trleft1260\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx3240\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx5310 \pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Borland C++ 4.5x\cell Win16, Win32\cell }\pard \widctlpar\intbl {\lang1033 
\row }\pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Visual C++ 1.5x\cell Win16\cell }\pard \widctlpar\intbl {\lang1033 \row }\trowd \trgaph108\trleft1260\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 
\trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw15 \cellx3240\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw30 \cellx5310 
\pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Visual C++ 4.x\cell Win32\cell }\pard \widctlpar\intbl {\lang1033 \row }\pard \li839\ri23\sb80\sa80\widctlpar {\lang1033 
\par It is possible to build FPI modules with other compilers, but it may be necessary to modify FPIAPI.H for doing that.
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc419856669}{\*\bkmkstart _Toc426525459}{\*\bkmkstart _Toc434132712}{\*\bkmkstart _Toc474058639}3.4\tab Platform-specific information
{\*\bkmkend _Toc419856669}{\*\bkmkend _Toc426525459}{\*\bkmkend _Toc434132712}{\*\bkmkend _Toc474058639}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 FPI API functions exported by an FPI module must satisfy the following calling convention and name decoration requirements:
\par 
\par }\trowd \trgaph108\trleft1260\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx2340\clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx4410\clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx6897\clbrdrt\brdrs\brdrw30 
\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx9000 \pard \ri23\sb80\sa80\widctlpar\intbl {\b\lang1033 Platform\cell Calling convention\cell Name decoration\cell Name example\cell }\pard \widctlpar\intbl {\b\lang1033 \row 
}\trowd \trgaph108\trleft1260\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx2340\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx4410\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx6897\clbrdrt\brdrs\brdrw15 
\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx9000 \pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Win16\cell Pascal\cell None/uppercase\cell FPI_INITIALIZE\cell }\pard \widctlpar\intbl {\lang1033 \row }\trowd 
\trgaph108\trleft1260\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw15 
\cellx2340\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw15 \cellx4410\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw15 \cellx6897\clbrdrt\brdrs\brdrw15 \clbrdrl
\brdrs\brdrw15 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw30 \cellx9000 \pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Win32\cell C\cell None/case preserved\cell FPI_Initialize\cell }\pard \widctlpar\intbl {\lang1033 \row }\pard 
\li839\ri23\sb80\sa80\widctlpar {\lang1033 
\par On 16-bit platforms (Win16), following the usual convention, the pointer parameters to FPI functions are to be understood as }{\i\lang1033 far}{\lang1033  pointers}{\i\lang1033 ,}{\lang1033  not }{\i\lang1033 huge }{\lang1033 
pointers. This means it is illegal for the FPI module to request a read of 0x2000 bytes into a buffer at address 1234:F000, because that would cause an offset wraparound.
\par 
\par }\pard\plain \s2\ri23\sb240\sa80\keep\keepn\widctlpar \b\f5\fs28\lang2057 {\lang1033 {\*\bkmkstart _Toc419856670}{\*\bkmkstart _Toc426525460}{\*\bkmkstart _Toc434132713}{\*\bkmkstart _Toc474058640}3.5\tab Eicar-test example{\*\bkmkend _Toc419856670}
{\*\bkmkend _Toc426525460}{\*\bkmkend _Toc434132713}{\*\bkmkend _Toc474058640}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Complete sources and makefiles for building a sample FPI module are located in directory }{\b\f11\lang1033 Embedded Technology Partners\\FPI\\examples}{\lang1033 
 of the CounterSign SDK.  Use the following project/makefiles, depending on your compiler and the target platform:
\par 
\par }\trowd \trgaph108\trleft1260\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx3240\clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx5310\clbrdrt\brdrs\brdrw30 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx8550 \pard 
\ri23\sb80\sa80\widctlpar\intbl {\b\lang1033 Compiler\cell Target platform(s)\cell Project or makefile\cell }\pard \widctlpar\intbl {\b\lang1033 \row }\trowd \trgaph108\trleft1260\trbrdrt\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 
\trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx3240\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \cellx5310\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw30 \cellx8550 \pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Borland C++ 4.5x\cell Win16, Win32\cell }{\f11\lang1033 borlandc\\eicar.ide
\cell }\pard \widctlpar\intbl {\lang1033 \row }\pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Visual C++ 1.5x\cell Win16\cell }{\f11\lang1033 visualc\\eicar16.mak\cell }\pard \widctlpar\intbl {\lang1033 \row }\trowd \trgaph108\trleft1260\trbrdrt
\brdrs\brdrw30 \trbrdrl\brdrs\brdrw30 \trbrdrb\brdrs\brdrw30 \trbrdrr\brdrs\brdrw30 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw30 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw15 \cellx3240\clbrdrt\brdrs\brdrw15 
\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw15 \cellx5310\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw30 \clbrdrr\brdrs\brdrw30 \cellx8550 \pard \ri23\sb80\sa80\widctlpar\intbl {\lang1033 Visual C++ 4.x\cell 
Win32\cell }{\f11\lang1033 visualc\\eicar32.mdp\cell }\pard \widctlpar\intbl {\lang1033 \row }\pard \li839\ri23\sb80\sa80\widctlpar {\lang1033 
\par \sect }\sectd \pgwsxn11907\pghsxn16840\marglsxn1140\margrsxn1140\margtsxn1418\margbsxn1418\psz9\pgnrestart\linemod1\linex0\linecont\headery709\footery709\colsx709\endnhere\titlepg {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta ?}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta ?}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta ?}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta ?}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb ?}{\pntxta ?}}\pard\plain \s7\ri29\sb720\sa120\keep\keepn\pagebb\widctlpar \b\f5\fs36\lang2057 {\lang1033 {\*\bkmkstart ArchiveFormatsSupported}Appendix A: \tab Archive formats supported by on-demand scanner{\*\bkmkend ArchiveFormatsSupported}

\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\lang1033 Currently, the following archive formats are supported:
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}}\pard \fi-283\li1701\ri23\sb80\sa80\widctlpar{\*\pn \pnlvlblt\ulw\pnf1\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}{\lang1033 .ZIP (PKZIP)
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}.ARJ (Arj)
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}.LZH (LHA)
\par {\*\bkmkstart SpecificRestrictions}}\pard\plain \s7\ri29\sb720\sa120\keep\keepn\pagebb\widctlpar{\*\pn \pnlvlcont\pndec\uldb }\b\f5\fs36\lang2057 {\lang1033 Appendix B: \tab Specific restrictions{\*\bkmkend SpecificRestrictions}
\par }\pard\plain \li839\ri23\sb80\sa80\widctlpar{\*\pn \pnlvlcont\pndec\ulw }\f5\fs20\lang2057 {\lang1033 The restrictions documented below apply to the current implementation of FPI API.
\par {\pntext\pard\plain\f1\fs20\lang1033 \'b7\tab}}\pard \fi-283\li1701\ri23\sb80\sa80\widctlpar{\*\pn \pnlvlblt\ulw\pnf1\pnstart1\pnindent283\pnhang{\pntxtb \'b7}}{\lang1033 
FPIFILEIOFN_OPEN: for files inside containers, only FPIFILEIO_READ is allowed as the }{\i\lang1033 accessmode_}{\lang1033  parameter.  Attempting to open a file with other }{\i\lang1033 accessmode_}{\lang1033  values will result in }{\fs16\lang1033 
FPIFILEIO_ERROR_OPENFAILED}{\lang1033  error condition.\sect }\sectd \pgwsxn11880\pghsxn16820\marglsxn1140\margrsxn1140\margtsxn1417\margbsxn1417\pgnrestart\linex0\headery709\footery709\colsx709\endnhere\titlepg {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \li839\ri23\sb80\sa80\widctlpar \f5\fs20\lang2057 {\v\lang1033 FUNCTION REFERENCE TEMPLATE
\par }\pard \li835\ri29\sb480\sa80\widctlpar\box\brdrs\brdrw15\brsp20 {\b\v\lang1033 {\*\bkmkstart FunctionReferenceTemplate}FPI_FunctionName
\par }\pard\plain \s15\fi-288\li1555\ri43\sb120\widctlpar \f3\fs18\lang1024 {\v rettype FPI_FunctionPrototype (parameters);
\par }\pard\plain \li835\ri29\sb240\sa80\widctlpar \f5\fs20\lang2057 {\v\lang1033 General description.
\par }{\b\v\lang1033 Parameters:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\i\v\lang1033 param1}{\v\lang1033 \tab description}{\b\v\lang1033 
\par }{\i\v\lang1033 param2}{\v\lang1033 \tab description}{\b\v\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\v\lang1033 Returns: 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320 {\v\lang1033 retval1\tab description}{\b\v\lang1033 
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\v\lang1033 retval2\tab description}{\b\v\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\v\lang1033 Possible error conditions:
\par }\pard \fi-2902\li4320\ri23\sb80\sa80\widctlpar\tx4320\tx4590\tx7290 {\b\v\lang1033 
\par }\pard \li835\ri29\sb240\sa80\widctlpar {\b\v\lang1033 Notes: 
\par }\pard \fi-22\li1440\ri23\sb80\sa80\widctlpar\tx4320 {\v\lang1033 See also:.
\par }\pard \li839\ri23\sb80\sa80\widctlpar {\v\lang1033 {\*\bkmkend FunctionReferenceTemplate}
\par }}