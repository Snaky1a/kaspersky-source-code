#import "os.idef"

forward interface PosIO_SP;
typedef PosIO_SP* hPOSIO_SP;



[
  version(1)
  mnemonic(IID_POSIO_SP)
  id(58012)
  c_type_name(hPOSIO_SP)
  comment_ex("Полностью совместим с интерфейсом POSIO. Представляет упрощенный вариант интерфейса SeqIO. Имеет текущую позицию в IO и может читать/писать от этой позиции. Кроме того данный интерфейс позволяет устанавливать дополнительные свойства, которые сохраняются вместе с данными объекта.")
]
interface PosIO_SP : IO { // PosIO with Stored Properties

  // ------------------------------------

    [
      comment_ex("Указывает совместимость с интерфейсом")
      id(135)
    ]
    prop tIID pgINTERFACE_COMPATIBILITY; // Interface compatibility


  // ------------------------------------

    [
      comment_ex("Текущая позиция сдвигается в зависимости от параметра origin, задающего точку отсчета,  и на величину параметра offset.")
    ]
    method tERROR Seek( // Переставляет текущую позицию в IO
      tQWORD* result,
      tLONGLONG offset, // Указывает величину смещения для текущей позиции
      tDWORD origin // Точка отсчета смещения текущей позиции
    );
    method tERROR Read( // Читает указанное кол-во байт с текущей позиции
      tDWORD* result,
      tPTR buffer, // Принимающий буфер
      tDWORD count // Кол-во байт, которые требуется прочитать
    );
    method tERROR Write( // Записывает указанное кол-во байт с текущей позиции
      tDWORD* result,
      tPTR buffer, // Буфер, содержащий данные для записи
      tDWORD count // Кол-во байт, которые требуется записать
    );

    [
      comment_ex("Получает свойство, которое ранее было установлено на этом объекте через SetStoredProperty.")
    ]
    method tERROR GetStoredProperty( // Получить сохраняемое свойство
      tDWORD* result,
      const tSTRING sPropName, // Имя свойства
      tPTR pBuffer, // Буфер данных
      tDWORD dwSize // Размер буфера
    );

    [
      comment_ex("Устанавливает свойство на объекте, которое при закрытии объекта будет сохранено, а при последующем его открытии опять доступно.")
    ]
    method tERROR SetStoredProperty( // Установить сохраняемое свойство
      tDWORD* result,
      const tSTRING sPropName, // Имя свойства
      const tPTR pBuffer, // Буфер данных
      tDWORD dwSize // Размер буфера
    );

}

