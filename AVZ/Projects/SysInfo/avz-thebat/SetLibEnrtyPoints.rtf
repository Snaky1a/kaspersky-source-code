{\rtf1\ansi\ansicpg1251\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1049\deflangfe2052{\fonttbl{\f0\froman\fcharset204\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}
{\f1\fswiss\fcharset204\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Microsoft Sans Serif};}{\f2\fmodern\fcharset204\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f41\froman\fcharset0\fprq2 Times New Roman{\*\falt Times New Roman};}{\f39\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}
{\f42\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\f43\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}{\f44\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}
{\f45\froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}{\f46\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}{\f47\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}
{\f51\fswiss\fcharset0\fprq2 Arial{\*\falt Microsoft Sans Serif};}{\f49\fswiss\fcharset238\fprq2 Arial CE{\*\falt Microsoft Sans Serif};}{\f52\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Microsoft Sans Serif};}
{\f53\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Microsoft Sans Serif};}{\f54\fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Microsoft Sans Serif};}{\f55\fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Microsoft Sans Serif};}
{\f56\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Microsoft Sans Serif};}{\f57\fswiss\fcharset163\fprq2 Arial (Vietnamese){\*\falt Microsoft Sans Serif};}{\f61\fmodern\fcharset0\fprq1 Courier New;}{\f59\fmodern\fcharset238\fprq1 Courier New CE;}
{\f62\fmodern\fcharset161\fprq1 Courier New Greek;}{\f63\fmodern\fcharset162\fprq1 Courier New Tur;}{\f64\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f65\fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f66\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f67\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 \snext0 Normal;}{\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs32\lang1049\langfe1049\kerning32\cgrid\langnp1049\langfenp1049 \sbasedon0 \snext0 \styrsid3354693 heading 1;}{\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\i\f1\fs28\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 \sbasedon0 \snext0 \styrsid3354693 heading 2;}{\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 
\b\f1\fs26\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 \sbasedon0 \snext0 \styrsid12742908 heading 3;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\listtable{\list\listtemplateid1751546522
\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid68747265\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid68747267\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid68747269\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid68747265\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0
{\leveltext\leveltemplateid68747267\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid68747269
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid68747265\'01\u-3913 ?;}{\levelnumbers
;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid68747267\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760
\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid68747269\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }
{\listname ;}\listid1268777714}}{\*\listoverridetable{\listoverride\listid1268777714\listoverridecount0\ls1}}{\*\rsidtbl \rsid66600\rsid141397\rsid285952\rsid286667\rsid481503\rsid604521\rsid805936\rsid869460\rsid941940\rsid943415\rsid1004113\rsid1198964
\rsid1709122\rsid1794131\rsid1919944\rsid1924458\rsid1996674\rsid2044509\rsid2182625\rsid2248287\rsid2296467\rsid2491926\rsid2509196\rsid2636900\rsid2885106\rsid2915508\rsid3171581\rsid3281913\rsid3308849\rsid3354693\rsid3547825\rsid3619003\rsid3933464
\rsid4133542\rsid4225807\rsid4402677\rsid4471524\rsid4535797\rsid4603929\rsid4996673\rsid5012927\rsid5641963\rsid5721840\rsid5797621\rsid6124474\rsid6164088\rsid6243685\rsid6968810\rsid7231280\rsid7234942\rsid7621614\rsid7631733\rsid7759614\rsid7821559
\rsid8147912\rsid8540351\rsid8651468\rsid8653505\rsid9265144\rsid9379816\rsid9528773\rsid9643440\rsid9767461\rsid9780226\rsid9787579\rsid9966203\rsid10183823\rsid10253685\rsid10375224\rsid10576183\rsid10648992\rsid10880050\rsid11141702\rsid11164781
\rsid11289641\rsid11356209\rsid11617041\rsid11796852\rsid11810223\rsid11818079\rsid12267158\rsid12347854\rsid12393277\rsid12678608\rsid12742908\rsid12927649\rsid12987539\rsid13501496\rsid13648488\rsid13699232\rsid13791033\rsid14241371\rsid14305594
\rsid14358543\rsid14568356\rsid14710224\rsid15039481\rsid15338346\rsid15737678\rsid15755266\rsid15948053\rsid15999506\rsid16140615\rsid16204600\rsid16217721\rsid16395650\rsid16541069}{\*\generator Microsoft Word 11.0.6502;}{\info
{\title \'c5\'f1\'eb\'e8 \'e2 \'ef\'eb\'e0\'e3\'e8\'ed\'e5 \'f2\'e5\'f1\'f2\'fc \'f4\'f3\'ed\'ea\'f6\'e8\'ff TBP_SetLibEntryPoints \'f2\'ee The Bat}{\author Maxim Masiutin}{\operator Angela}{\creatim\yr2005\mo8\dy26\min37}{\revtim\yr2005\mo8\dy31\min11}
{\version5}{\edmins59}{\nofpages5}{\nofwords1106}{\nofchars6308}{\*\company  }{\nofcharsws7400}{\vern24579}}\paperw11906\paperh16838\margl1701\margr850\margt1134\margb1134 
\deftab708\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1701\dgvorigin1134\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct
\asianbrkrule\rsidroot5721840\newtblstyruls\nogrowautofit \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}
{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid3354693 \b\f1\fs32\lang1049\langfe1049\kerning32\cgrid\langnp1049\langfenp1049 {
\lang1033\langfe1049\langnp1033\insrsid3354693\charrsid3354693 TBP_SetLibEntryPoints}{\lang1033\langfe1049\langnp1033\insrsid3354693 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid3354693 
\par When The Bat! loads a plugin, it first checks whether it exports the}{\lang1033\langfe1049\langnp1033\insrsid5721840\charrsid3354693  TBP_SetLibEntryPoints }{\lang1033\langfe1049\langnp1033\insrsid3354693 function, and }{
\lang1033\langfe1049\langnp1033\insrsid8651468 calls}{\lang1033\langfe1049\langnp1033\insrsid3354693  it before }{\lang1033\langfe1049\langnp1033\insrsid5721840\charrsid3354693 TBP_Initialize}{\lang1033\langfe1049\langnp1033\insrsid3354693  (or BAV}{
\lang1033\langfe1049\langnp1033\insrsid3354693\charrsid3354693 _Initialize}{\lang1033\langfe1049\langnp1033\insrsid3354693 ).}{\lang1033\langfe1049\langnp1033\insrsid1924458\charrsid3354693 
\par }{\lang1033\langfe1049\langnp1033\insrsid5721840\charrsid3354693 
\par }{\lang1033\langfe1049\langnp1033\insrsid3354693 The 32-bit DWORD IDs of the functions are listed here.}{\lang1033\langfe1049\langnp1033\insrsid5721840 
\par }{\lang1033\langfe1049\langnp1033\insrsid3354693 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12742908 \b\i\f1\fs28\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid12742908 
About the calling conventions
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid12742908 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12742908 \b\f1\fs26\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid12742908 
Register
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid12742908 
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 The register }{\lang1033\langfe1049\langnp1033\insrsid12742908 calling }{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 
conventions pass parameters from left to right; that is, the left most parameter is evaluated and passed first and the rightmost parameter is evaluated and passed last.
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12742908 {\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 The register convention uses up to three CPU registers to pass parameters}{
\lang1033\langfe1049\langnp1033\insrsid12742908  (and the rest, }{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 if any}{\lang1033\langfe1049\langnp1033\insrsid12742908 ,}{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 
 }{\lang1033\langfe1049\langnp1033\insrsid12742908 are passed on the stack)}{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 , }{\lang1033\langfe1049\langnp1033\insrsid12742908 opposing to }{
\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 the other conventions }{\lang1033\langfe1049\langnp1033\insrsid12742908 that }{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 pass all parameters on the stack.
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908 
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 The register convention is the most efficient, since it usually avoids creation of a stack frame.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\lang1033\langfe1049\langnp1033\insrsid12742908 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12742908 {\lang1033\langfe1049\langnp1033\insrsid12742908 F}{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 
irst three parameters that qualify are passed in the EAX, EDX, and ECX registers, in that order. Real and method-pointer types do not qualify as register parame
ters, but all other parameters do. If more than three parameters qualify as register parameters, the first three are passed in EAX, EDX, and ECX, and the remaining parameters are pushed onto the stack in order of declaration. For example, given the declar
ation
\par 
\par procedure Test(A: Integer; var B: Char; C: Double; const D: string; E: Pointer);
\par 
\par a call to Test passes A in EAX as a 32-bit integer, B in EDX as a pointer to a Char, and D in ECX as a pointer to a long-string memory block; C and E are pushed onto the stack as two double-words and a 32-bit pointer, in that order.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\lang1033\langfe1049\langnp1033\insrsid12742908 
\par }{\lang1033\langfe1049\langnp1033\insrsid16395650 Functions of register calling convention preserve }{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 EBX, ESI, EDI, and EBP registers, but can modify the EAX, EDX, and ECX}{
\lang1033\langfe1049\langnp1033\insrsid16395650 , and reset the direction flag.}{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908 
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16395650 {\lang1033\langfe1049\langnp1033\insrsid16395650\charrsid16395650 The following conventions are used for returning function result values.
\par 
\par {\listtext\pard\plain\f3\lang1033\langfe1049\langnp1033\langfenp1049\insrsid16395650\charrsid16395650 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\widctlpar
\jclisttab\tx720\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0\pararsid16395650 {\lang1033\langfe1049\langnp1033\insrsid16395650\charrsid16395650 
Ordinal results are returned in a CPU register. Bytes are returned in AL, words are returned in AX, and double-words are returned in EAX.
\par {\listtext\pard\plain\f3\lang1033\langfe1049\langnp1033\langfenp1049\insrsid16395650\charrsid16395650 \loch\af3\dbch\af0\hich\f3 \'b7\tab}
Real results are returned in the floating-point coprocessor's top-of-stack register (ST(0)). For function results of type Currency, the value in ST(0) is scaled by 10000. For example, the Currency value 1.234 is returned in ST(0) as 12340.
\par {\listtext\pard\plain\f3\lang1033\langfe1049\langnp1033\langfenp1049\insrsid16395650\charrsid16395650 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Pointer, class, class-reference, and procedure-pointer results are returned in EAX.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\lang1033\langfe1049\langnp1033\insrsid16395650 
\par The register calling convention is compatible with Borland Delphi and Borland C and may not be compatible "fastcall" calling convention implemented by the other compilers. For compatibility we recommend using }{
\lang1033\langfe1049\langnp1033\insrsid12393277 "stdcall".}{\lang1033\langfe1049\langnp1033\insrsid16395650 
\par 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12393277 \b\f1\fs26\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid12393277 STDCALL

\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid12393277 
\par }{\lang1033\langfe1049\langnp1033\insrsid12393277\charrsid12393277 
stdcall is the calling conventions used by the Win32 API. It is basically the same as the cdecl convention with the difference in that the callee is responsible for popping the arguments from the stack.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3354693 \b\i\f1\fs28\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid5721840 PCRE}{
\lang1033\langfe1049\langnp1033\insrsid3354693  Functions}{\lang1033\langfe1049\langnp1033\insrsid5721840\charrsid5721840 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang2057\langfe1049\langnp2057\insrsid5721840 
\par }{\lang2057\langfe1049\langnp2057\insrsid3354693 PCRE stands for Perl-Compatible Regular Expressions. For the syntax of the functions, please refer to PCRE manual.
\par }{\lang2057\langfe1049\langnp2057\insrsid3354693\charrsid1794131 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 {\lang2057\langfe1049\langnp2057\insrsid5721840 CRC32_PCRE_COMPILE_R}{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 \tab 1116605475}{
\lang2057\langfe1049\langnp2057\insrsid5721840 \tab }{\lang1033\langfe1049\langnp1033\insrsid5721840 pcre_compile (register calling convention)}{\lang1033\langfe1049\langnp1033\insrsid5721840\charrsid5721840 
\par }{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 CRC32_PCRE_EXEC_R }{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab \tab }{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 1084876467}{
\lang2057\langfe1049\langnp2057\insrsid5721840 \tab }{\lang1033\langfe1049\langnp1033\insrsid5721840 pcre_exec (register calling convention)}{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12742908 {\lang2057\langfe1049\langnp2057\insrsid12742908\charrsid12742908 CRC32_PCRE_FULLINFO_R}{\lang2057\langfe1049\langnp2057\insrsid12742908 \tab 1437473690\tab 
}{\lang1033\langfe1049\langnp1033\insrsid12742908 pcre_fullinfo (register calling convention)}{\lang2057\langfe1049\langnp2057\insrsid12742908\charrsid5721840 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 {\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 CRC32_PCRE_STUDY_R }{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab \tab }{
\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 3902127939}{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab }{\lang1033\langfe1049\langnp1033\insrsid5721840 pcre_study (register calling convention)}{
\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 
\par CRC32_PCRE_VERSION_R }{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab }{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 1023134035}{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab }{\lang1033\langfe1049\langnp1033\insrsid5721840 
pcre_version (register calling convention)}{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12742908 {\lang2057\langfe1049\langnp2057\insrsid12742908 
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908 The same with STDCALL calling convention:
\par }{\lang2057\langfe1049\langnp2057\insrsid12742908 
\par }{\lang2057\langfe1049\langnp2057\insrsid12742908\charrsid12742908   CRC32_PCRE_COMPILE_S = 898186421;
\par   CRC32_PCRE_EXEC_S = 934204965;
\par   CRC32_PCRE_STUDY_S = 2677182421;
\par   CRC32_PCRE_VERSION_S = 1274870213;
\par   CRC32_PCRE_FULLINFO_S = 581511948;
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3354693 \b\i\f1\fs28\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid3354693 
Memory Allocation Routines}{\lang1033\langfe1049\langnp1033\insrsid5721840\charrsid3354693 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang2057\langfe1049\langnp2057\insrsid5721840 
\par }{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 CRC32_MALLOC_R }{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab \tab }{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 642645129}{
\lang2057\langfe1049\langnp2057\insrsid5721840 \tab C stdlib malloc (}{\lang1033\langfe1049\langnp1033\insrsid5721840 register calling convention)}{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 
\par CRC32_REALLOC_R }{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab \tab }{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 707216651}{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab C stdlib realloc (}{
\lang1033\langfe1049\langnp1033\insrsid5721840 register calling convention)}{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 
\par CRC32_FREE_R }{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab \tab \tab }{\lang2057\langfe1049\langnp2057\insrsid5721840\charrsid5721840 3073555937}{\lang2057\langfe1049\langnp2057\insrsid5721840 \tab C stdlib free (}{
\lang1033\langfe1049\langnp1033\insrsid5721840 register calling convention)
\par 
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908 The same with STDCALL calling convention:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12742908 {\lang2057\langfe1049\langnp2057\insrsid12742908 
\par }{\lang2057\langfe1049\langnp2057\insrsid12742908\charrsid12742908   CRC32_MALLOC_S = 1363856415;
\par   CRC32_REALLOC_S = 1562408349;
\par   CRC32_FREE_S = 3224735095;
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 {\lang1033\langfe1049\langnp1033\insrsid12742908 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3354693 \b\i\f1\fs28\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid3354693 
String-Manipulation Routines Exported From Delphi SysUtils Unit}{\lang1033\langfe1049\langnp1033\insrsid5721840\charrsid3354693 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid5721840 
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908 Register calling convention:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12742908 {\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908   CRC32_ANSISTRCOMP_R = 170070698;
\par   CRC32_ANSISTRICOMP_R = 111092571;
\par   CRC32_ANSISTRLCOMP_R = 1420233980;
\par   CRC32_ANSISTRLICOMP_R = 2227786628;
\par   CRC32_ANSISTRLOWER_R = 3049647173;
\par   CRC32_ANSISTRUPPER_R = 119757062;
\par   CRC32_ANSISTRLASTCHAR_R = 1831693843;
\par   CRC32_ANSIEXTRACTQUOTEDSTR_R = 937118913;
\par   CRC32_STRLEN_R = 606305317;
\par   CRC32_STREND_R = 4087684227;
\par   CRC32_STRMOVE_R = 2115709820;
\par   CRC32_STRCOPY_R = 1950764996;
\par   CRC32_STRECOPY_R = 596756569;
\par   CRC32_STRLCOPY_R = 3054079370;
\par   CRC32_STRCAT_R = 950032901;
\par   CRC32_STRLCAT_R = 2694689721;
\par   CRC32_STRCOMP_R = 3655662345;
\par   CRC32_STRICOMP_R = 1234376416;
\par   CRC32_STRLCOMP_R = 464206151;
\par   CRC32_STRLICOMP_R = 3627365813;
\par   CRC32_STRSCAN_R = 1135355217;
\par   CRC32_STRRSCAN_R = 3053584524;
\par   CRC32_STRPOS_R = 4201699041;
\par   CRC32_STRUPPER_R = 1211067581;
\par   CRC32_STRLOWER_R = 4207532542;
\par   CRC32_STRALLOC_R = 2028160288;
\par   CRC32_STRBUFSIZE_R = 3312340496;
\par   CRC32_STRNEW_R = 1293203386;
\par   CRC32_STRDISPOSE_R = 3696912403;
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908 
\par Stdcall calling convention:
\par 
\par }{\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908   CRC32_ANSISTRCOMP_S = 2099520060;
\par   CRC32_ANSISTRICOMP_S = 1905791949;
\par   CRC32_ANSISTRLCOMP_S = 597703786;
\par   CRC32_ANSISTRLICOMP_S = 4090389266;
\par   CRC32_ANSISTRLOWER_S = 3267550419;
\par   CRC32_ANSISTRUPPER_S = 1881434512;
\par   CRC32_ANSISTRLASTCHAR_S = 438984325;
\par   CRC32_ANSIEXTRACTQUOTEDSTR_S = 1088191575;
\par   CRC32_STRLEN_S = 1394887859;
\par   CRC32_STREND_S = 2225220629;
\par   CRC32_STRMOVE_S = 152837098;
\par   CRC32_STRCOPY_S = 54624082;
\par   CRC32_STRECOPY_S = 1419180239;
\par   CRC32_STRLCOPY_S = 3238968604;
\par   CRC32_STRCAT_S = 1336371859;
\par   CRC32_STRLCAT_S = 3617227567;
\par   CRC32_STRCOMP_S = 2934164383;
\par   CRC32_STRICOMP_S = 1049896566;
\par   CRC32_STRLCOMP_S = 1823214033;
\par   CRC32_STRLICOMP_S = 2939290915;
\par   CRC32_STRSCAN_S = 883627463;
\par   CRC32_STRRSCAN_S = 3238342682;
\par   CRC32_STRPOS_S = 2373445239;
\par   CRC32_STRUPPER_S = 1059609643;
\par   CRC32_STRLOWER_S = 2379147624;
\par   CRC32_STRALLOC_S = 266630582;
\par   CRC32_STRBUFSIZE_S = 2993258118;
\par   CRC32_STRNEW_S = 974358316;
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 {\lang1033\langfe1049\langnp1033\insrsid12742908\charrsid12742908   CRC32_STRDISPOSE_S = 2875021445;}{
\lang1033\langfe1049\langnp1033\insrsid5721840\charrsid3354693 
\par }{\lang1033\langfe1049\langnp1033\insrsid5721840 
\par }{\lang1033\langfe1049\langnp1033\insrsid15338346 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15338346 \b\i\f1\fs28\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid15338346 
Zlib 1.2.3
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid15338346 
\par The following Zlib functions are exported:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15338346 {\lang1033\langfe1049\langnp1033\insrsid15338346\charrsid15338346 inflateInit_
\par inflateInit
\par inflateInit2_
\par inflateInit2
\par inflate
\par inflateEnd
\par deflateInit_
\par deflateInit2
\par deflateInit2_
\par deflate
\par deflateEnd
\par compress
\par compress2
\par inflateReset
\par crc32
\par uncompress
\par adler32}{\lang1033\langfe1049\langnp1033\insrsid15338346\charrsid15338346 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 {\lang1033\langfe1049\langnp1033\insrsid15338346 
\par Register calling convention:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15338346 {\lang1033\langfe1049\langnp1033\insrsid15338346\charrsid15338346   CRC32_INFLATEINIT__R = 2426198898;
\par   CRC32_INFLATEINIT_R = 1568120800;
\par   CRC32_INFLATEINIT2__R = 1193078144;
\par   CRC32_INFLATEINIT2_R = 3499328257;
\par   CRC32_INFLATE_R = 3883586530;
\par   CRC32_INFLATEEND_R = 1340684684;
\par   CRC32_DEFLATEINIT__R = 3232699530;
\par   CRC32_DEFLATEINIT2_R = 2157989113;
\par   CRC32_DEFLATEINIT2__R = 4096435297;
\par   CRC32_DEFLATE_R = 1264527587;
\par   CRC32_DEFLATEEND_R = 4066885414;
\par   CRC32_COMPRESS_R = 667936340;
\par   CRC32_COMPRESS2_R = 484789485;
\par   CRC32_INFLATERESET_R = 1361228733;
\par   CRC32_CRC32_R = 877843442;
\par   CRC32_UNCOMPRESS_R = 2675333048;
\par   CRC32_ADLER32_R = 2651996041;
\par }{\lang1033\langfe1049\langnp1033\insrsid15338346 
\par Stdcall:
\par 
\par }{\lang1033\langfe1049\langnp1033\insrsid15338346\charrsid15338346   CRC32_INFLATEINIT__S = 3885755364;
\par   CRC32_INFLATEINIT_S = 712028022;
\par   CRC32_INFLATEINIT2__S = 807132438;
\par   CRC32_INFLATEINIT2_S = 2811540375;
\par   CRC32_INFLATE_S = 2424169332;
\par   CRC32_INFLATEEND_S = 955123994;
\par   CRC32_DEFLATEINIT__S = 3081249820;
\par   CRC32_DEFLATEINIT2_S = 4154948719;
\par   CRC32_DEFLATEINIT2__S = 2200802551;
\par   CRC32_DEFLATE_S = 1012406389;
\par   CRC32_DEFLATEEND_S = 2237697968;
\par   CRC32_COMPRESS_S = 1355339458;
\par   CRC32_COMPRESS2_S = 1810005115;
\par   CRC32_INFLATERESET_S = 639992619;
\par   CRC32_CRC32_S = 1129702244;
\par   CRC32_UNCOMPRESS_S = 3899746094;
\par   CRC32_ADLER32_S = 3910471455;}{\lang1033\langfe1049\langnp1033\insrsid15338346\charrsid15338346 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5721840 {\lang1033\langfe1049\langnp1033\insrsid15338346 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3354693 \b\i\f1\fs28\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid3354693 
Other Functions
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3354693 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\lang1033\langfe1049\langnp1033\insrsid3354693 
If you need other functions from the other libraries, e.g. zlib, pnglib, jpeglib, just let us know}{\lang1033\langfe1049\langnp1033\insrsid3354693\charrsid3354693 
\par }}