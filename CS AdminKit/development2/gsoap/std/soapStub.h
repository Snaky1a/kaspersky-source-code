/* soapStub.h
   Generated by gSOAP 2.7.0d from soapheader.h
   Copyright (C) 2001-2004 Genivia, Inc. All Rights Reserved.
   This software is released under one of the following three licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
   See README.txt for further details.
*/
#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

SOAP_BEGIN_NAMESPACE(soap)

/* Enumerations */

/* Classes and Structs */

/* xsd:anyType: */
class SOAP_CMAC xsd__anyType
{
public:
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 6; } /* = unique id SOAP_TYPE_xsd__anyType */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* xsd:anySimpleType: */
class SOAP_CMAC xsd__anySimpleType : public xsd__anyType
{
public:
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_xsd__anySimpleType */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:anyURI schema type: */
class SOAP_CMAC xsd__anyURI_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_xsd__anyURI_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:boolean schema type: */
class SOAP_CMAC xsd__boolean_ : public xsd__anySimpleType
{
public:
	bool __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_xsd__boolean_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:date schema type: */
class SOAP_CMAC xsd__date_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_xsd__date_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:dateTime schema type: */
class SOAP_CMAC xsd__dateTime_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_xsd__dateTime_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:double schema type: */
class SOAP_CMAC xsd__double_ : public xsd__anySimpleType
{
public:
	double __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_xsd__double_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:duration schema type: */
class SOAP_CMAC xsd__duration_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_xsd__duration_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:float schema type: */
class SOAP_CMAC xsd__float_ : public xsd__anySimpleType
{
public:
	float __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_xsd__float_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:time schema type: */
class SOAP_CMAC xsd__time_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_xsd__time_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:decimal schema type: */
class SOAP_CMAC xsd__decimal_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_xsd__decimal_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:integer schema type: */
class SOAP_CMAC xsd__integer_ : public xsd__decimal_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_xsd__integer_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:long schema type: */
class SOAP_CMAC xsd__long_ : public xsd__integer_
{
public:
	LONG64 __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_xsd__long_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:int schema type: */
class SOAP_CMAC xsd__int_ : public xsd__long_
{
public:
	long __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_xsd__int_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:short schema type: */
class SOAP_CMAC xsd__short_ : public xsd__int_
{
public:
	short __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_xsd__short_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:byte schema type: */
class SOAP_CMAC xsd__byte_ : public xsd__short_
{
public:
	char __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_xsd__byte_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:nonPositiveInteger schema type: */
class SOAP_CMAC xsd__nonPositiveInteger_ : public xsd__integer_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_xsd__nonPositiveInteger_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:negativeInteger schema type: */
class SOAP_CMAC xsd__negativeInteger_ : public xsd__nonPositiveInteger_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_xsd__negativeInteger_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:nonNegativeInteger schema type: */
class SOAP_CMAC xsd__nonNegativeInteger_ : public xsd__integer_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE_xsd__nonNegativeInteger_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:positiveInteger schema type: */
class SOAP_CMAC xsd__positiveInteger_ : public xsd__nonNegativeInteger_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE_xsd__positiveInteger_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:unsignedLong schema type: */
class SOAP_CMAC xsd__unsignedLong_ : public xsd__nonNegativeInteger_
{
public:
	ULONG64 __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE_xsd__unsignedLong_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:unsignedInt schema type: */
class SOAP_CMAC xsd__unsignedInt_ : public xsd__unsignedLong_
{
public:
	unsigned long __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE_xsd__unsignedInt_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:unsignedShort schema type: */
class SOAP_CMAC xsd__unsignedShort_ : public xsd__unsignedInt_
{
public:
	unsigned short __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE_xsd__unsignedShort_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:unsignedByte schema type: */
class SOAP_CMAC xsd__unsignedByte_ : public xsd__unsignedShort_
{
public:
	unsigned char __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE_xsd__unsignedByte_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:wstring schema type: */
class SOAP_CMAC xsd__wstring_ : public xsd__anySimpleType
{
public:
	wchar_t *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE_xsd__wstring_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:string schema type: */
class SOAP_CMAC xsd__string_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE_xsd__string_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:normalizedString schema type: */
class SOAP_CMAC xsd__normalizedString_ : public xsd__string_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE_xsd__normalizedString_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:token schema type: */
class SOAP_CMAC xsd__token_ : public xsd__normalizedString_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE_xsd__token_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary : public xsd__anySimpleType
{
public:
	unsigned char *__ptr;
	int __size;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* hexBinary schema type: */
class SOAP_CMAC xsd__hexBinary : public xsd__anySimpleType
{
public:
	unsigned char *__ptr;
	int __size;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE_xsd__hexBinary */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAPComponentId: */
class SOAP_CMAC SOAPComponentId
{
public:
	SOAPComponentId();	/* required element */
	wchar_t *productName;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *componentName;	/* optional element */
	wchar_t *instanceId;	/* optional element */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE_SOAPComponentId */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of SOAPComponentId schema type: */
struct SOAPComponentIdsList
{
	SOAPComponentId *__ptr;
	int __size;
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC param_error_loc_args
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE_param_error_loc_args */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* param-error-loc: */
class SOAP_CMAC param_error_loc
{
public:
	long format_id;	/* required element */
	wchar_t *format;	/* optional element */
	wchar_t *locmodule;	/* optional element */
	param_error_loc_args args;	/* required element */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE_param_error_loc */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* param-error: */
struct param_error
{
	long code;	/* RPC return element */	/* required element */
	wchar_t *module;	/* optional element */
	char *file;	/* optional element */
	long line;	/* required element */
	wchar_t *message;	/* optional element */
	param_error_loc *locdata;	/* optional element */
};

/* param:value: */
class SOAP_CMAC param__value
{
public:
	xsd__anyType *data;	/* optional element */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE_param__value */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* param:entry: */
class SOAP_CMAC param__entry
{
public:
	wchar_t *name;	/* optional element */
	param__value value;	/* required element */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE_param__entry */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Sequence of param:node schema type: */
class SOAP_CMAC param__node
{
public:
	param__entry *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE_param__node */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* param:params: */
class SOAP_CMAC param__params : public xsd__anyType
{
public:
	param__node *node;	/* optional element */
	virtual int getType();	/* required element */
	long checksum;	/* required element */
	xsd__base64Binary binfmt;	/* required element */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE_param__params */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Sequence of param:arrayvalue schema type: */
class SOAP_CMAC param__arrayvalue : public xsd__anyType
{
public:
	param__value *__ptr;
	int __size;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 126; } /* = unique id SOAP_TYPE_param__arrayvalue */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* transient type: */
struct message_desc_t
{
	long requestFlag;	/* transient */
	long messageId;	/* transient */
};

/* SOAP Header: */
struct SOAP_ENV__Header
{
	struct message_desc_t messDesc;	/* external */
};

/* SOAPTransportLoc: */
class SOAP_CMAC SOAPTransportLoc
{
public:
	wchar_t *remoteName;	/* optional element */
	wchar_t *location;	/* optional element */
	bool unicastLocFlag;	/* required element */
	bool useSSLUnicast;	/* required element */
	bool compressTraffic;	/* required element */
public:
	virtual int soap_type() const { return 134; } /* = unique id SOAP_TYPE_SOAPTransportLoc */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of SOAPTransportLoc schema type: */
struct TransportLocList
{
	SOAPTransportLoc *__ptr;
	int __size;
};

/* SOAPPermissions: */
class SOAP_CMAC SOAPPermissions
{
public:
	ULONG64 Allow;	/* required element */
	ULONG64 Deny;	/* required element */
	wchar_t *UserAccountName;	/* optional element */
public:
	virtual int soap_type() const { return 137; } /* = unique id SOAP_TYPE_SOAPPermissions */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAPConnectionOptions: */
class SOAP_CMAC SOAPConnectionOptions
{
public:
	bool CompressTrafic;	/* required element */
	bool FlagNewClientVersion;	/* required element */
	ULONG64 TransportVersion;	/* required element */
	bool DontWaitCleaningEventQueue;	/* required element */
public:
	virtual int soap_type() const { return 138; } /* = unique id SOAP_TYPE_SOAPConnectionOptions */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* tr-InitiateRemoteConnectionResponse: */
struct tr_InitiateRemoteConnectionResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* tr-InitiateRemoteConnection: */
struct tr_InitiateRemoteConnection
{
	char *remoteName;	/* optional element */
	char *localName;	/* optional element */
};

/* tr-CreateReverseConnectionResponse: */
struct tr_CreateReverseConnectionResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* tr-CreateReverseConnection: */
struct tr_CreateReverseConnection
{
	char *remoteClientConnName;	/* optional element */
	char *connName;	/* optional element */
	char *remoteClientLoc;	/* optional element */
	char *authClientName;	/* optional element */
	int gatewayConnFlag;	/* required element */
	int connPingTimeout;	/* required element */
	int connPriority;	/* required element */
	SOAPPermissions *permissions;	/* optional element */
	SOAPConnectionOptions *options;	/* optional element */
};

/* tr-ReverseConnectionReplyResponse: */
struct tr_ReverseConnectionReplyResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* tr-ReverseConnectionReply: */
struct tr_ReverseConnectionReply
{
	char *remoteServerConnName;	/* optional element */
	char *clientConnName;	/* optional element */
	int pingTimeout;	/* required element */
	SOAPPermissions *permissions;	/* optional element */
	SOAPConnectionOptions *options;	/* optional element */
};

/* tr-PingMethodResponse: */
struct tr_PingMethodResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* tr-PingMethod: */
struct tr_PingMethod
{
	char *remoteClientConnName;	/* optional element */
};

/* tr-AuthHandshakeResult: */
struct tr_AuthHandshakeResult
{
	xsd__hexBinary outString;	/* RPC return element */	/* required element */
	wchar_t *outClientIdentity;	/* optional element */
};

/* tr-AuthenticationHandshake: */
struct tr_AuthenticationHandshake
{
	wchar_t *inClientIdentity;	/* optional element */
	xsd__hexBinary inString;	/* required element */
	int connPriority;	/* required element */
};

/* tr-CreateGatewayConnectionResponse: */
struct tr_CreateGatewayConnectionResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* tr-CreateGatewayConnection: */
struct tr_CreateGatewayConnection
{
	wchar_t *localName;	/* optional element */
	struct TransportLocList *processNamesList;	/* optional element */
	int nextProcessPos;	/* required element */
	int connectTimeout;	/* required element */
};

/* tr-TestMethodResponse: */
struct tr_TestMethodResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* tr-TestMethod: */
struct tr_TestMethod
{
	int num;	/* required element */
	char *str;	/* optional element */
};

/* tr-TestMethod1Result: */
struct tr_TestMethod1Result
{
	char *outString;	/* RPC return element */	/* optional element */
};

/* tr-TestMethod1: */
struct tr_TestMethod1
{
	int num;	/* required element */
	char *str;	/* optional element */
};

/* tr-TrafficControlNotifyResponse: */
struct tr_TrafficControlNotifyResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* tr-TrafficControlNotify: */
struct tr_TrafficControlNotify
{
	int error;	/* required element */
};

/* SOAP encoded array of xsd:long schema type: */
struct SOAPSubsIdsList
{
	long *__ptr;
	int __size;
};

/* ev-RemoteSubscribeResponse: */
struct ev_RemoteSubscribeResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* ev-RemoteSubscribe: */
struct ev_RemoteSubscribe
{
	long subsId;	/* required element */
	wchar_t *localCompName;	/* optional element */
	SOAPComponentId *subscriber;	/* optional element */
	SOAPComponentId *publisher;	/* optional element */
	wchar_t *eventType;	/* optional element */
	param__params eventBodyFilter;	/* required element */
	int sendToAgentSubs;	/* required element */
	int useOnlyLocalConnsFlag;	/* required element */
};

/* ev-RemoteUnsubscribeResponse: */
struct ev_RemoteUnsubscribeResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* ev-RemoteUnsubscribe: */
struct ev_RemoteUnsubscribe
{
	long remoteSubsId;	/* required element */
};

/* ev-PublishEventResponse: */
struct ev_PublishEventResponse
{
	int *result;	/* RPC return element */	/* optional element */
};

/* ev-PublishEvent: */
struct ev_PublishEvent
{
	SOAPComponentId *eventPublisher;	/* optional element */
	wchar_t *eventType;	/* optional element */
	param__params eventBody;	/* required element */
	time_t eventBirthTime;	/* required element */
	int eventLifeTime;	/* required element */
	struct SOAPComponentIdsList *processedCompsList;	/* optional element */
	struct SOAPSubsIdsList *remoteSubsIdsList;	/* optional element */
};

/* klspl-permission-unit-t: */
struct klspl_permission_unit_t
{
	wchar_t *sid;	/* optional element */
	wchar_t *userOrUsergroup;	/* optional element */
	bool groupFlag;	/* required element */
	bool readonly;	/* required element */
	bool uneraseable;	/* required element */
	ULONG64 allowMask;	/* required element */
	ULONG64 denyMask;	/* required element */
};

/* SOAP encoded array of klspl-permission-unit-t schema type: */
struct klspl_permission_list_t
{
	struct klspl_permission_unit_t *__ptr;
	int __size;
};

/* klspl-permissions-t: */
struct klspl_permissions_t
{
	struct klspl_permission_list_t PermissionsList;	/* required element */
	bool InheritedFlag;	/* required element */
	ULONG64 VisibilityMask;	/* required element */
};

/* klspl-GetPermissionsResponse: */
struct klspl_GetPermissionsResponse
{
	struct klspl_permissions_t perms;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klspl-GetPermissions: */
struct klspl_GetPermissions
{
	LONG64 groupId;	/* required element */
};

/* klspl-SetPermissionsResponse: */
struct klspl_SetPermissionsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klspl-SetPermissions: */
struct klspl_SetPermissions
{
	LONG64 groupId;	/* required element */
	struct klspl_permissions_t perms;	/* required element */
	bool bCheckUserRights;	/* required element */
};

/* SOAP encoded array of xsd:int schema type: */
struct klprci_tasks_t
{
	long *__ptr;
	int __size;
};

/* klprci-GetTasksParamsResponse: */
struct klprci_GetTasksParamsResponse
{
	param__params pars;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-GetTasksParams: */
struct klprci_GetTasksParams
{
	wchar_t *ID;	/* optional element */
	long idtask;	/* required element */
	param__params filter;	/* required element */
};

/* klprci-GetPingTimeoutResponse: */
struct klprci_GetPingTimeoutResponse
{
	long timeout;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-GetPingTimeout: */
struct klprci_GetPingTimeout
{
	wchar_t *ID;	/* optional element */
};

/* klprci-GetStateResponse: */
struct klprci_GetStateResponse
{
	long state;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-GetState: */
struct klprci_GetState
{
	wchar_t *ID;	/* optional element */
};

/* klprci-GetStatisticsResponse: */
struct klprci_GetStatisticsResponse
{
	param__params statisticsOut;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-GetStatistics: */
struct klprci_GetStatistics
{
	wchar_t *ID;	/* optional element */
	param__params statisticsIn;	/* required element */
};

/* klprci-StopResponse: */
struct klprci_StopResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprci-Stop: */
struct klprci_Stop
{
	wchar_t *ID;	/* optional element */
};

/* klprci-SuspendResponse: */
struct klprci_SuspendResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprci-Suspend: */
struct klprci_Suspend
{
	wchar_t *ID;	/* optional element */
};

/* klprci-ResumeResponse: */
struct klprci_ResumeResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprci-Resume: */
struct klprci_Resume
{
	wchar_t *ID;	/* optional element */
};

/* klprci-RunTaskResponse: */
struct klprci_RunTaskResponse
{
	long taskId;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-RunTask: */
struct klprci_RunTask
{
	wchar_t *ID;	/* optional element */
	wchar_t *name;	/* optional element */
	param__params settings;	/* required element */
	wchar_t *asyncID;	/* optional element */
	long timeout;	/* required element */
};

/* klprci-RunMethodResponse: */
struct klprci_RunMethodResponse
{
	param__params res;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-RunMethod: */
struct klprci_RunMethod
{
	wchar_t *ID;	/* optional element */
	wchar_t *name;	/* optional element */
	param__params settings;	/* required element */
	long timeout;	/* required element */
};

/* klprci-GetTasksListResponse: */
struct klprci_GetTasksListResponse
{
	struct klprci_tasks_t taskslist;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-GetTasksList: */
struct klprci_GetTasksList
{
	wchar_t *ID;	/* optional element */
};

/* klprci-GetTaskNameResponse: */
struct klprci_GetTaskNameResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
	wchar_t *name;	/* optional element */
};

/* klprci-GetTaskName: */
struct klprci_GetTaskName
{
	wchar_t *ID;	/* optional element */
	long idTask;	/* required element */
};

/* klprci-TaskStopResponse: */
struct klprci_TaskStopResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprci-TaskStop: */
struct klprci_TaskStop
{
	wchar_t *ID;	/* optional element */
	long idTask;	/* required element */
};

/* klprci-TaskSuspendResponse: */
struct klprci_TaskSuspendResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprci-TaskSuspend: */
struct klprci_TaskSuspend
{
	wchar_t *ID;	/* optional element */
	long idTask;	/* required element */
};

/* klprci-TaskResumeResponse: */
struct klprci_TaskResumeResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprci-TaskResume: */
struct klprci_TaskResume
{
	wchar_t *ID;	/* optional element */
	long idTask;	/* required element */
};

/* klprci-GetTaskStateResponse: */
struct klprci_GetTaskStateResponse
{
	long state;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-TaskGetState: */
struct klprci_TaskGetState
{
	wchar_t *ID;	/* optional element */
	long idTask;	/* required element */
};

/* klprci-GetTaskCompletionResponse: */
struct klprci_GetTaskCompletionResponse
{
	long percent;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprci-TaskGetCompletion: */
struct klprci_TaskGetCompletion
{
	wchar_t *ID;	/* optional element */
	long idTask;	/* required element */
};

/* klprci-TaskReloadResponse: */
struct klprci_TaskReloadResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprci-TaskReload: */
struct klprci_TaskReload
{
	wchar_t *ID;	/* optional element */
	long idTask;	/* required element */
	param__params settings;	/* required element */
};

/* KLPRES-RESET-SUBSCRIPTIONS-ITERATOR-RESPONSE: */
struct KLPRES_RESET_SUBSCRIPTIONS_ITERATOR_RESPONSE
{
	wchar_t *sSubscrIteratorId;	/* RPC return element */	/* optional element */
	struct param_error rcError;	/* required element */
};

/* KLPRES-ResetSubscriptionsIterator: */
struct KLPRES_ResetSubscriptionsIterator
{
	wchar_t *sServerObjectID;	/* optional element */
	SOAPComponentId cidFilter;	/* required element */
	long nTimeout;	/* required element */
};

/* KLPRES-RELEASE-SUBSCRIPTIONS-ITERATOR-RESPONSE: */
struct KLPRES_RELEASE_SUBSCRIPTIONS_ITERATOR_RESPONSE
{
	struct param_error rcError;	/* RPC return element */	/* required element */
};

/* KLPRES-ReleaseSubscriptionsIterator: */
struct KLPRES_ReleaseSubscriptionsIterator
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscrIteratorId;	/* optional element */
};

/* KLPRES-GET-NEXT-SUBSCRIPTION-RESPONSE: */
struct KLPRES_GET_NEXT_SUBSCRIPTION_RESPONSE
{
	param__params parSubscription;	/* RPC return element */	/* required element */
	wchar_t *sSubscrId;	/* optional element */
	bool bOk;	/* required element */
	struct param_error rcError;	/* required element */
};

/* KLPRES-GetNextSubscription: */
struct KLPRES_GetNextSubscription
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscrIteratorId;	/* optional element */
};

/* KLPRES-ADD-SUBSCRIPTION-RESPONSE: */
struct KLPRES_ADD_SUBSCRIPTION_RESPONSE
{
	wchar_t *sSubscriptionID;	/* RPC return element */	/* optional element */
	struct param_error rcError;	/* required element */
};

/* KLPRES-AddSubscription: */
struct KLPRES_AddSubscription
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
	bool bPersistent;	/* required element */
	param__params parSubscription;	/* required element */
};

/* KLPRES-UpdateSubscription: */
struct KLPRES_UpdateSubscription
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
	param__params parSubscription;	/* required element */
};

/* KLPRES-PauseSubscription: */
struct KLPRES_PauseSubscription
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-ResumeSubscription: */
struct KLPRES_ResumeSubscription
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-RemoveSubscription: */
struct KLPRES_RemoveSubscription
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-ResetEventsIterator: */
struct KLPRES_ResetEventsIterator
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-SetEventsIterator: */
struct KLPRES_SetEventsIterator
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
	long eventID;	/* required element */
};

/* KLPRES-RESET-EVENTS-ITERATOR-EX-RESPONSE: */
struct KLPRES_RESET_EVENTS_ITERATOR_EX_RESPONSE
{
	wchar_t *sJournalID;	/* RPC return element */	/* optional element */
	struct param_error rcError;	/* required element */
};

/* KLPRES-ResetEventsIteratorEx: */
struct KLPRES_ResetEventsIteratorEx
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-SET-EVENTS-ITERATOR-EX-RESPONSE: */
struct KLPRES_SET_EVENTS_ITERATOR_EX_RESPONSE
{
	wchar_t *sJournalID;	/* RPC return element */	/* optional element */
	struct param_error rcError;	/* required element */
};

/* KLPRES-SetEventsIteratorEx: */
struct KLPRES_SetEventsIteratorEx
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
	long eventID;	/* required element */
};

/* KLPRES-MoveToEventWithIndex: */
struct KLPRES_MoveToEventWithIndex
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
	long nIndex;	/* required element */
};

/* KLPRES-GET-EVENTS-COUNT-RESPONSE: */
struct KLPRES_GET_EVENTS_COUNT_RESPONSE
{
	LONG64 nCount;	/* RPC return element */	/* required element */
	struct param_error rcError;	/* required element */
};

/* KLPRES-GetEventsCount: */
struct KLPRES_GetEventsCount
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-GET-NEXT-EVENTS-CHUNK-RESPONSE: */
struct KLPRES_GET_NEXT_EVENTS_CHUNK_RESPONSE
{
	param__params pparEventsParamsOut;	/* RPC return element */	/* required element */
	struct param_error rcError;	/* required element */
};

/* KLPRES-GetNextEventsChunk: */
struct KLPRES_GetNextEventsChunk
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-ClearEventsList: */
struct KLPRES_ClearEventsList
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-DeleteEvents: */
struct KLPRES_DeleteEvents
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
	long nStopEventID;	/* required element */
};

/* KLPRES-DeleteOneEventByID: */
struct KLPRES_DeleteOneEventByID
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
	long nEventID;	/* required element */
};

/* KLPRES-DeleteRanges: */
struct KLPRES_DeleteRanges
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
	param__params parRanges;	/* required element */
};

/* KLPRES-RemoveExpiredEvents: */
struct KLPRES_RemoveExpiredEvents
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRES-GET-EVENT-STORAGE-FILE-SIZE-RESPONSE: */
struct KLPRES_GET_EVENT_STORAGE_FILE_SIZE_RESPONSE
{
	LONG64 llStorageSize;	/* RPC return element */	/* required element */
	struct param_error rcError;	/* required element */
};

/* KLPRES-GetEventStorageFileSize: */
struct KLPRES_GetEventStorageFileSize
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *sSubscriptionID;	/* optional element */
};

/* KLPRTS-RESET-TASKS-ITERATOR-RESPONSE: */
struct KLPRTS_RESET_TASKS_ITERATOR_RESPONSE
{
	param__params parTaskListParamsOut;	/* RPC return element */	/* required element */
	struct param_error rcError;	/* required element */
};

/* KLPRTS-ResetTasksIterator: */
struct KLPRTS_ResetTasksIterator
{
	wchar_t *sServerObjectID;	/* optional element */
	SOAPComponentId cidFilter;	/* required element */
	wchar_t *sTaskNameFilter;	/* optional element */
};

/* KLPRTS-GET-TASK-BY-ID-RESPONSE: */
struct KLPRTS_GET_TASK_BY_ID_RESPONSE
{
	param__params parTaskParamsOut;	/* RPC return element */	/* required element */
	struct param_error rcError;	/* required element */
};

/* KLPRTS-GetTaskByID: */
struct KLPRTS_GetTaskByID
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *TaskID;	/* optional element */
};

/* KLPRTS-GET-TASK-BY-ID-WPA-RESPONSE: */
struct KLPRTS_GET_TASK_BY_ID_WPA_RESPONSE
{
	param__params parTaskParamsOut;	/* RPC return element */	/* required element */
	struct param_error rcError;	/* required element */
};

/* KLPRTS-GetTaskByIDWithPolicyApplied: */
struct KLPRTS_GetTaskByIDWithPolicyApplied
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *TaskID;	/* optional element */
};

/* KLPRTS-ADD-TASK-RESPONSE: */
struct KLPRTS_ADD_TASK_RESPONSE
{
	wchar_t *TaskID;	/* RPC return element */	/* optional element */
	struct param_error rcError;	/* required element */
};

/* KLPRTS-AddTask: */
struct KLPRTS_AddTask
{
	wchar_t *sServerObjectID;	/* optional element */
	param__params parTaskParams;	/* required element */
};

/* KLPRTS-UpdateTask: */
struct KLPRTS_UpdateTask
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *TaskID;	/* optional element */
	param__params parTaskParams;	/* required element */
};

/* KLPRTS-DeleteTask: */
struct KLPRTS_DeleteTask
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *TaskID;	/* optional element */
};

/* KLPRTS-SetTaskStartEvent: */
struct KLPRTS_SetTaskStartEvent
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *TaskID;	/* optional element */
	SOAPComponentId cidEventFilter;	/* required element */
	wchar_t *sEventType;	/* optional element */
	param__params parBodyFilter;	/* required element */
};

/* KLPRTS-GET-TASK-START-EVENT-RESPONSE: */
struct KLPRTS_GET_TASK_START_EVENT_RESPONSE
{
	SOAPComponentId cidEventFilter;	/* RPC return element */	/* required element */
	wchar_t *sEventType;	/* optional element */
	param__params parBodyFilterOut;	/* required element */
	struct param_error rcError;	/* required element */
};

/* KLPRTS-GetTaskStartEvent: */
struct KLPRTS_GetTaskStartEvent
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *TaskID;	/* optional element */
};

/* KLPRTS-UpdateTask2: */
struct KLPRTS_UpdateTask2
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *TaskID;	/* optional element */
	param__params parTaskParams;	/* required element */
};

/* KLPRTS-ReplaceTask: */
struct KLPRTS_ReplaceTask
{
	wchar_t *sServerObjectID;	/* optional element */
	wchar_t *TaskID;	/* optional element */
	param__params parTaskParams;	/* required element */
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klsssrv_wstrings
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 359; } /* = unique id SOAP_TYPE_klsssrv_wstrings */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klsssrv-CloseResponse: */
struct klsssrv_CloseResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsssrv-Close: */
struct klsssrv_Close
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrProxyId;	/* optional element */
};

/* klsssrv-CreateSettingsStorageResponse: */
struct klsssrv_CreateSettingsStorageResponse
{
	wchar_t *wstrProxyId;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klsssrv-CreateSettingsStorage: */
struct klsssrv_CreateSettingsStorage
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrLocation;	/* optional element */
	long nCreationFlags;	/* required element */
	long nAccessFlags;	/* required element */
	param__params options;	/* required element */
};

/* klsssrv-ReadResponse: */
struct klsssrv_ReadResponse
{
	param__params result;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsssrv-Read: */
struct klsssrv_Read
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrProxyId;	/* optional element */
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrVersion;	/* optional element */
	wchar_t *wstrSection;	/* optional element */
	param__params extra;	/* required element */
};

/* klsssrv-WriteResponse: */
struct klsssrv_WriteResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsssrv-Write: */
struct klsssrv_Write
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrProxyId;	/* optional element */
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrVersion;	/* optional element */
	wchar_t *wstrSection;	/* optional element */
	long nFlags;	/* required element */
	param__params data;	/* required element */
};

/* klsssrv-CreateSectionResponse: */
struct klsssrv_CreateSectionResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsssrv-CreateSection: */
struct klsssrv_CreateSection
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrProxyId;	/* optional element */
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrVersion;	/* optional element */
	wchar_t *wstrSection;	/* optional element */
};

/* klsssrv-DeleteSectionResponse: */
struct klsssrv_DeleteSectionResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsssrv-DeleteSection: */
struct klsssrv_DeleteSection
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrProxyId;	/* optional element */
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrVersion;	/* optional element */
	wchar_t *wstrSection;	/* optional element */
};

/* klsssrv-SetTimeoutResponse: */
struct klsssrv_SetTimeoutResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsssrv-SetTimeout: */
struct klsssrv_SetTimeout
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrProxyId;	/* optional element */
	long lTimeout;	/* required element */
};

/* klsssrv-GetNamesResponse: */
struct klsssrv_GetNamesResponse
{
	klsssrv_wstrings names;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsssrv-GetNames: */
struct klsssrv_GetNames
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrProxyId;	/* optional element */
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrVersion;	/* optional element */
};

/* klsssrv-AttrReadResponse: */
struct klsssrv_AttrReadResponse
{
	param__value value;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsssrv-AttrRead: */
struct klsssrv_AttrRead
{
	wchar_t *wstrIdSSS;	/* optional element */
	wchar_t *wstrProxyId;	/* optional element */
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrVersion;	/* optional element */
	wchar_t *wstrSection;	/* optional element */
	wchar_t *wstrAttr;	/* optional element */
};

/* SOAP encoded array of xsd:unsignedByte schema type: */
class SOAP_CMAC klagent_buffer
{
public:
	unsigned char *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 396; } /* = unique id SOAP_TYPE_klagent_buffer */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klagent-StartTaskStorageTaskResponse: */
struct klagent_StartTaskStorageTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klagent-StartTaskStorageTask: */
struct klagent_StartTaskStorageTask
{
	wchar_t *idTask;	/* optional element */
	wchar_t *luid;	/* optional element */
	long lTimeout;	/* required element */
};

/* klagent-StartComponentExResponse: */
struct klagent_StartComponentExResponse
{
	param__params extraOutParams;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klagent-StartComponentEx: */
struct klagent_StartComponentEx
{
	SOAPComponentId componentId;	/* required element */
	param__params startParams;	/* required element */
	wchar_t *asyncId;	/* optional element */
	long flags;	/* required element */
	long asyncTimeout;	/* required element */
	long timeoutStop;	/* required element */
	long logonType;	/* required element */
	wchar_t *user;	/* optional element */
	wchar_t *domain;	/* optional element */
	wchar_t *password;	/* optional element */
	param__params extraInParams;	/* required element */
};

/* klagent-GetStartedComponentsListResponse: */
struct klagent_GetStartedComponentsListResponse
{
	struct SOAPComponentIdsList componentsListOut;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klagent-GetStartedComponentsList: */
struct klagent_GetStartedComponentsList
{
	SOAPComponentId filter;	/* required element */
};

/* klagent-IsComponentStartedResponse: */
struct klagent_IsComponentStartedResponse
{
	long res;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klagent-IsComponentStarted: */
struct klagent_IsComponentStarted
{
	SOAPComponentId componentId;	/* required element */
};

/* klagent-GetComponentStartParametersResponse: */
struct klagent_GetComponentStartParametersResponse
{
	param__params componentStartParams;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klagent-GetComponentStartParameters: */
struct klagent_GetComponentStartParameters
{
	SOAPComponentId componentId;	/* required element */
};

/* klagent-GetComponentPortResponse: */
struct klagent_GetComponentPortResponse
{
	long nPort;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klagent-GetComponentPort: */
struct klagent_GetComponentPort
{
	SOAPComponentId componentId;	/* required element */
};

/* klevprop-field-order: */
struct klevprop_field_order
{
	wchar_t *wstrFieldName;	/* optional element */
	bool bOrder;	/* required element */
};

/* SOAP encoded array of klevprop-field-order schema type: */
class SOAP_CMAC klevprop_field_order_array
{
public:
	struct klevprop_field_order *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 423; } /* = unique id SOAP_TYPE_klevprop_field_order_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klevprop_wstring_array
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 425; } /* = unique id SOAP_TYPE_klevprop_wstring_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:int schema type: */
class SOAP_CMAC klevprop_int_array
{
public:
	long *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 426; } /* = unique id SOAP_TYPE_klevprop_int_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klevprop-ResetIteratorResponse: */
struct klevprop_ResetIteratorResponse
{
	wchar_t *iteratorId;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klevprop-ResetIterator: */
struct klevprop_ResetIterator
{
	long type;	/* required element */
	param__params paramIteratorDescr;	/* required element */
	klevprop_wstring_array fields;	/* required element */
	klevprop_field_order_array fields_to_order;	/* required element */
	long lifetime;	/* required element */
};

/* klevprop-GetRecordCountResponse: */
struct klevprop_GetRecordCountResponse
{
	long nCount;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevprop-GetRecordCount: */
struct klevprop_GetRecordCount
{
	wchar_t *iteratorId;	/* optional element */
};

/* klevprop-GetRecordRangeResponse: */
struct klevprop_GetRecordRangeResponse
{
	param__params paramProperties;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevprop-GetRecordRange: */
struct klevprop_GetRecordRange
{
	wchar_t *iteratorId;	/* optional element */
	long nStart;	/* required element */
	long nEnd;	/* required element */
};

/* klevprop-FindRecordByFirstCharsResponse: */
struct klevprop_FindRecordByFirstCharsResponse
{
	long nStart;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevprop-FindRecordByFirstChars: */
struct klevprop_FindRecordByFirstChars
{
	wchar_t *iteratorId;	/* optional element */
	wchar_t *wstrFieldToSearch;	/* optional element */
	wchar_t *wstrFirstChars;	/* optional element */
};

/* klevprop-DeletePropertiesResponse: */
struct klevprop_DeletePropertiesResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klevprop-DeleteProperties: */
struct klevprop_DeleteProperties
{
	klevprop_int_array id_array;	/* required element */
};

/* klevprop-InitiateDeleteResponse: */
struct klevprop_InitiateDeleteResponse
{
	param__params paramResponse;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevprop-InitiateDelete: */
struct klevprop_InitiateDelete
{
	param__params paramSettings;	/* required element */
};

/* klevprop-CancelDeleteResponse: */
struct klevprop_CancelDeleteResponse
{
	param__params paramResponse;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevprop-CancelDelete: */
struct klevprop_CancelDelete
{
	param__params paramSettings;	/* required element */
};

/* klevprop-ReleaseIteratorResponse: */
struct klevprop_ReleaseIteratorResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klevprop-ReleaseIterator: */
struct klevprop_ReleaseIterator
{
	wchar_t *iteratorId;	/* optional element */
};

/* klevproc-ProcessResponse: */
struct klevproc_ProcessResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klevproc-Process: */
struct klevproc_Process
{
	param__params parEventInfoArray;	/* required element */
	wchar_t *deliveryId;	/* optional element */
	wchar_t *domain;	/* optional element */
	wchar_t *hostName;	/* optional element */
	wchar_t *agentId;	/* optional element */
};

/* klevpnp-notification-descr-t: */
struct klevpnp_notification_descr_t
{
	wchar_t *wstrProduct;	/* optional element */
	wchar_t *wstrEventType;	/* optional element */
	wchar_t *wstrSMTPServer;	/* optional element */
	long nSMTPPort;	/* required element */
	wchar_t *wstrEMail;	/* optional element */
	bool bUseEmail;	/* required element */
	wchar_t *wstrNetSendParameter;	/* optional element */
	bool bUseNetSend;	/* required element */
	wchar_t *wstrScript;	/* optional element */
	wchar_t *wstrScriptFolder;	/* optional element */
	bool bUseScript;	/* required element */
	long lDaysToStoreEvent;	/* required element */
	wchar_t *wstrMessageTemplate;	/* optional element */
	bool bStoreAtSeverEventLog;	/* required element */
	bool bStoreAtClientEventLog;	/* required element */
	param__params *pParamsBodyFilter;	/* optional element */
	wchar_t *wstrEmailSubject;	/* optional element */
	wchar_t *wstrEmailFrom;	/* optional element */
	bool bDenyDefaults;	/* required element */
};

/* SOAP encoded array of klevpnp-notification-descr-t schema type: */
class SOAP_CMAC klevpnp_notification_descr_array
{
public:
	struct klevpnp_notification_descr_t *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 465; } /* = unique id SOAP_TYPE_klevpnp_notification_descr_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klevpnp-GetDefaultSettingsResponse: */
struct klevpnp_GetDefaultSettingsResponse
{
	param__params paramDefaultSettings;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevpnp-GetDefaultSettings: */
struct klevpnp_GetDefaultSettings
{
	void *_;	/* transient */
};

/* klevpnp-SetDefaultSettingsResponse: */
struct klevpnp_SetDefaultSettingsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klevpnp-SetDefaultSettings: */
struct klevpnp_SetDefaultSettings
{
	param__params paramDefaultSettings;	/* required element */
};

/* klevpnp-TestNotificationResponse: */
struct klevpnp_TestNotificationResponse
{
	param__params paramResponse;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevpnp-TestNotification: */
struct klevpnp_TestNotification
{
	param__params paramSettings;	/* required element */
};

/* klevpnp-SetNotificationLimitsResponse: */
struct klevpnp_SetNotificationLimitsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klevpnp-SetNotificationLimits: */
struct klevpnp_SetNotificationLimits
{
	param__params paramSettings;	/* required element */
};

/* klevpnp-GetNotificationLimitsResponse: */
struct klevpnp_GetNotificationLimitsResponse
{
	param__params paramResponse;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevpnp-GetNotificationLimits: */
struct klevpnp_GetNotificationLimits
{
	void *_;	/* transient */
};

/* klevpnp-GetCommonPropertiesResponse: */
struct klevpnp_GetCommonPropertiesResponse
{
	klevpnp_notification_descr_array notificationDescrArray;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevpnp-GetCommonProperties: */
struct klevpnp_GetCommonProperties
{
	void *_;	/* transient */
};

/* klevpnp-GetGroupPropertiesResponse: */
struct klevpnp_GetGroupPropertiesResponse
{
	klevpnp_notification_descr_array notificationDescrArray;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevpnp-GetGroupProperties: */
struct klevpnp_GetGroupProperties
{
	long nGroupId;	/* required element */
};

/* klevpnp-GetTaskPropertiesResponse: */
struct klevpnp_GetTaskPropertiesResponse
{
	klevpnp_notification_descr_array notificationDescrArray;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klevpnp-GetTaskProperties: */
struct klevpnp_GetTaskProperties
{
	wchar_t *wstrTaskId;	/* optional element */
};

/* klevpnp-SetCommonPropertiesResponse: */
struct klevpnp_SetCommonPropertiesResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klevpnp-SetCommonProperties: */
struct klevpnp_SetCommonProperties
{
	klevpnp_notification_descr_array notificationDescrArray;	/* required element */
};

/* klevpnp-SetGroupPropertiesResponse: */
struct klevpnp_SetGroupPropertiesResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klevpnp-SetGroupProperties: */
struct klevpnp_SetGroupProperties
{
	long nGroupId;	/* required element */
	klevpnp_notification_descr_array notificationDescrArray;	/* required element */
};

/* klevpnp-SetTaskPropertiesResponse: */
struct klevpnp_SetTaskPropertiesResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klevpnp-SetTaskProperties: */
struct klevpnp_SetTaskProperties
{
	wchar_t *wstrTaskId;	/* optional element */
	klevpnp_notification_descr_array notificationDescrArray;	/* required element */
};

/* SOAP encoded array of xsd:wstring schema type: */
struct klnag_StoresList
{
	wchar_t **__ptr;
	int __size;
};

/* SOAP encoded array of xsd:int schema type: */
struct klnag_IndexesList
{
	long *__ptr;
	int __size;
};

/* klnag-RemoveStoresResponse: */
struct klnag_RemoveStoresResponse
{
	struct klnag_IndexesList il;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-RemoveStores: */
struct klnag_RemoveStores
{
	struct klnag_StoresList stores;	/* required element */
};

/* klnag-StartNewIntegrationResponse: */
struct klnag_StartNewIntegrationResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnag-StartNewIntegration: */
struct klnag_StartNewIntegration
{
	wchar_t *hostid;	/* optional element */
};

/* klnag-NotifySSChangeResponse: */
struct klnag_NotifySSChangeResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnag-NotifySSChange: */
struct klnag_NotifySSChange
{
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	long ss_type;	/* required element */
};

/* klnag-OnPingResponse: */
struct klnag_OnPingResponse
{
	param__params response;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-OnPing: */
struct klnag_OnPing
{
	param__params info;	/* required element */
};

/* klnag-WatchdogPingResponse: */
struct klnag_WatchdogPingResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnag-WatchdogPing: */
struct klnag_WatchdogPing
{
};

/* klnag-GetRunTimeInfoResponse: */
struct klnag_GetRunTimeInfoResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-GetRunTimeInfo: */
struct klnag_GetRunTimeInfo
{
	param__params filter;	/* required element */
};

/* klnag-GetStaticInfoResponse: */
struct klnag_GetStaticInfoResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-GetStaticInfo: */
struct klnag_GetStaticInfo
{
	param__params filter;	/* required element */
};

/* klnag-GetStatisticsResponse: */
struct klnag_GetStatisticsResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-GetStatistics: */
struct klnag_GetStatistics
{
	param__params filter;	/* required element */
};

/* klnag-GetInstancePortResponse: */
struct klnag_GetInstancePortResponse
{
	wchar_t *location;	/* RPC return element */	/* optional element */
	long port;	/* required element */
	long type;	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-GetInstancePort: */
struct klnag_GetInstancePort
{
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *component;	/* optional element */
	wchar_t *instance;	/* optional element */
};

/* klnag-StartProductResponse: */
struct klnag_StartProductResponse
{
	param__params results;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-StartProduct: */
struct klnag_StartProduct
{
	wchar_t *productname;	/* optional element */
	wchar_t *productversion;	/* optional element */
	param__params extraparams;	/* required element */
};

/* klnag-StopProductResponse: */
struct klnag_StopProductResponse
{
	param__params results;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-StopProduct: */
struct klnag_StopProduct
{
	wchar_t *productname;	/* optional element */
	wchar_t *productversion;	/* optional element */
	param__params extraparams;	/* required element */
};

/* klnag-OnStartRemoteInstallTaskResponse: */
struct klnag_OnStartRemoteInstallTaskResponse
{
	param__params results;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-OnStartRemoteInstallTask: */
struct klnag_OnStartRemoteInstallTask
{
	long taskId;	/* required element */
};

/* klnag-OnInstallerNotificationResponse: */
struct klnag_OnInstallerNotificationResponse
{
	param__params results;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnag-OnInstallerNotification: */
struct klnag_OnInstallerNotification
{
	param__params info;	/* required element */
};

/* klnag-GetHostPublicKeyResponse: */
struct klnag_GetHostPublicKeyResponse
{
	xsd__base64Binary key;	/* RPC return element */	/* required element */
	wchar_t *hash;	/* optional element */
	struct param_error error;	/* required element */
};

/* klnag-GetHostPublicKey: */
struct klnag_GetHostPublicKey
{
};

/* klnag-PutGlobalKeysResponse: */
struct klnag_PutGlobalKeysResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnag-PutGlobalKeys: */
struct klnag_PutGlobalKeys
{
	xsd__base64Binary key1;	/* required element */
	xsd__base64Binary key2;	/* required element */
};

/* klnag-OnUserForceSyncRequestResponse: */
struct klnag_OnUserForceSyncRequestResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnag-OnUserForceSyncRequest: */
struct klnag_OnUserForceSyncRequest
{
	param__params info;	/* required element */
};

/* Base64 schema type: */
struct xsd__klft_file_chunk_buff
{
	unsigned char *__ptr;
	int __size;
};

/* klft-file-chunk-t: */
struct klft_file_chunk_t
{
	wchar_t *fileName;	/* optional element */
	wchar_t *fileId;	/* optional element */
	ULONG64 CRC;	/* required element */
	ULONG64 startPosInFile;	/* required element */
	ULONG64 fullFileSize;	/* required element */
	struct xsd__klft_file_chunk_buff buff;	/* required element */
};

/* klft-file-info-t: */
struct klft_file_info_t
{
	wchar_t *fileName;	/* optional element */
	bool isDir;	/* required element */
	bool readPermission;	/* required element */
	ULONG64 createTime;	/* required element */
	ULONG64 fullFileSize;	/* required element */
};

/* klftbridge-CreateReceiverResponse: */
struct klftbridge_CreateReceiverResponse
{
	wchar_t *receiverId;	/* RPC return element */	/* optional element */
	LONG64 res;	/* required element */
};

/* klftbridge-CreateReceiver: */
struct klftbridge_CreateReceiver
{
	bool useUpdaterFolder;	/* required element */
};

/* klftbridge-ConnectResponse: */
struct klftbridge_ConnectResponse
{
	LONG64 res;	/* RPC return element */	/* required element */
};

/* klftbridge-Connect: */
struct klftbridge_Connect
{
	wchar_t *receiverId;	/* optional element */
	bool toMasterServer;	/* required element */
};

/* klftbridge-GetFileInfoResponse: */
struct klftbridge_GetFileInfoResponse
{
	struct klft_file_info_t info;	/* RPC return element */	/* required element */
	LONG64 res;	/* required element */
};

/* klftbridge-GetFileInfo: */
struct klftbridge_GetFileInfo
{
	wchar_t *receiverId;	/* optional element */
	wchar_t *fileName;	/* optional element */
};

/* klftbridge-GetNextFileChunkResponse: */
struct klftbridge_GetNextFileChunkResponse
{
	struct klft_file_chunk_t chunk;	/* RPC return element */	/* required element */
	LONG64 res;	/* required element */
};

/* klftbridge-GetNextFileChunk: */
struct klftbridge_GetNextFileChunk
{
	wchar_t *receiverId;	/* optional element */
	wchar_t *fileName;	/* optional element */
	ULONG64 startFilePos;	/* required element */
	ULONG64 neededSize;	/* required element */
};

/* klftbridge-ReleaseReceiverResponse: */
struct klftbridge_ReleaseReceiverResponse
{
	LONG64 res;	/* RPC return element */	/* required element */
};

/* klftbridge-ReleaseReceiver: */
struct klftbridge_ReleaseReceiver
{
	wchar_t *receiverId;	/* optional element */
};

/* SOAPUpdateAgentInfo: */
class SOAP_CMAC SOAPUpdateAgentInfo
{
public:
	wchar_t *connectionName;	/* optional element */
	wchar_t *location;	/* optional element */
	wchar_t *sslLocation;	/* optional element */
	wchar_t *multicastAddr;	/* optional element */
public:
	virtual int soap_type() const { return 601; } /* = unique id SOAP_TYPE_SOAPUpdateAgentInfo */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of SOAPUpdateAgentInfo schema type: */
struct SOAPUpdateAgentInfosList
{
	SOAPUpdateAgentInfo *__ptr;
	int __size;
};

/* klft-InitiateFileUploadResponse: */
struct klft_InitiateFileUploadResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klft-InitiateFileUpload: */
struct klft_InitiateFileUpload
{
	wchar_t *fileName;	/* optional element */
	wchar_t *fileId;	/* optional element */
	wchar_t *description;	/* optional element */
	ULONG64 dirFlag;	/* required element */
	ULONG64 fullFileSize;	/* required element */
	wchar_t *serverComponent;	/* optional element */
	wchar_t *remoteClientName;	/* optional element */
	ULONG64 uploadDelay;	/* required element */
	ULONG64 nextChunkDelay;	/* required element */
	long fileType;	/* required element */
	ULONG64 forUpdateAgentFlag;	/* required element */
	struct SOAPUpdateAgentInfosList *updatesAgents;	/* optional element */
};

/* klft-RegisterUpdateAgentResponse: */
struct klft_RegisterUpdateAgentResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klft-RegisterUpdateAgent: */
struct klft_RegisterUpdateAgent
{
	wchar_t *strAddress;	/* optional element */
	wchar_t *strNoSSLAddress;	/* optional element */
	wchar_t *strMulticastIp;	/* optional element */
	param__params pParOptions;	/* required element */
};

/* klft-InitiateServerFileUploadResponse: */
struct klft_InitiateServerFileUploadResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klft-InitiateServerFileUpload: */
struct klft_InitiateServerFileUpload
{
	wchar_t *fileId;	/* optional element */
	ULONG64 dirFlag;	/* required element */
	ULONG64 lifeTime;	/* required element */
	ULONG64 fullFileSize;	/* required element */
};

/* klft-CancelServerFileUploadResponse: */
struct klft_CancelServerFileUploadResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klft-CancelServerFileUpload: */
struct klft_CancelServerFileUpload
{
	wchar_t *fileId;	/* optional element */
};

/* klft-PutNextFileChunkResponse: */
struct klft_PutNextFileChunkResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klft-PutNextFileChunk: */
struct klft_PutNextFileChunk
{
	wchar_t *fileId;	/* optional element */
	struct klft_file_chunk_t chunk;	/* required element */
};

/* SOAPFolderFileInfo: */
class SOAP_CMAC SOAPFolderFileInfo
{
public:
	unsigned long CRC;	/* required element */
	char *FileNameHash;	/* optional element */
public:
	virtual int soap_type() const { return 625; } /* = unique id SOAP_TYPE_SOAPFolderFileInfo */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of SOAPFolderFileInfo schema type: */
struct SOAPFilesInfoList
{
	SOAPFolderFileInfo *__ptr;
	int __size;
};

/* SOAP encoded array of xsd:wstring schema type: */
struct SOAPSyncFolderSubfoldersList
{
	wchar_t **__ptr;
	int __size;
};

/* SOAPSyncFolderOptions: */
struct SOAPSyncFolderOptions
{
	struct SOAPSyncFolderSubfoldersList subfoldersList;	/* required element */
};

/* SOAP encoded array of xsd:string schema type: */
struct SOAPFolderHashList
{
	char **__ptr;
	int __size;
};

/* klft-GetSyncFolderDiffResponse: */
struct klft_GetSyncFolderDiffResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
	wchar_t *syncFolderFileId;	/* optional element */
	bool folderIsEqual;	/* required element */
	struct SOAPFilesInfoList *diffFilesList;	/* optional element */
	struct SOAPFolderHashList *folderHashList;	/* optional element */
};

/* klft-GetSyncFolderDiff: */
struct klft_GetSyncFolderDiff
{
	wchar_t *fileDescription;	/* optional element */
	struct SOAPFilesInfoList *clientFilesList;	/* optional element */
	struct SOAPSyncFolderOptions *subfoldersOptions;	/* optional element */
};

/* klft-GetSyncFolderFileInfoResponse: */
struct klft_GetSyncFolderFileInfoResponse
{
	struct klft_file_info_t info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klft-GetSyncFolderFileInfo: */
struct klft_GetSyncFolderFileInfo
{
	wchar_t *syncFolderFileId;	/* optional element */
	wchar_t *folderFileName;	/* optional element */
};

/* klft-GetSyncFolderFileChunkResponse: */
struct klft_GetSyncFolderFileChunkResponse
{
	struct klft_file_chunk_t chunk;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klft-GetSyncFolderFileChunk: */
struct klft_GetSyncFolderFileChunk
{
	wchar_t *syncFolderFileId;	/* optional element */
	wchar_t *folderFileName;	/* optional element */
	ULONG64 startFilePos;	/* required element */
	ULONG64 neededSize;	/* required element */
};

/* sync-putDataResponse: */
struct sync_putDataResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* sync-putData: */
struct sync_putData
{
	wchar_t *wstrID;	/* optional element */
	param__params data;	/* required element */
};

/* sync-CallResponse: */
struct sync_CallResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
	param__params parOutputData;	/* required element */
};

/* sync-Call: */
struct sync_Call
{
	wchar_t *wstrIDTo;	/* optional element */
	wchar_t *wstrIDFrom;	/* optional element */
	param__params parInputData;	/* required element */
};

/* sync-startResponse: */
struct sync_startResponse
{
	wchar_t *wstrIDTo;	/* RPC return element */	/* optional element */
	param__params parOutputData;	/* required element */
	struct param_error error;	/* required element */
};

/* sync-start: */
struct sync_start
{
	wchar_t *wstrType;	/* optional element */
	wchar_t *wstrIDFrom;	/* optional element */
	param__params parOptions;	/* required element */
};

/* klhst-domain-info: */
struct klhst_domain_info
{
	wchar_t *wstrName;	/* optional element */
	long nType;	/* required element */
};

/* SOAP encoded array of klhst-domain-info schema type: */
class SOAP_CMAC klhst_domains_info
{
public:
	struct klhst_domain_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 660; } /* = unique id SOAP_TYPE_klhst_domains_info */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klhst-host-info: */
struct klhst_host_info
{
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrWinName;	/* optional element */
	long nType;	/* required element */
};

/* SOAP encoded array of klhst-host-info schema type: */
class SOAP_CMAC klhst_hosts_info
{
public:
	struct klhst_host_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 663; } /* = unique id SOAP_TYPE_klhst_hosts_info */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klhst_wstrings
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 665; } /* = unique id SOAP_TYPE_klhst_wstrings */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klhst-field-order: */
struct klhst_field_order
{
	wchar_t *wstrFieldName;	/* optional element */
	bool bOrder;	/* required element */
};

/* SOAP encoded array of klhst-field-order schema type: */
class SOAP_CMAC klhst_field_order_array
{
public:
	struct klhst_field_order *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 667; } /* = unique id SOAP_TYPE_klhst_field_order_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klhst-UseKeepConnectionResponse: */
struct klhst_UseKeepConnectionResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-UseKeepConnection: */
struct klhst_UseKeepConnection
{
	wchar_t *host;	/* optional element */
};

/* klhst-AddHostsResponse: */
struct klhst_AddHostsResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-AddHosts: */
struct klhst_AddHosts
{
	param__params info;	/* required element */
};

/* klhst-GetHostTasksResponse: */
struct klhst_GetHostTasksResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-GetHostTasks: */
struct klhst_GetHostTasks
{
	wchar_t *host;	/* optional element */
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	long lifetime;	/* required element */
};

/* klhst-GetDomainsResponse: */
struct klhst_GetDomainsResponse
{
	klhst_domains_info units;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-GetDomains: */
struct klhst_GetDomains
{
	void *_;	/* transient */
};

/* klhst-GetDomainHostsResponse: */
struct klhst_GetDomainHostsResponse
{
	klhst_hosts_info units;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-GetDomainHosts: */
struct klhst_GetDomainHosts
{
	wchar_t *domain;	/* optional element */
};

/* klhst-GetHostInfoResponse: */
struct klhst_GetHostInfoResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-GetHostInfo: */
struct klhst_GetHostInfo
{
	wchar_t *name;	/* optional element */
	klhst_wstrings fields;	/* required element */
};

/* klhst-AddDomainResponse: */
struct klhst_AddDomainResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-AddDomain: */
struct klhst_AddDomain
{
	wchar_t *domain;	/* optional element */
	long type;	/* required element */
};

/* klhst-DelDomainResponse: */
struct klhst_DelDomainResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-DelDomain: */
struct klhst_DelDomain
{
	wchar_t *domain;	/* optional element */
};

/* klhst-AddHostResponse: */
struct klhst_AddHostResponse
{
	wchar_t *name;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klhst-AddHost: */
struct klhst_AddHost
{
	param__params info;	/* required element */
};

/* klhst-DelHostResponse: */
struct klhst_DelHostResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-DelHost: */
struct klhst_DelHost
{
	wchar_t *name;	/* optional element */
};

/* klhst-UpdateHostResponse: */
struct klhst_UpdateHostResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-UpdateHost: */
struct klhst_UpdateHost
{
	wchar_t *name;	/* optional element */
	param__params info;	/* required element */
};

/* klhst-product: */
struct klhst_product
{
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrVersion;	/* optional element */
};

/* SOAP encoded array of klhst-product schema type: */
class SOAP_CMAC klhst_products
{
public:
	struct klhst_product *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 714; } /* = unique id SOAP_TYPE_klhst_products */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klhst-GetHostProductsResponse: */
struct klhst_GetHostProductsResponse
{
	param__params products;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-GetHostProducts: */
struct klhst_GetHostProducts
{
	wchar_t *name;	/* optional element */
};

/* klhst-SS-ReadResponse: */
struct klhst_SS_ReadResponse
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-SS-Read: */
struct klhst_SS_Read
{
	wchar_t *name;	/* optional element */
	wchar_t *type;	/* optional element */
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	long timeout;	/* required element */
};

/* klhst-SS-WriteResponse: */
struct klhst_SS_WriteResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-SS-Write: */
struct klhst_SS_Write
{
	wchar_t *name;	/* optional element */
	wchar_t *type;	/* optional element */
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	long flags;	/* required element */
	param__params data;	/* required element */
	long timeout;	/* required element */
};

/* klhst-SS-CreateSectionResponse: */
struct klhst_SS_CreateSectionResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-SS-CreateSection: */
struct klhst_SS_CreateSection
{
	wchar_t *name;	/* optional element */
	wchar_t *type;	/* optional element */
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	long timeout;	/* required element */
};

/* klhst-SS-DeleteSectionResponse: */
struct klhst_SS_DeleteSectionResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-SS-DeleteSection: */
struct klhst_SS_DeleteSection
{
	wchar_t *name;	/* optional element */
	wchar_t *type;	/* optional element */
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	long timeout;	/* required element */
};

/* klhst-SS-GetNamesResponse: */
struct klhst_SS_GetNamesResponse
{
	klhst_wstrings names;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-SS-GetNames: */
struct klhst_SS_GetNames
{
	wchar_t *name;	/* optional element */
	wchar_t *type;	/* optional element */
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	long timeout;	/* required element */
};

/* klhst-CallGetRunTimeInfoResponse: */
struct klhst_CallGetRunTimeInfoResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-CallGetRunTimeInfo: */
struct klhst_CallGetRunTimeInfo
{
	wchar_t *name;	/* optional element */
	param__params filter;	/* required element */
};

/* klhst-CallGetStaticInfoResponse: */
struct klhst_CallGetStaticInfoResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-CallGetStaticInfo: */
struct klhst_CallGetStaticInfo
{
	wchar_t *name;	/* optional element */
	param__params filter;	/* required element */
};

/* klhst-CallGetStatisticsResponse: */
struct klhst_CallGetStatisticsResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-CallGetStatistics: */
struct klhst_CallGetStatistics
{
	wchar_t *name;	/* optional element */
	param__params filter;	/* required element */
};

/* klhst-CallGetInstancePortResponse: */
struct klhst_CallGetInstancePortResponse
{
	long port;	/* RPC return element */	/* required element */
	wchar_t *location;	/* optional element */
	struct param_error error;	/* required element */
};

/* klhst-CallGetInstancePort: */
struct klhst_CallGetInstancePort
{
	wchar_t *name;	/* optional element */
	wchar_t *product;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *component;	/* optional element */
	wchar_t *instance;	/* optional element */
};

/* klhst-NotifyTaskResponse: */
struct klhst_NotifyTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-NotifyTask: */
struct klhst_NotifyTask
{
	wchar_t *name;	/* optional element */
};

/* klupdt-GetUpdatesInfoResponse: */
struct klupdt_GetUpdatesInfoResponse
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klupdt-GetUpdatesInfo: */
struct klupdt_GetUpdatesInfo
{
	param__params filter;	/* required element */
};

/* klupdt-SetBundleOptionsResponse: */
struct klupdt_SetBundleOptionsResponse
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klupdt-SetBundleOptions: */
struct klupdt_SetBundleOptions
{
	param__params paramOptions;	/* required element */
};

/* klupdt-SetGeneralOptionsResponse: */
struct klupdt_SetGeneralOptionsResponse
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klupdt-SetGeneralOptions: */
struct klupdt_SetGeneralOptions
{
	param__params paramOptions;	/* required element */
};

/* klupdt-GetGeneralOptionsResponse: */
struct klupdt_GetGeneralOptionsResponse
{
	param__params paramOptions;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klupdt-GetGeneralOptions: */
struct klupdt_GetGeneralOptions
{
	param__params data;	/* required element */
};

/* klupdt-GetAvailableUpdatesInfoResponse: */
struct klupdt_GetAvailableUpdatesInfoResponse
{
	param__params parAvailableUpdateComps;	/* RPC return element */	/* required element */
	param__params parAvailableUpdateApps;	/* required element */
	struct param_error error;	/* required element */
};

/* klupdt-GetAvailableUpdatesInfo: */
struct klupdt_GetAvailableUpdatesInfo
{
	wchar_t *wstrLocalization;	/* optional element */
};

/* klupdt-GetRequiedUpdatesInfoResponse: */
struct klupdt_GetRequiedUpdatesInfoResponse
{
	param__params parInstalledComps;	/* RPC return element */	/* required element */
	param__params parInstalledApps;	/* required element */
	struct param_error error;	/* required element */
};

/* klupdt-GetRequiedUpdatesInfo: */
struct klupdt_GetRequiedUpdatesInfo
{
	int nDummy;	/* required element */
};

/* kllicsrv-GetKeysInfoResponse: */
struct kllicsrv_GetKeysInfoResponse
{
	wchar_t *it;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* kllicsrv-GetKeysInfo: */
struct kllicsrv_GetKeysInfo
{
	klhst_wstrings fields;	/* required element */
	wchar_t *filter;	/* optional element */
	long lTimeout;	/* required element */
	param__params options;	/* required element */
};

/* kllicsrv-GetKeyInfoResponse: */
struct kllicsrv_GetKeyInfoResponse
{
	wchar_t *it;	/* RPC return element */	/* optional element */
	long nCount;	/* required element */
	struct param_error error;	/* required element */
};

/* kllicsrv-GetKeyInfo: */
struct kllicsrv_GetKeyInfo
{
	klhst_wstrings fields;	/* required element */
	klhst_field_order_array fieldsToOrder;	/* required element */
	wchar_t *serial;	/* optional element */
	long lTimeout;	/* required element */
};

/* kllicsrv-DeleteKeyInfoResponse: */
struct kllicsrv_DeleteKeyInfoResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kllicsrv-DeleteKeyInfo: */
struct kllicsrv_DeleteKeyInfo
{
	wchar_t *serial;	/* optional element */
};

/* kllicsrv-InstallKeyResponse: */
struct kllicsrv_InstallKeyResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kllicsrv-InstallKey: */
struct kllicsrv_InstallKey
{
	param__params keyinfo;	/* required element */
};

/* kllicsrv-UninstallKeyResponse: */
struct kllicsrv_UninstallKeyResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kllicsrv-UninstallKey: */
struct kllicsrv_UninstallKey
{
	param__params keyinfo;	/* required element */
};

/* kllicsrv-GetKeyDataResponse: */
struct kllicsrv_GetKeyDataResponse
{
	param__params keydata;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* kllicsrv-GetKeyData: */
struct kllicsrv_GetKeyData
{
	param__params indata;	/* required element */
};

/* kllicsrv-AdjustFlexibleKeyResponse: */
struct kllicsrv_AdjustFlexibleKeyResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kllicsrv-AdjustFlexibleKey: */
struct kllicsrv_AdjustFlexibleKey
{
	param__params keyinfo;	/* required element */
};

/* kllicsrv-EnumKeysResponse: */
struct kllicsrv_EnumKeysResponse
{
	wchar_t *it;	/* RPC return element */	/* optional element */
	long nCount;	/* required element */
	struct param_error error;	/* required element */
};

/* kllicsrv-EnumKeys: */
struct kllicsrv_EnumKeys
{
	klhst_wstrings fields;	/* required element */
	klhst_field_order_array fieldsToOrder;	/* required element */
	param__params options;	/* required element */
	long lTimeout;	/* required element */
};

/* klhst-MoveRulesAddRuleResponse: */
struct klhst_MoveRulesAddRuleResponse
{
	long nRule;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-MoveRulesAddRule: */
struct klhst_MoveRulesAddRule
{
	param__params ruleinfo;	/* required element */
};

/* klhst-MoveRulesUpdateRuleResponse: */
struct klhst_MoveRulesUpdateRuleResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-MoveRulesUpdateRule: */
struct klhst_MoveRulesUpdateRule
{
	long nRule;	/* required element */
	param__params ruleinfo;	/* required element */
};

/* klhst-MoveRulesDeleteRuleResponse: */
struct klhst_MoveRulesDeleteRuleResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-MoveRulesDeleteRule: */
struct klhst_MoveRulesDeleteRule
{
	long nRule;	/* required element */
};

/* SOAP encoded array of xsd:int schema type: */
class SOAP_CMAC klhst_rule_order_array
{
public:
	long *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 828; } /* = unique id SOAP_TYPE_klhst_rule_order_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klhst-MoveRulesSetRulesOrderResponse: */
struct klhst_MoveRulesSetRulesOrderResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klhst-MoveRulesSetRulesOrder: */
struct klhst_MoveRulesSetRulesOrder
{
	klhst_rule_order_array arr;	/* required element */
};

/* klhst-MoveRulesGetRuleResponse: */
struct klhst_MoveRulesGetRuleResponse
{
	param__params ruleinfo;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-MoveRulesGetRule: */
struct klhst_MoveRulesGetRule
{
	long nRule;	/* required element */
};

/* klhst-MoveRulesGetRulesResponse: */
struct klhst_MoveRulesGetRulesResponse
{
	param__params rulesinfo;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klhst-MoveRulesGetRules: */
struct klhst_MoveRulesGetRules
{
	klhst_wstrings fields;	/* required element */
};

/* kldpns-AddDiapasonResponse: */
struct kldpns_AddDiapasonResponse
{
	param__params InvalidIntervals;	/* RPC return element */	/* required element */
	long id;	/* required element */
	struct param_error error;	/* required element */
};

/* kldpns-AddDiapason: */
struct kldpns_AddDiapason
{
	param__params data;	/* required element */
};

/* kldpns-UpdateDiapasonResponse: */
struct kldpns_UpdateDiapasonResponse
{
	param__params InvalidIntervals;	/* RPC return element */	/* required element */
	bool bResult;	/* required element */
	struct param_error error;	/* required element */
};

/* kldpns-UpdateDiapason: */
struct kldpns_UpdateDiapason
{
	long id;	/* required element */
	param__params data;	/* required element */
};

/* kldpns-RemoveDiapasonResponse: */
struct kldpns_RemoveDiapasonResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kldpns-RemoveDiapason: */
struct kldpns_RemoveDiapason
{
	long id;	/* required element */
};

/* kldpns-GetDiapasonsResponse: */
struct kldpns_GetDiapasonsResponse
{
	wchar_t *it;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* kldpns-GetDiapasons: */
struct kldpns_GetDiapasons
{
	klhst_wstrings fields;	/* required element */
	long lTimeout;	/* required element */
};

/* kldpns-GetDiapasonResponse: */
struct kldpns_GetDiapasonResponse
{
	param__params result;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* kldpns-GetDiapason: */
struct kldpns_GetDiapason
{
	long id;	/* required element */
	klhst_wstrings fields;	/* required element */
};

/* kldpns-NotifyDpnsTaskResponse: */
struct kldpns_NotifyDpnsTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kldpns-NotifyDpnsTask: */
struct kldpns_NotifyDpnsTask
{
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klgrp_wstrings
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 865; } /* = unique id SOAP_TYPE_klgrp_wstrings */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klgrp-field-order: */
struct klgrp_field_order
{
	wchar_t *wstrFieldName;	/* optional element */
	bool bOrder;	/* required element */
};

/* SOAP encoded array of klgrp-field-order schema type: */
class SOAP_CMAC klgrp_field_order_array
{
public:
	struct klgrp_field_order *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 867; } /* = unique id SOAP_TYPE_klgrp_field_order_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klgrp-GetGroupsResponse: */
struct klgrp_GetGroupsResponse
{
	param__params groups;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgrp-GetGroups: */
struct klgrp_GetGroups
{
	long parent;	/* required element */
	long depth;	/* required element */
};

/* klgrp-GetUnassignedGroupIdResponse: */
struct klgrp_GetUnassignedGroupIdResponse
{
	long id;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgrp-GetUnassignedGroupId: */
struct klgrp_GetUnassignedGroupId
{
	void *_;	/* transient */
};

/* klgrp-GetGroupInfoResponse: */
struct klgrp_GetGroupInfoResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgrp-GetGroupInfo: */
struct klgrp_GetGroupInfo
{
	long id;	/* required element */
	param__params info;	/* required element */
};

/* klgrp-AddGroupResponse: */
struct klgrp_AddGroupResponse
{
	long id;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgrp-AddGroup: */
struct klgrp_AddGroup
{
	param__params info;	/* required element */
};

/* klgrp-DelGroupResponse: */
struct klgrp_DelGroupResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgrp-DelGroup: */
struct klgrp_DelGroup
{
	long id;	/* required element */
};

/* klgrp-UpdateGroupResponse: */
struct klgrp_UpdateGroupResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgrp-UpdateGroup: */
struct klgrp_UpdateGroup
{
	long id;	/* required element */
	param__params info;	/* required element */
};

/* klgrp-SetGroupHostsResponse: */
struct klgrp_SetGroupHostsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgrp-SetGroupHosts: */
struct klgrp_SetGroupHosts
{
	long id;	/* required element */
	param__params hosts;	/* required element */
};

/* klgrp-RemoveHostsResponse: */
struct klgrp_RemoveHostsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgrp-RemoveHosts: */
struct klgrp_RemoveHosts
{
	klgrp_wstrings hosts;	/* required element */
};

/* klgrp-ResetGroupHostsIteratorResponse: */
struct klgrp_ResetGroupHostsIteratorResponse
{
	wchar_t *it;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klgrp-ResetGroupHostsIterator: */
struct klgrp_ResetGroupHostsIterator
{
	long id;	/* required element */
	klgrp_wstrings fields;	/* required element */
	long lifetime;	/* required element */
};

/* klgrp-ReleaseGroupHostsIteratorResponse: */
struct klgrp_ReleaseGroupHostsIteratorResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgrp-ReleaseGroupHostsIterator: */
struct klgrp_ReleaseGroupHostsIterator
{
	wchar_t *it;	/* optional element */
};

/* klgrp-GetNextGroupHostResponse: */
struct klgrp_GetNextGroupHostResponse
{
	param__params hosts;	/* RPC return element */	/* required element */
	long nCount;	/* required element */
	bool bEOF;	/* required element */
	struct param_error error;	/* required element */
};

/* klgrp-GetNextGroupHost: */
struct klgrp_GetNextGroupHost
{
	wchar_t *it;	/* optional element */
	long nCount;	/* required element */
};

/* klgrp-FindHostsResponse: */
struct klgrp_FindHostsResponse
{
	long nCount;	/* RPC return element */	/* required element */
	wchar_t *wstrIterator;	/* optional element */
	struct param_error error;	/* required element */
};

/* klgrp-FindHosts: */
struct klgrp_FindHosts
{
	wchar_t *wstrFilter;	/* optional element */
	klgrp_wstrings arrFields;	/* required element */
	klgrp_field_order_array arrFieldsToOrder;	/* required element */
	param__params params;	/* required element */
	long lTimeout;	/* required element */
	wchar_t *wstrRequestId;	/* optional element */
};

/* klgrp-FindHostsCancelResponse: */
struct klgrp_FindHostsCancelResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgrp-FindHostsCancel: */
struct klgrp_FindHostsCancel
{
	wchar_t *wstrRequestId;	/* optional element */
};

/* klgrp-FindHostsGetAccessorResponse: */
struct klgrp_FindHostsGetAccessorResponse
{
	long nCount;	/* RPC return element */	/* required element */
	wchar_t *wstrAccessor;	/* optional element */
	param__params parFailedSlaves;	/* required element */
	struct param_error error;	/* required element */
};

/* klgrp-FindHostsGetAccessor: */
struct klgrp_FindHostsGetAccessor
{
	wchar_t *wstrRequestId;	/* optional element */
};

/* klgrp-GetSuperGroupIdResponse: */
struct klgrp_GetSuperGroupIdResponse
{
	long id;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgrp-GetSuperGroupId: */
struct klgrp_GetSuperGroupId
{
	void *_;	/* transient */
};

/* klgrp-FindGroupsResponse: */
struct klgrp_FindGroupsResponse
{
	long nCount;	/* RPC return element */	/* required element */
	wchar_t *wstrIterator;	/* optional element */
	struct param_error error;	/* required element */
};

/* klgrp-FindGroups: */
struct klgrp_FindGroups
{
	wchar_t *wstrFilter;	/* optional element */
	klgrp_wstrings arrFields;	/* required element */
	klgrp_field_order_array arrFieldsToOrder;	/* required element */
	param__params params;	/* required element */
	long lTimeout;	/* required element */
	wchar_t *wstrRequestId;	/* optional element */
};

/* klpol-policy-common-data: */
struct klpol_policy_common_data
{
	long policyId;	/* required element */
	wchar_t *wstrDisplayName;	/* optional element */
	wchar_t *wstrProductName;	/* optional element */
	wchar_t *wstrProductVersion;	/* optional element */
	long tCreated;	/* required element */
	long tModified;	/* required element */
	bool bInherited;	/* required element */
	long nGroupSyncId;	/* required element */
	bool bActive;	/* required element */
	long dwFlags;	/* required element */
	bool bRoaming;	/* required element */
	bool bAcceptParent;	/* required element */
	bool bForceDistrib2Children;	/* required element */
	bool bForced;	/* required element */
	long nGroup;	/* required element */
};

/* SOAP encoded array of klpol-policy-common-data schema type: */
class SOAP_CMAC klpol_policies
{
public:
	struct klpol_policy_common_data *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 934; } /* = unique id SOAP_TYPE_klpol_policies */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:int schema type: */
class SOAP_CMAC klpol_polici_ids
{
public:
	long *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 936; } /* = unique id SOAP_TYPE_klpol_polici_ids */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klpol-GetPolicyCommonDataResponse: */
struct klpol_GetPolicyCommonDataResponse
{
	klpol_policies policies;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-GetPolicyCommonData: */
struct klpol_GetPolicyCommonData
{
	long nGroupId;	/* required element */
	long nExpectedServerVersion;	/* required element */
};

/* klpol-GetAllAcivePoliciesForGroupResponse: */
struct klpol_GetAllAcivePoliciesForGroupResponse
{
	klpol_policies policies;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-GetAllAcivePoliciesForGroup: */
struct klpol_GetAllAcivePoliciesForGroup
{
	long nGroupId;	/* required element */
};

/* klpol-GetSinglePolicyCommonDataResponse: */
struct klpol_GetSinglePolicyCommonDataResponse
{
	struct klpol_policy_common_data policy;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-GetSinglePolicyCommonData: */
struct klpol_GetSinglePolicyCommonData
{
	long policyId;	/* required element */
};

/* klpol-AddPolicyResponse: */
struct klpol_AddPolicyResponse
{
	long policyId;	/* RPC return element */	/* required element */
	struct klpol_policy_common_data policy;	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-AddPolicy: */
struct klpol_AddPolicy
{
	long nGroupId;	/* required element */
	struct klpol_policy_common_data policy;	/* required element */
};

/* klpol-UpdatePolicyCommonDataResponse: */
struct klpol_UpdatePolicyCommonDataResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpol-UpdatePolicyCommonData: */
struct klpol_UpdatePolicyCommonData
{
	struct klpol_policy_common_data policy;	/* required element */
};

/* klpol-DeletePolicyResponse: */
struct klpol_DeletePolicyResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpol-DeletePolicy: */
struct klpol_DeletePolicy
{
	long policyId;	/* required element */
};

/* klpol-CopyPolicyExResponse: */
struct klpol_CopyPolicyExResponse
{
	long policyId;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-CopyPolicyEx: */
struct klpol_CopyPolicyEx
{
	long policyId;	/* required element */
	long nNewGroupId;	/* required element */
	bool bDeleteOrigin;	/* required element */
};

/* klpol-GetSSProxyIDResponse: */
struct klpol_GetSSProxyIDResponse
{
	wchar_t *storage_descr;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klpol-GetSSProxyID: */
struct klpol_GetSSProxyID
{
	long policyId;	/* required element */
	long nTimeout;	/* required element */
};

/* klpol-ModifySettingsResponse: */
struct klpol_ModifySettingsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpol-ModifySettings: */
struct klpol_ModifySettings
{
	long policyId;	/* required element */
};

/* klpol-MakePolicyActiveResponse: */
struct klpol_MakePolicyActiveResponse
{
	bool bResult;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-MakePolicyActive: */
struct klpol_MakePolicyActive
{
	long policyId;	/* required element */
	bool bActive;	/* required element */
};

/* klpol-MakePolicyRoamingResponse: */
struct klpol_MakePolicyRoamingResponse
{
	bool bResult;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-MakePolicyRoaming: */
struct klpol_MakePolicyRoaming
{
	long policyId;	/* required element */
};

/* klpol-GetPoliciesForGroupResponse: */
struct klpol_GetPoliciesForGroupResponse
{
	klpol_policies policies;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-GetPoliciesForGroup: */
struct klpol_GetPoliciesForGroup
{
	long nGroupId;	/* required element */
	long nExpectedServerVersion;	/* required element */
};

/* klpol-CopyOrMovePolicyResponse: */
struct klpol_CopyOrMovePolicyResponse
{
	long policyId;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-CopyOrMovePolicy: */
struct klpol_CopyOrMovePolicy
{
	long policyId;	/* required element */
	long nNewGroupId;	/* required element */
	bool bDeleteOrigin;	/* required element */
	struct klpol_policy_common_data data;	/* required element */
};

/* klpol-SetOutbreakPolicyResponse: */
struct klpol_SetOutbreakPolicyResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpol-SetOutbreakPolicy: */
struct klpol_SetOutbreakPolicy
{
	klpol_polici_ids vec_policies;	/* required element */
};

/* klpol-GetOutbreakPolicyResponse: */
struct klpol_GetOutbreakPolicyResponse
{
	klpol_polici_ids vec_policies;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-GetOutbreakPolicy: */
struct klpol_GetOutbreakPolicy
{
};

/* klpol-SetOutbreakPolicy2Response: */
struct klpol_SetOutbreakPolicy2Response
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpol-SetOutbreakPolicy2: */
struct klpol_SetOutbreakPolicy2
{
	param__params data;	/* required element */
};

/* klpol-GetOutbreakPolicy2Response: */
struct klpol_GetOutbreakPolicy2Response
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpol-GetOutbreakPolicy2: */
struct klpol_GetOutbreakPolicy2
{
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klprssp_wstrings
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1005; } /* = unique id SOAP_TYPE_klprssp_wstrings */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klprssp-SS-ReadResponse: */
struct klprssp_SS_ReadResponse
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprssp-SS-Read: */
struct klprssp_SS_Read
{
	wchar_t *storage_descr;	/* optional element */
	wchar_t *name;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
};

/* klprssp-SS-WriteResponse: */
struct klprssp_SS_WriteResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprssp-SS-Write: */
struct klprssp_SS_Write
{
	wchar_t *storage_descr;	/* optional element */
	wchar_t *name;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	param__params data;	/* required element */
	long operation_type;	/* required element */
};

/* klprssp-SS-SectionOperationResponse: */
struct klprssp_SS_SectionOperationResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprssp-SS-SectionOperation: */
struct klprssp_SS_SectionOperation
{
	wchar_t *storage_descr;	/* optional element */
	wchar_t *name;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	long operation_type;	/* required element */
};

/* klprssp-SS-GetNamesResponse: */
struct klprssp_SS_GetNamesResponse
{
	klprssp_wstrings names;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klprssp-SS-GetNames: */
struct klprssp_SS_GetNames
{
	wchar_t *storage_descr;	/* optional element */
	wchar_t *name;	/* optional element */
	wchar_t *version;	/* optional element */
};

/* klprssp-SS-ApplyChangesResponse: */
struct klprssp_SS_ApplyChangesResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprssp-SS-ApplyChanges: */
struct klprssp_SS_ApplyChanges
{
	wchar_t *storage_descr;	/* optional element */
};

/* klprssp-ReleaseSSResponse: */
struct klprssp_ReleaseSSResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klprssp-ReleaseSS: */
struct klprssp_ReleaseSS
{
	wchar_t *storage_descr;	/* optional element */
};

/* adhst-GetChildComputersResponse: */
struct adhst_GetChildComputersResponse
{
	wchar_t *it;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* adhst-GetChildComputers: */
struct adhst_GetChildComputers
{
	long idOU;	/* required element */
	klhst_wstrings fields;	/* required element */
	long lTimeout;	/* required element */
};

/* adhst-GetChildOUsResponse: */
struct adhst_GetChildOUsResponse
{
	wchar_t *it;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* adhst-GetChildOUs: */
struct adhst_GetChildOUs
{
	long idOU;	/* required element */
	klhst_wstrings fields;	/* required element */
	long lTimeout;	/* required element */
};

/* adhst-GetOUResponse: */
struct adhst_GetOUResponse
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* adhst-GetOU: */
struct adhst_GetOU
{
	long idOU;	/* required element */
	klhst_wstrings fields;	/* required element */
};

/* adhst-UpdateOUResponse: */
struct adhst_UpdateOUResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* adhst-UpdateOU: */
struct adhst_UpdateOU
{
	long idOU;	/* required element */
	param__params parData;	/* required element */
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klgsyn_wstrings
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1046; } /* = unique id SOAP_TYPE_klgsyn_wstrings */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klgsyn-hostid: */
class SOAP_CMAC klgsyn_hostid
{
public:
	wchar_t *hostname;	/* optional element */
	wchar_t *domain;	/* optional element */
public:
	virtual int soap_type() const { return 1047; } /* = unique id SOAP_TYPE_klgsyn_hostid */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of klgsyn-hostid schema type: */
class SOAP_CMAC klgsyn_hostids
{
public:
	klgsyn_hostid *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1048; } /* = unique id SOAP_TYPE_klgsyn_hostids */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klgsyn-field-order: */
struct klgsyn_field_order
{
	wchar_t *wstrFieldName;	/* optional element */
	bool bOrder;	/* required element */
};

/* SOAP encoded array of klgsyn-field-order schema type: */
class SOAP_CMAC klgsyn_field_order_array
{
public:
	struct klgsyn_field_order *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1051; } /* = unique id SOAP_TYPE_klgsyn_field_order_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klgsyn-GetNextItemsResponse: */
struct klgsyn_GetNextItemsResponse
{
	bool bEOF;	/* RPC return element */	/* required element */
	long nCount;	/* required element */
	param__params parInfo;	/* required element */
	struct param_error error;	/* required element */
};

/* klgsyn-GetNextItems: */
struct klgsyn_GetNextItems
{
	wchar_t *wstrIterator;	/* optional element */
	long nCount;	/* required element */
};

/* klgsyn-ReleaseIteratorResponse: */
struct klgsyn_ReleaseIteratorResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgsyn-ReleaseIterator: */
struct klgsyn_ReleaseIterator
{
	wchar_t *wstrIterator;	/* optional element */
};

/* klgsyn-AddSyncObjGResponse: */
struct klgsyn_AddSyncObjGResponse
{
	long id;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgsyn-AddSyncObjG: */
struct klgsyn_AddSyncObjG
{
	wchar_t *szwName;	/* optional element */
	wchar_t *wstrSyncObjPath;	/* optional element */
	long nDirection;	/* required element */
	long lGroup;	/* required element */
	long lElapse;	/* required element */
	bool bCutoffChildren;	/* required element */
};

/* klgsyn-AddSyncObjHResponse: */
struct klgsyn_AddSyncObjHResponse
{
	long id;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgsyn-AddSyncObjH: */
struct klgsyn_AddSyncObjH
{
	wchar_t *szwName;	/* optional element */
	wchar_t *wstrSyncObjPath;	/* optional element */
	long nDirection;	/* required element */
	klgsyn_hostids arrHosts;	/* required element */
	long lElapse;	/* required element */
};

/* klgsyn-GetSyncInfoResponse: */
struct klgsyn_GetSyncInfoResponse
{
	param__params parInfo;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgsyn-GetSyncInfo: */
struct klgsyn_GetSyncInfo
{
	long lSync;	/* required element */
	klgsyn_wstrings arrFields;	/* required element */
};

/* klgsyn-RemoveSyncObjResponse: */
struct klgsyn_RemoveSyncObjResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgsyn-RemoveSyncObj: */
struct klgsyn_RemoveSyncObj
{
	long lSync;	/* required element */
};

/* klgsyn-GetSyncHostsInfoResponse: */
struct klgsyn_GetSyncHostsInfoResponse
{
	wchar_t *wstrIterator;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klgsyn-GetSyncHostsInfo: */
struct klgsyn_GetSyncHostsInfo
{
	long lSync;	/* required element */
	klgsyn_wstrings arrFields;	/* required element */
	long lTimeout;	/* required element */
};

/* klgsyn-FindHostsResponse: */
struct klgsyn_FindHostsResponse
{
	wchar_t *wstrIterator;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klgsyn-FindHosts: */
struct klgsyn_FindHosts
{
	long lSync;	/* required element */
	wchar_t *wstrFilter;	/* optional element */
	klgsyn_wstrings arrFields;	/* required element */
	long lTimeout;	/* required element */
};

/* klgsyn-GetSyncHostsInfo2Response: */
struct klgsyn_GetSyncHostsInfo2Response
{
	long nCount;	/* RPC return element */	/* required element */
	wchar_t *wstrIterator;	/* optional element */
	struct param_error error;	/* required element */
};

/* klgsyn-GetSyncHostsInfo2: */
struct klgsyn_GetSyncHostsInfo2
{
	long lSync;	/* required element */
	klgsyn_wstrings arrFields;	/* required element */
	klgsyn_field_order_array arrFieldsToOrder;	/* required element */
	long lTimeout;	/* required element */
};

/* klgsyn-FindHosts2Response: */
struct klgsyn_FindHosts2Response
{
	long nCount;	/* RPC return element */	/* required element */
	wchar_t *wstrIterator;	/* optional element */
	struct param_error error;	/* required element */
};

/* klgsyn-FindHosts2: */
struct klgsyn_FindHosts2
{
	long lSync;	/* required element */
	wchar_t *wstrFilter;	/* optional element */
	klgsyn_wstrings arrFields;	/* required element */
	klgsyn_field_order_array arrFieldsToOrder;	/* required element */
	long lTimeout;	/* required element */
};

/* klgsyn-GetItemsCountResponse: */
struct klgsyn_GetItemsCountResponse
{
	long nCount;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klgsyn-GetItemsCount: */
struct klgsyn_GetItemsCount
{
	wchar_t *wstrAccessor;	/* optional element */
};

/* klgsyn-GetItemsChunkResponse: */
struct klgsyn_GetItemsChunkResponse
{
	long nCount;	/* RPC return element */	/* required element */
	param__params parInfo;	/* required element */
	struct param_error error;	/* required element */
};

/* klgsyn-GetItemsChunk: */
struct klgsyn_GetItemsChunk
{
	wchar_t *wstrAccessor;	/* optional element */
	long nStart;	/* required element */
	long nCount;	/* required element */
};

/* klgsyn-ReleaseChunkAccessorResponse: */
struct klgsyn_ReleaseChunkAccessorResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klgsyn-ReleaseChunkAccessor: */
struct klgsyn_ReleaseChunkAccessor
{
	wchar_t *wstrAccessor;	/* optional element */
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC kltsk_wstring_array
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1105; } /* = unique id SOAP_TYPE_kltsk_wstring_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:int schema type: */
class SOAP_CMAC kltsk_int_array
{
public:
	long *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1106; } /* = unique id SOAP_TYPE_kltsk_int_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* kltsk-component-id: */
struct kltsk_component_id
{
	wchar_t *productName;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *componentName;	/* optional element */
	wchar_t *instanceId;	/* optional element */
};

/* kltsk-field-order: */
struct kltsk_field_order
{
	wchar_t *wstrFieldName;	/* optional element */
	bool bOrder;	/* required element */
};

/* SOAP encoded array of kltsk-field-order schema type: */
class SOAP_CMAC kltsk_field_order_array
{
public:
	struct kltsk_field_order *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1109; } /* = unique id SOAP_TYPE_kltsk_field_order_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* kltsk-ForbidTaskForGroupResponse: */
struct kltsk_ForbidTaskForGroupResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltsk-ForbidTaskForGroup: */
struct kltsk_ForbidTaskForGroup
{
	long nGroupId;	/* required element */
	long nTaskId;	/* required element */
};

/* kltsk-RunTaskNowResponse: */
struct kltsk_RunTaskNowResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltsk-RunTaskNow: */
struct kltsk_RunTaskNow
{
	long nTaskId;	/* required element */
	wchar_t *wstrDomainName;	/* optional element */
	wchar_t *wstrHostName;	/* optional element */
	bool bEvenIfAlreadySucceeded;	/* required element */
};

/* kltsk-SuspendTaskResponse: */
struct kltsk_SuspendTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltsk-SuspendTask: */
struct kltsk_SuspendTask
{
	long nTaskId;	/* required element */
};

/* kltsk-ResumeTaskResponse: */
struct kltsk_ResumeTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltsk-ResumeTask: */
struct kltsk_ResumeTask
{
	long nTaskId;	/* required element */
};

/* kltsk-CancelTaskResponse: */
struct kltsk_CancelTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltsk-CancelTask: */
struct kltsk_CancelTask
{
	long nTaskId;	/* required element */
};

/* kltsk-ResetTasksIteratorResponse: */
struct kltsk_ResetTasksIteratorResponse
{
	wchar_t *iteratorId;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* kltsk-ResetTasksIterator: */
struct kltsk_ResetTasksIterator
{
	long nGroupId;	/* required element */
	bool bGroupIdSignificant;	/* required element */
	struct kltsk_component_id compIdFilter;	/* required element */
	wchar_t *taskName;	/* optional element */
	bool bIncludeSupergroups;	/* required element */
};

/* kltsk-GetNextTaskResponse: */
struct kltsk_GetNextTaskResponse
{
	param__params parTaskData;	/* RPC return element */	/* required element */
	bool bStartOnEvent;	/* required element */
	bool bResult;	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetNextTask: */
struct kltsk_GetNextTask
{
	wchar_t *iteratorId;	/* optional element */
};

/* kltsk-GetTaskByIDResponse: */
struct kltsk_GetTaskByIDResponse
{
	param__params parTaskData;	/* RPC return element */	/* required element */
	bool bStartOnEvent;	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetTaskByID: */
struct kltsk_GetTaskByID
{
	long nTaskId;	/* required element */
};

/* kltsk-GetTaskStatisticsResponse: */
struct kltsk_GetTaskStatisticsResponse
{
	param__params parStatistics;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetTaskStatistics: */
struct kltsk_GetTaskStatistics
{
	long nTaskId;	/* required element */
};

/* kltsk-AddTaskResponse: */
struct kltsk_AddTaskResponse
{
	long nTaskId;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-AddTask: */
struct kltsk_AddTask
{
	long nGroupId;	/* required element */
	bool bGroupIdSignificant;	/* required element */
	param__params parTaskData;	/* required element */
};

/* kltsk-UpdateTaskResponse: */
struct kltsk_UpdateTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltsk-UpdateTask: */
struct kltsk_UpdateTask
{
	long nTaskId;	/* required element */
	param__params parTaskData;	/* required element */
};

/* kltsk-DeleteTaskResponse: */
struct kltsk_DeleteTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltsk-DeleteTask: */
struct kltsk_DeleteTask
{
	long nTaskId;	/* required element */
};

/* kltsk-SetTaskStartEventResponse: */
struct kltsk_SetTaskStartEventResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltsk-SetTaskStartEvent: */
struct kltsk_SetTaskStartEvent
{
	long nTaskId;	/* required element */
	struct kltsk_component_id compIdFilter;	/* required element */
	wchar_t *eventType;	/* optional element */
	param__params bodyFilter;	/* required element */
};

/* kltsk-GetTaskStartEventResponse: */
struct kltsk_GetTaskStartEventResponse
{
	struct kltsk_component_id compIdFilter;	/* RPC return element */	/* required element */
	wchar_t *eventType;	/* optional element */
	param__params bodyFilter;	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetTaskStartEvent: */
struct kltsk_GetTaskStartEvent
{
	long nTaskId;	/* required element */
};

/* kltsk-ResetHostIteratorForTaskStatusResponse: */
struct kltsk_ResetHostIteratorForTaskStatusResponse
{
	wchar_t *iteratorId;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* kltsk-ResetHostIteratorForTaskStatus: */
struct kltsk_ResetHostIteratorForTaskStatus
{
	wchar_t *wstrTaskId;	/* optional element */
	wchar_t *wstrDomainName;	/* optional element */
	wchar_t *wstrHostName;	/* optional element */
	kltsk_wstring_array arrFields;	/* required element */
	long hsHostStateMask;	/* required element */
	long nLifetime;	/* required element */
};

/* kltsk-GetNextHostStatusResponse: */
struct kltsk_GetNextHostStatusResponse
{
	long nCount;	/* RPC return element */	/* required element */
	param__params paramHostStatus;	/* required element */
	bool bResult;	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetNextHostStatus: */
struct kltsk_GetNextHostStatus
{
	wchar_t *iteratorId;	/* optional element */
	long nCount;	/* required element */
};

/* kltsk-ResetHostIteratorForTaskStatusExResponse: */
struct kltsk_ResetHostIteratorForTaskStatusExResponse
{
	wchar_t *iteratorId;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* kltsk-ResetHostIteratorForTaskStatusEx: */
struct kltsk_ResetHostIteratorForTaskStatusEx
{
	wchar_t *wstrTaskId;	/* optional element */
	wchar_t *wstrDomainName;	/* optional element */
	wchar_t *wstrHostName;	/* optional element */
	kltsk_wstring_array arrFields;	/* required element */
	kltsk_field_order_array arrFiledsToOrder;	/* required element */
	long hsHostStateMask;	/* required element */
	long nLifetime;	/* required element */
};

/* kltsk-GetHostStatusRecordsCountResponse: */
struct kltsk_GetHostStatusRecordsCountResponse
{
	long nCount;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetHostStatusRecordsCount: */
struct kltsk_GetHostStatusRecordsCount
{
	wchar_t *iteratorId;	/* optional element */
};

/* kltsk-GetHostStatusRecordRangeResponse: */
struct kltsk_GetHostStatusRecordRangeResponse
{
	param__params paramHostStatus;	/* RPC return element */	/* required element */
	long nCount;	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetHostStatusRecordRange: */
struct kltsk_GetHostStatusRecordRange
{
	wchar_t *iteratorId;	/* optional element */
	long nStart;	/* required element */
	long nEnd;	/* required element */
};

/* kltsk-GetAllTasksOfHostResponse: */
struct kltsk_GetAllTasksOfHostResponse
{
	kltsk_int_array vectTaskIds;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetAllTasksOfHost: */
struct kltsk_GetAllTasksOfHost
{
	wchar_t *wstrDomainName;	/* optional element */
	wchar_t *wstrHostName;	/* optional element */
};

/* kltsk-GetTaskGroupResponse: */
struct kltsk_GetTaskGroupResponse
{
	long nGroupId;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* kltsk-GetTaskGroup: */
struct kltsk_GetTaskGroup
{
	long nTaskId;	/* required element */
};

/* klpkg-package-info: */
struct klpkg_package_info
{
	long nPackageId;	/* required element */
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrProductName;	/* optional element */
	wchar_t *wstrProductVersion;	/* optional element */
	wchar_t *wstrPackagePath;	/* optional element */
	LONG64 llSize;	/* required element */
	long tCreationTime;	/* required element */
	long tModificationTime;	/* required element */
	wchar_t *wstrSettingsStorageDescr;	/* optional element */
	wchar_t *wstrProductDisplName;	/* optional element */
	wchar_t *wstrProductDisplVersion;	/* optional element */
};

/* SOAP encoded array of klpkg-package-info schema type: */
class SOAP_CMAC klpkg_package_info_array
{
public:
	struct klpkg_package_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1196; } /* = unique id SOAP_TYPE_klpkg_package_info_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klpkg-GetPackagesResponse: */
struct klpkg_GetPackagesResponse
{
	klpkg_package_info_array vect;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-GetPackages: */
struct klpkg_GetPackages
{
	void *_;	/* transient */
};

/* klpkg-RenamePackageResponse: */
struct klpkg_RenamePackageResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-RenamePackage: */
struct klpkg_RenamePackage
{
	long nPackageId;	/* required element */
	wchar_t *wstrNewPackageName;	/* optional element */
};

/* klpkg-GetIntranetFolderForNewPackageResponse: */
struct klpkg_GetIntranetFolderForNewPackageResponse
{
	wchar_t *wstrFolder;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klpkg-GetIntranetFolderForNewPackage: */
struct klpkg_GetIntranetFolderForNewPackage
{
	wchar_t *wstrProductName;	/* optional element */
	wchar_t *wstrProductVersion;	/* optional element */
};

/* klpkg-RecordNewPackageResponse: */
struct klpkg_RecordNewPackageResponse
{
	struct klpkg_package_info package_info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-RecordNewPackage: */
struct klpkg_RecordNewPackage
{
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrFolder;	/* optional element */
	wchar_t *wstrProductName;	/* optional element */
	wchar_t *wstrProductVersion;	/* optional element */
	wchar_t *wstrProductDisplName;	/* optional element */
	wchar_t *wstrProductDisplVersion;	/* optional element */
};

/* klpkg-RemovePackageResponse: */
struct klpkg_RemovePackageResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-RemovePackage: */
struct klpkg_RemovePackage
{
	long nPackageId;	/* required element */
};

/* klpkg-GetIntranetFolderForPackageResponse: */
struct klpkg_GetIntranetFolderForPackageResponse
{
	wchar_t *wstrFolder;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klpkg-GetIntranetFolderForPackage: */
struct klpkg_GetIntranetFolderForPackage
{
	long nPackageId;	/* required element */
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klpkg_wstrings
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1222; } /* = unique id SOAP_TYPE_klpkg_wstrings */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klpkg-SS-ReadResponse: */
struct klpkg_SS_ReadResponse
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-SS-Read: */
struct klpkg_SS_Read
{
	wchar_t *storage_descr;	/* optional element */
	wchar_t *name;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	long timeout;	/* required element */
};

/* klpkg-SS-WriteResponse: */
struct klpkg_SS_WriteResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-SS-Write: */
struct klpkg_SS_Write
{
	wchar_t *storage_descr;	/* optional element */
	wchar_t *name;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	param__params data;	/* required element */
	long timeout;	/* required element */
	long operation_type;	/* required element */
};

/* klpkg-SS-SectionOpearationResponse: */
struct klpkg_SS_SectionOpearationResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-SS-SectionOpearation: */
struct klpkg_SS_SectionOpearation
{
	wchar_t *storage_descr;	/* optional element */
	wchar_t *name;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *section;	/* optional element */
	long timeout;	/* required element */
	long operation_type;	/* required element */
};

/* klpkg-SS-GetNamesResponse: */
struct klpkg_SS_GetNamesResponse
{
	klpkg_wstrings names;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-SS-GetNames: */
struct klpkg_SS_GetNames
{
	wchar_t *storage_descr;	/* optional element */
	wchar_t *name;	/* optional element */
	wchar_t *version;	/* optional element */
	long timeout;	/* required element */
};

/* klpkg-tsk-info: */
struct klpkg_tsk_info
{
	long nTaskId;	/* required element */
	wchar_t *wstrTaskDisplName;	/* optional element */
	long nGroupId;	/* required element */
	wchar_t *wstrGroupDisplName;	/* optional element */
};

/* SOAP encoded array of klpkg-tsk-info schema type: */
class SOAP_CMAC klpkg_tsk_info_array
{
public:
	struct klpkg_tsk_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1240; } /* = unique id SOAP_TYPE_klpkg_tsk_info_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klpkg-RemovePackage2Response: */
struct klpkg_RemovePackage2Response
{
	bool bResult;	/* RPC return element */	/* required element */
	klpkg_tsk_info_array tasks;	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-RemovePackage2: */
struct klpkg_RemovePackage2
{
	long nPackageId;	/* required element */
};

/* klpkg-GetLoginScriptResponse: */
struct klpkg_GetLoginScriptResponse
{
	wchar_t *wstrScript;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klpkg-GetLoginScript: */
struct klpkg_GetLoginScript
{
	long nPackageId;	/* required element */
	wchar_t *wstrTaskId;	/* optional element */
};

/* klpkg-SetRebootOptionsResponse: */
struct klpkg_SetRebootOptionsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-SetRebootOptions: */
struct klpkg_SetRebootOptions
{
	long nPackageId;	/* required element */
	bool bRebootImmediately;	/* required element */
	bool bAskForReboot;	/* required element */
	long nAskForRebootPeriodInMin;	/* required element */
	long nForceRebootTimeInMin;	/* required element */
	wchar_t *wstrAskRebootMsgText;	/* optional element */
};

/* klpkg-GetRebootOptionsResponse: */
struct klpkg_GetRebootOptionsResponse
{
	bool bRebootImmediately;	/* RPC return element */	/* required element */
	bool bAskForReboot;	/* required element */
	long nAskForRebootPeriodInMin;	/* required element */
	long nForceRebootTimeInMin;	/* required element */
	wchar_t *wstrAskRebootMsgText;	/* optional element */
	struct param_error error;	/* required element */
};

/* klpkg-GetRebootOptions: */
struct klpkg_GetRebootOptions
{
	long nPackageId;	/* required element */
};

/* klpkg-RecordNewPackage2Response: */
struct klpkg_RecordNewPackage2Response
{
	struct klpkg_package_info package_info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-RecordNewPackage2: */
struct klpkg_RecordNewPackage2
{
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrFileId;	/* optional element */
	wchar_t *wstrProductName;	/* optional element */
	wchar_t *wstrProductVersion;	/* optional element */
	wchar_t *wstrProductDisplName;	/* optional element */
	wchar_t *wstrProductDisplVersion;	/* optional element */
};

/* klpkg-GetLicenseKeyResponse: */
struct klpkg_GetLicenseKeyResponse
{
	wchar_t *wstrKeyFileName;	/* RPC return element */	/* optional element */
	xsd__hexBinary data;	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-GetLicenseKey: */
struct klpkg_GetLicenseKey
{
	long nPackageId;	/* required element */
};

/* klpkg-SetLicenseKeyResponse: */
struct klpkg_SetLicenseKeyResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-SetLicenseKey: */
struct klpkg_SetLicenseKey
{
	long nPackageId;	/* required element */
	wchar_t *wstrKeyFileName;	/* optional element */
	xsd__hexBinary data;	/* required element */
	bool bRemoveExisting;	/* required element */
};

/* klpkg-ReadPkgCfgFileResponse: */
struct klpkg_ReadPkgCfgFileResponse
{
	xsd__hexBinary data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-ReadPkgCfgFile: */
struct klpkg_ReadPkgCfgFile
{
	long nPackageId;	/* required element */
	wchar_t *wstrFileRelativePath;	/* optional element */
};

/* klpkg-WritePkgCfgFileResponse: */
struct klpkg_WritePkgCfgFileResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-WritePkgCfgFile: */
struct klpkg_WritePkgCfgFile
{
	long nPackageId;	/* required element */
	wchar_t *wstrFileRelativePath;	/* optional element */
	xsd__hexBinary data;	/* required element */
};

/* klpkg-ReadKpdFileResponse: */
struct klpkg_ReadKpdFileResponse
{
	xsd__hexBinary data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-ReadKpdFile: */
struct klpkg_ReadKpdFile
{
	long nPackageId;	/* required element */
};

/* klpkg-GetKpdProfileStringResponse: */
struct klpkg_GetKpdProfileStringResponse
{
	wchar_t *wstrValue;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klpkg-GetKpdProfileString: */
struct klpkg_GetKpdProfileString
{
	long nPackageId;	/* required element */
	wchar_t *wstrSection;	/* optional element */
	wchar_t *wstrKey;	/* optional element */
	wchar_t *wstrDefault;	/* optional element */
};

/* klpkg-WriteKpdProfileStringResponse: */
struct klpkg_WriteKpdProfileStringResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-WriteKpdProfileString: */
struct klpkg_WriteKpdProfileString
{
	long nPackageId;	/* required element */
	wchar_t *wstrSection;	/* optional element */
	wchar_t *wstrKey;	/* optional element */
	wchar_t *wstrValue;	/* optional element */
};

/* klpkg-SetRebootOptionsExResponse: */
struct klpkg_SetRebootOptionsExResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-SetRebootOptionsEx: */
struct klpkg_SetRebootOptionsEx
{
	long nPackageId;	/* required element */
	bool bRebootImmediately;	/* required element */
	bool bAskForReboot;	/* required element */
	long nAskForRebootPeriodInMin;	/* required element */
	long nForceRebootTimeInMin;	/* required element */
	wchar_t *wstrAskRebootMsgText;	/* optional element */
	bool bForceAppsClosed;	/* required element */
	param__params parParams;	/* required element */
};

/* klpkg-GetRebootOptionsExResponse: */
struct klpkg_GetRebootOptionsExResponse
{
	bool bRebootImmediately;	/* RPC return element */	/* required element */
	bool bAskForReboot;	/* required element */
	long nAskForRebootPeriodInMin;	/* required element */
	long nForceRebootTimeInMin;	/* required element */
	wchar_t *wstrAskRebootMsgText;	/* optional element */
	bool bForceAppsClosed;	/* required element */
	param__params parParams;	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-GetRebootOptionsEx: */
struct klpkg_GetRebootOptionsEx
{
	long nPackageId;	/* required element */
};

/* klpkg-RecordNewPackageAsyncResponse: */
struct klpkg_RecordNewPackageAsyncResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klpkg-RecordNewPackageAsync: */
struct klpkg_RecordNewPackageAsync
{
	wchar_t *wstrName;	/* optional element */
	wchar_t *wstrFolder;	/* optional element */
	wchar_t *wstrProductName;	/* optional element */
	wchar_t *wstrProductVersion;	/* optional element */
	wchar_t *wstrProductDisplName;	/* optional element */
	wchar_t *wstrProductDisplVersion;	/* optional element */
	wchar_t *wstrRequestId;	/* optional element */
};

/* klpkg-GetPackageInfoResponse: */
struct klpkg_GetPackageInfoResponse
{
	struct klpkg_package_info package_info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-GetPackageInfo: */
struct klpkg_GetPackageInfo
{
	long nPackageId;	/* required element */
};

/* klpkg-GetIncompatibleAppsInfoResponse: */
struct klpkg_GetIncompatibleAppsInfoResponse
{
	param__params data;	/* RPC return element */	/* required element */
	bool bCanRemoveByInstaller;	/* required element */
	bool bRemoveByInstaller;	/* required element */
	bool bResult;	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-GetIncompatibleAppsInfo: */
struct klpkg_GetIncompatibleAppsInfo
{
	long nPackageId;	/* required element */
};

/* klpkg-SetRemoveIncompatibleAppsResponse: */
struct klpkg_SetRemoveIncompatibleAppsResponse
{
	bool bResult;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klpkg-SetRemoveIncompatibleApps: */
struct klpkg_SetRemoveIncompatibleApps
{
	long nPackageId;	/* required element */
	bool bRemoveIncompatibleApps;	/* required element */
};

/* klrpt-type-common: */
struct klrpt_type_common
{
	long reportType;	/* required element */
	wchar_t *wstrDisplayName;	/* optional element */
};

/* SOAP encoded array of klrpt-type-common schema type: */
struct klrpt_type_common_vector
{
	struct klrpt_type_common *__ptr;
	int __size;
};

/* SOAP encoded array of xsd:wstring schema type: */
struct klrpt_string_vector
{
	wchar_t **__ptr;
	int __size;
};

/* klrpt-type-details: */
struct klrpt_type_details
{
	wchar_t *wstrDescr;	/* optional element */
	bool bAcceptsTimeInterval;	/* required element */
	bool bAcceptsComputerList;	/* required element */
	struct klrpt_string_vector vectPossibleDetFields;	/* required element */
	struct klrpt_string_vector vectPossibleSumFields;	/* required element */
	struct klrpt_string_vector vectPossibleTotals;	/* required element */
};

/* klrpt-common: */
struct klrpt_common
{
	long reportId;	/* required element */
	wchar_t *wstrDisplayName;	/* optional element */
	long reportType;	/* required element */
	long tCreated;	/* required element */
	long tModified;	/* required element */
	long nGroupId;	/* required element */
	param__params paramExtraData;	/* required element */
};

/* SOAP encoded array of klrpt-common schema type: */
struct klrpt_common_vector
{
	struct klrpt_common *__ptr;
	int __size;
};

/* SOAP encoded array of xsd:int schema type: */
struct klrpt_id_vector
{
	long *__ptr;
	int __size;
};

/* klrpt-field-order: */
struct klrpt_field_order
{
	wchar_t *wstrFieldName;	/* optional element */
	bool bOrder;	/* required element */
};

/* SOAP encoded array of klrpt-field-order schema type: */
struct klrpt_fld_order_vector
{
	struct klrpt_field_order *__ptr;
	int __size;
};

/* klrpt-host: */
struct klrpt_host
{
	wchar_t *wstrDomainName;	/* optional element */
	wchar_t *wstrHostInternalName;	/* optional element */
	wchar_t *wstrHostDisplayName;	/* optional element */
};

/* SOAP encoded array of klrpt-host schema type: */
struct klrpt_host_vector
{
	struct klrpt_host *__ptr;
	int __size;
};

/* klrpt-details: */
struct klrpt_details
{
	long tStart;	/* required element */
	long tEnd;	/* required element */
	struct klrpt_string_vector vectDetFields;	/* required element */
	struct klrpt_fld_order_vector vectDetOrder;	/* required element */
	struct klrpt_string_vector vectSumFields;	/* required element */
	struct klrpt_fld_order_vector vectSumOrder;	/* required element */
	struct klrpt_string_vector vectTotals;	/* required element */
	struct klrpt_host_vector vectHosts;	/* required element */
	long nMaxDetailsRecords;	/* required element */
	long nPictureType;	/* required element */
};

/* klrpt-GetReportTypesResponse: */
struct klrpt_GetReportTypesResponse
{
	struct klrpt_type_common_vector vectReportTypes;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-GetReportTypes: */
struct klrpt_GetReportTypes
{
	void *_;	/* transient */
};

/* klrpt-GetReportTypeDetailedDataResponse: */
struct klrpt_GetReportTypeDetailedDataResponse
{
	struct klrpt_type_details details;	/* RPC return element */	/* required element */
	param__params paramExtraData;	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-GetReportTypeDetailedData: */
struct klrpt_GetReportTypeDetailedData
{
	long reportType;	/* required element */
};

/* klrpt-GetReportIdsResponse: */
struct klrpt_GetReportIdsResponse
{
	struct klrpt_id_vector reportIdVector;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-GetReportIds: */
struct klrpt_GetReportIds
{
	void *_;	/* transient */
};

/* klrpt-GetReportsResponse: */
struct klrpt_GetReportsResponse
{
	struct klrpt_common_vector reportCommonVector;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-GetReports: */
struct klrpt_GetReports
{
	void *_;	/* transient */
};

/* klrpt-GetReportCommonDataResponse: */
struct klrpt_GetReportCommonDataResponse
{
	struct klrpt_common commonData;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-GetReportCommonData: */
struct klrpt_GetReportCommonData
{
	long reportId;	/* required element */
};

/* klrpt-GetReportDetailedDataResponse: */
struct klrpt_GetReportDetailedDataResponse
{
	struct klrpt_common commonData;	/* RPC return element */	/* required element */
	struct klrpt_details details;	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-GetReportDetailedData: */
struct klrpt_GetReportDetailedData
{
	long reportId;	/* required element */
};

/* klrpt-AddReportResponse: */
struct klrpt_AddReportResponse
{
	struct klrpt_common commonDataOutput;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-AddReport: */
struct klrpt_AddReport
{
	struct klrpt_common commonData;	/* required element */
	struct klrpt_details details;	/* required element */
};

/* klrpt-UpdateReportResponse: */
struct klrpt_UpdateReportResponse
{
	struct klrpt_common commonDataOutput;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-UpdateReport: */
struct klrpt_UpdateReport
{
	struct klrpt_common commonData;	/* required element */
	struct klrpt_details details;	/* required element */
};

/* klrpt-DeleteReportResponse: */
struct klrpt_DeleteReportResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-DeleteReport: */
struct klrpt_DeleteReport
{
	long reportId;	/* required element */
};

/* Base64 schema type: */
struct xsd__klrpt_output
{
	unsigned char *__ptr;
	int __size;
};

/* klrpt-input: */
struct klrpt_input
{
	long tStart;	/* required element */
	long tEnd;	/* required element */
	struct klrpt_host_vector vectHosts;	/* required element */
	param__params paramLocData;	/* required element */
};

/* klrpt-ExecuteReportResponse: */
struct klrpt_ExecuteReportResponse
{
	struct xsd__klrpt_output output;	/* RPC return element */	/* required element */
	param__params paramChartData;	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-ExecuteReport: */
struct klrpt_ExecuteReport
{
	long reportId;	/* required element */
	struct klrpt_input input;	/* required element */
};

/* klrpt-GetConstantOutputForReportTypeResponse: */
struct klrpt_GetConstantOutputForReportTypeResponse
{
	struct xsd__klrpt_output output;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-GetConstantOutputForReportType: */
struct klrpt_GetConstantOutputForReportType
{
	long reportType;	/* required element */
	long xmlTargetType;	/* required element */
};

/* klrpt-CreateDefaultReportDataResponse: */
struct klrpt_CreateDefaultReportDataResponse
{
	struct klrpt_details details;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-CreateDefaultReportData: */
struct klrpt_CreateDefaultReportData
{
	long reportType;	/* required element */
};

/* klrpt-ExecuteReportAsyncResponse: */
struct klrpt_ExecuteReportAsyncResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-ExecuteReportAsync: */
struct klrpt_ExecuteReportAsync
{
	long reportId;	/* required element */
	wchar_t *wstrAsyncRequestId;	/* optional element */
	struct klrpt_input input;	/* required element */
};

/* klrpt-ExecuteReportAsyncCancelResponse: */
struct klrpt_ExecuteReportAsyncCancelResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-ExecuteReportAsyncCancel: */
struct klrpt_ExecuteReportAsyncCancel
{
	wchar_t *wstrAsyncRequestId;	/* optional element */
};

/* klrpt-ExecuteReportAsyncGetDataResponse: */
struct klrpt_ExecuteReportAsyncGetDataResponse
{
	struct xsd__klrpt_output output;	/* RPC return element */	/* required element */
	long nDataSizeRest;	/* required element */
	param__params paramChartData;	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-ExecuteReportAsyncGetData: */
struct klrpt_ExecuteReportAsyncGetData
{
	wchar_t *wstrAsyncRequestId;	/* optional element */
	long nMaxDataChunkSize;	/* required element */
};

/* klrpt-ExecuteSlaveReportAsyncResponse: */
struct klrpt_ExecuteSlaveReportAsyncResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-ExecuteSlaveReportAsync: */
struct klrpt_ExecuteSlaveReportAsync
{
	struct klrpt_common commonData;	/* required element */
	struct klrpt_details details;	/* required element */
	param__params paramLocalData;	/* required element */
	wchar_t *wstrAsyncRequestId;	/* optional element */
	long nTimeoutInSec;	/* required element */
};

/* klrpt-ExecuteSlaveReportAsyncCancelResponse: */
struct klrpt_ExecuteSlaveReportAsyncCancelResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-ExecuteSlaveReportAsyncCancel: */
struct klrpt_ExecuteSlaveReportAsyncCancel
{
	wchar_t *wstrAsyncRequestId;	/* optional element */
};

/* klrpt-ExecuteSlaveReportAsyncGetDataResponse: */
struct klrpt_ExecuteSlaveReportAsyncGetDataResponse
{
	param__params paramData;	/* RPC return element */	/* required element */
	long nMoreDataAvailable;	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-ExecuteSlaveReportAsyncGetData: */
struct klrpt_ExecuteSlaveReportAsyncGetData
{
	wchar_t *wstrAsyncRequestId;	/* optional element */
	long nRecordsCount;	/* required element */
};

/* klrpt-RequestStatisticsDataResponse: */
struct klrpt_RequestStatisticsDataResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-RequestStatisticsData: */
struct klrpt_RequestStatisticsData
{
	param__params paramRequestParams;	/* required element */
	wchar_t *wstrRequestId;	/* optional element */
};

/* klrpt-CancelStatisticsRequestResponse: */
struct klrpt_CancelStatisticsRequestResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-CancelStatisticsRequest: */
struct klrpt_CancelStatisticsRequest
{
	wchar_t *wstrRequestId;	/* optional element */
};

/* klrpt-GetStatisticsDataResponse: */
struct klrpt_GetStatisticsDataResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
	param__params paramData;	/* required element */
};

/* klrpt-GetStatisticsData: */
struct klrpt_GetStatisticsData
{
	wchar_t *wstrRequestId;	/* optional element */
};

/* klrpt-GetFilterSettingsResponse: */
struct klrpt_GetFilterSettingsResponse
{
	param__params paramData;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klrpt-GetFilterSettings: */
struct klrpt_GetFilterSettings
{
	long reportType;	/* required element */
};

/* klrpt-ExecuteReportAsyncCancelWaitingForSlavesResponse: */
struct klrpt_ExecuteReportAsyncCancelWaitingForSlavesResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-ExecuteReportAsyncCancelWaitingForSlaves: */
struct klrpt_ExecuteReportAsyncCancelWaitingForSlaves
{
	wchar_t *wstrAsyncRequestId;	/* optional element */
};

/* klrpt-ResetStatisticsDataResponse: */
struct klrpt_ResetStatisticsDataResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klrpt-ResetStatisticsData: */
struct klrpt_ResetStatisticsData
{
	param__params paramRequestParams;	/* required element */
};

/* klsrvh-chld-srv-info: */
struct klsrvh_chld_srv_info
{
	long nId;	/* required element */
	wchar_t *wstrDisplName;	/* optional element */
	wchar_t *wstrNetAddress;	/* optional element */
	long nGroupId;	/* required element */
	wchar_t *wstrVersion;	/* optional element */
	wchar_t *wstrInstanceId;	/* optional element */
	long nStatus;	/* required element */
};

/* SOAP encoded array of klsrvh-chld-srv-info schema type: */
class SOAP_CMAC klsrvh_chld_srv_info_vec
{
public:
	struct klsrvh_chld_srv_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1429; } /* = unique id SOAP_TYPE_klsrvh_chld_srv_info_vec */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klsrvh_wstrings
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1431; } /* = unique id SOAP_TYPE_klsrvh_wstrings */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klsrvh-GetChildServersResponse: */
struct klsrvh_GetChildServersResponse
{
	klsrvh_chld_srv_info_vec srv_info_vec;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-GetChildServers: */
struct klsrvh_GetChildServers
{
	long nGroupId;	/* required element */
};

/* klsrvh-GetServerInfoResponse: */
struct klsrvh_GetServerInfoResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-GetServerInfo: */
struct klsrvh_GetServerInfo
{
	long nId;	/* required element */
	klsrvh_wstrings fields;	/* required element */
};

/* klsrvh-RegisterServerResponse: */
struct klsrvh_RegisterServerResponse
{
	long nId;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-RegisterServer: */
struct klsrvh_RegisterServer
{
	param__params baseInfo;	/* required element */
	param__params addInfo;	/* required element */
};

/* klsrvh-DelServerResponse: */
struct klsrvh_DelServerResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsrvh-DelServer: */
struct klsrvh_DelServer
{
	long nId;	/* required element */
};

/* klsrvh-UpdateServerResponse: */
struct klsrvh_UpdateServerResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsrvh-UpdateServer: */
struct klsrvh_UpdateServer
{
	long nId;	/* required element */
	param__params info;	/* required element */
};

/* klsrvh-InitialPingMasterResponse: */
struct klsrvh_InitialPingMasterResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-InitialPingMaster: */
struct klsrvh_InitialPingMaster
{
	param__params info;	/* required element */
};

/* klsrvh-PingMasterResponse: */
struct klsrvh_PingMasterResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-PingMaster: */
struct klsrvh_PingMaster
{
	param__params info;	/* required element */
};

/* klsrvh-PingSlaveResponse: */
struct klsrvh_PingSlaveResponse
{
	param__params info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-PingSlave: */
struct klsrvh_PingSlave
{
	param__params info;	/* required element */
};

/* klsrvh-ForceRetranslateUpdatesResponse: */
struct klsrvh_ForceRetranslateUpdatesResponse
{
	bool bResult;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-ForceRetranslateUpdates: */
struct klsrvh_ForceRetranslateUpdates
{
	param__params info;	/* required element */
};

/* klsrvh-DeliverReportResponse: */
struct klsrvh_DeliverReportResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsrvh-DeliverReport: */
struct klsrvh_DeliverReport
{
	wchar_t *wstrRequestId;	/* optional element */
	long nRecipientDeliverLevel;	/* required element */
	long nSenderDeliverLevel;	/* required element */
	wchar_t *wstrSenderInstanceId;	/* optional element */
	param__params parDeliveryParams;	/* required element */
	param__params parReportResult;	/* required element */
};

/* klsrvh-RecreateInstallationPackageResponse: */
struct klsrvh_RecreateInstallationPackageResponse
{
	wchar_t *wstrNewPackageName;	/* RPC return element */	/* optional element */
	bool bResult;	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-RecreateInstallationPackage: */
struct klsrvh_RecreateInstallationPackage
{
	wchar_t *wstrPackageGUID;	/* optional element */
	wchar_t *wstrNewPackageName;	/* optional element */
	wchar_t *wstrFileId;	/* optional element */
	wchar_t *wstrProductName;	/* optional element */
	wchar_t *wstrProductVersion;	/* optional element */
	wchar_t *wstrProductDisplName;	/* optional element */
	wchar_t *wstrProductDisplVersion;	/* optional element */
	bool bReplaceExisting;	/* required element */
};

/* klsrvh-StartTaskResponse: */
struct klsrvh_StartTaskResponse
{
	param__params parOutParams;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-StartTask: */
struct klsrvh_StartTask
{
	wchar_t *wstrTaskTsId;	/* optional element */
	wchar_t *wstrTaskTypeName;	/* optional element */
	param__params parParams;	/* required element */
};

/* klsrvh-StartRemoteInstallationResponse: */
struct klsrvh_StartRemoteInstallationResponse
{
	bool bResult;	/* RPC return element */	/* required element */
	bool bAlreadyInstalledSkipped;	/* required element */
	struct param_error error;	/* required element */
};

/* klsrvh-StartRemoteInstallation: */
struct klsrvh_StartRemoteInstallation
{
	param__params parTaskInfo;	/* required element */
	param__params parTaskParams;	/* required element */
};

/* klsrvh-ReportRemoteInstallationResultResponse: */
struct klsrvh_ReportRemoteInstallationResultResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsrvh-ReportRemoteInstallationResult: */
struct klsrvh_ReportRemoteInstallationResult
{
	wchar_t *wstrTaskTsId;	/* optional element */
	param__params parResultTaskStateEvent;	/* required element */
};

/* klsrvh-NotifyOnReportResultResponse: */
struct klsrvh_NotifyOnReportResultResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsrvh-NotifyOnReportResult: */
struct klsrvh_NotifyOnReportResult
{
	wchar_t *wstrRequestId;	/* optional element */
	long nResultCode;	/* required element */
	param__params paramParams;	/* required element */
};

/* klsrvh-FindSlaveServersResponse: */
struct klsrvh_FindSlaveServersResponse
{
	long nCount;	/* RPC return element */	/* required element */
	wchar_t *wstrIterator;	/* optional element */
	struct param_error error;	/* required element */
};

/* klsrvh-FindSlaveServers: */
struct klsrvh_FindSlaveServers
{
	wchar_t *wstrFilter;	/* optional element */
	klgrp_wstrings arrFields;	/* required element */
	klgrp_field_order_array arrFieldsToOrder;	/* required element */
	param__params params;	/* required element */
	long lTimeout;	/* required element */
	wchar_t *wstrRequestId;	/* optional element */
};

/* klsrvs-GetSharedFolderResponse: */
struct klsrvs_GetSharedFolderResponse
{
	wchar_t *wstrFolder;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klsrvs-GetSharedFolder: */
struct klsrvs_GetSharedFolder
{
	void *_;	/* transient */
};

/* klsrvs-ChangeSharedFolderResponse: */
struct klsrvs_ChangeSharedFolderResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsrvs-ChangeSharedFolder: */
struct klsrvs_ChangeSharedFolder
{
	wchar_t *wstrFolder;	/* optional element */
};

/* klnlst-field-order: */
struct klnlst_field_order
{
	wchar_t *wstrFieldName;	/* optional element */
	bool bOrder;	/* required element */
};

/* SOAP encoded array of klnlst-field-order schema type: */
class SOAP_CMAC klnlst_field_order_array
{
public:
	struct klnlst_field_order *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1505; } /* = unique id SOAP_TYPE_klnlst_field_order_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klnlst_wstring_array
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1507; } /* = unique id SOAP_TYPE_klnlst_wstring_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:int schema type: */
class SOAP_CMAC klnlst_int_array
{
public:
	long *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1508; } /* = unique id SOAP_TYPE_klnlst_int_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:long schema type: */
class SOAP_CMAC klnlst_long_array
{
public:
	LONG64 *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1509; } /* = unique id SOAP_TYPE_klnlst_long_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klnlst-network-list-item: */
struct klnlst_network_list_item
{
	wchar_t *wstrItemId;	/* optional element */
	ULONG64 tmCreate;	/* required element */
	param__params parItemParams;	/* required element */
	bool bDeletedFlag;	/* required element */
};

/* SOAP encoded array of klnlst-network-list-item schema type: */
class SOAP_CMAC klnlst_network_list_item_array
{
public:
	struct klnlst_network_list_item *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1512; } /* = unique id SOAP_TYPE_klnlst_network_list_item_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klnlst-ResetIteratorResponse: */
struct klnlst_ResetIteratorResponse
{
	wchar_t *iteratorId;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klnlst-ResetIterator: */
struct klnlst_ResetIterator
{
	wchar_t *listName;	/* optional element */
	param__params paramIteratorDescr;	/* required element */
	klnlst_wstring_array fields;	/* required element */
	klnlst_field_order_array fields_to_order;	/* required element */
	long lifetime;	/* required element */
};

/* klnlst-GetRecordCountResponse: */
struct klnlst_GetRecordCountResponse
{
	long nCount;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnlst-GetRecordCount: */
struct klnlst_GetRecordCount
{
	wchar_t *iteratorId;	/* optional element */
};

/* klnlst-GetRecordRangeResponse: */
struct klnlst_GetRecordRangeResponse
{
	param__params paramProperties;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnlst-GetRecordRange: */
struct klnlst_GetRecordRange
{
	wchar_t *iteratorId;	/* optional element */
	long nStart;	/* required element */
	long nEnd;	/* required element */
};

/* klnlst-ReleaseIteratorResponse: */
struct klnlst_ReleaseIteratorResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnlst-ReleaseIterator: */
struct klnlst_ReleaseIterator
{
	wchar_t *iteratorId;	/* optional element */
};

/* klnlst-UpdateHostNetworkListResponse: */
struct klnlst_UpdateHostNetworkListResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnlst-UpdateHostNetworkList: */
struct klnlst_UpdateHostNetworkList
{
	wchar_t *nagentTransportName;	/* optional element */
	wchar_t *listName;	/* optional element */
	wchar_t *listComponentName;	/* optional element */
	klnlst_network_list_item_array listsItemsArray;	/* required element */
};

/* klnlst-AddListItemTaskResponse: */
struct klnlst_AddListItemTaskResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnlst-AddListItemTask: */
struct klnlst_AddListItemTask
{
	long itemId;	/* required element */
	param__params taskParams;	/* required element */
	wchar_t *taskName;	/* optional element */
};

/* klnlst-AddTaskForListItemsResponse: */
struct klnlst_AddTaskForListItemsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnlst-AddTaskForListItems: */
struct klnlst_AddTaskForListItems
{
	klnlst_long_array itemsIds;	/* required element */
	param__params taskParams;	/* required element */
	wchar_t *taskName;	/* optional element */
};

/* klnlst-GetItemInfoResponse: */
struct klnlst_GetItemInfoResponse
{
	wchar_t *wstrListName;	/* RPC return element */	/* optional element */
	wchar_t *wstrItemId;	/* optional element */
	wchar_t *wstrHostId;	/* optional element */
	struct param_error error;	/* required element */
};

/* klnlst-GetItemInfo: */
struct klnlst_GetItemInfo
{
	long itemId;	/* required element */
};

/* klnagnlst-CallNetworkListTaskResponse: */
struct klnagnlst_CallNetworkListTaskResponse
{
	param__params taskResult;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klnagnlst-CallNetworkListTask: */
struct klnagnlst_CallNetworkListTask
{
	wchar_t *listName;	/* optional element */
	wchar_t *itemId;	/* optional element */
	wchar_t *taskName;	/* optional element */
	param__params taskParams;	/* required element */
};

/* klnagnlst-GetItemFileInfoResponse: */
struct klnagnlst_GetItemFileInfoResponse
{
	ULONG64 lTotalSize;	/* RPC return element */	/* required element */
	wchar_t *wstrFileName;	/* optional element */
	struct param_error error;	/* required element */
};

/* klnagnlst-GetItemFileInfo: */
struct klnagnlst_GetItemFileInfo
{
	wchar_t *listName;	/* optional element */
	wchar_t *itemId;	/* optional element */
};

/* SOAP encoded array of xsd:unsignedByte schema type: */
struct klnagnlst_file_chunk_buff
{
	unsigned char *__ptr;
	int __size;
};

/* klnagnlst-GetItemFileChunkResponse: */
struct klnagnlst_GetItemFileChunkResponse
{
	ULONG64 resultCode;	/* RPC return element */	/* required element */
	struct klnagnlst_file_chunk_buff buff;	/* required element */
	struct param_error error;	/* required element */
};

/* klnagnlst-GetItemFileChunk: */
struct klnagnlst_GetItemFileChunk
{
	wchar_t *listName;	/* optional element */
	wchar_t *itemId;	/* optional element */
	ULONG64 startPos;	/* required element */
	ULONG64 neededSize;	/* required element */
};

/* klft-GetNextFileChunkOptions: */
struct klft_GetNextFileChunkOptions
{
	ULONG64 nMulticastRecvSize;	/* required element */
	wchar_t *wstrNagentHostId;	/* optional element */
};

/* klft-GetUpdaterFolderFileInfoOptions: */
struct klft_GetUpdaterFolderFileInfoOptions
{
	wchar_t *wstrNagentHostId;	/* optional element */
};

/* klft-GetNextFileChunkResponse: */
struct klft_GetNextFileChunkResponse
{
	struct klft_file_chunk_t chunk;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klft-GetNextFileChunk: */
struct klft_GetNextFileChunk
{
	wchar_t *remoteClientName;	/* optional element */
	wchar_t *fileName;	/* optional element */
	wchar_t *fileId;	/* optional element */
	ULONG64 startFilePos;	/* required element */
	ULONG64 neededSize;	/* required element */
	bool useUpdaterFolder;	/* required element */
	bool forUpdateAgent;	/* required element */
	struct klft_GetNextFileChunkOptions *options;	/* optional element */
};

/* klft-GetServerFilesListResponse: */
struct klft_GetServerFilesListResponse
{
	param__params filesIdsList;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klft-GetServerFilesList: */
struct klft_GetServerFilesList
{
	wchar_t *clientName;	/* optional element */
};

/* klft-GetUpdaterFolderFileInfoResponse: */
struct klft_GetUpdaterFolderFileInfoResponse
{
	struct klft_file_info_t info;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klft-GetUpdaterFolderFileInfo: */
struct klft_GetUpdaterFolderFileInfo
{
	wchar_t *fileName;	/* optional element */
	struct klft_GetUpdaterFolderFileInfoOptions *options;	/* optional element */
};

/* klft-GetFullFileInfoResponse: */
struct klft_GetFullFileInfoResponse
{
	param__params fileInfo;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klft-GetFullFileInfo: */
struct klft_GetFullFileInfo
{
	wchar_t *fileId;	/* optional element */
};

/* klft-GetHostUpdateAgentInfoResponse: */
struct klft_GetHostUpdateAgentInfoResponse
{
	struct SOAPUpdateAgentInfosList updatesAgents;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klft-GetHostUpdateAgentInfo: */
struct klft_GetHostUpdateAgentInfo
{
	wchar_t *hostId;	/* optional element */
};

/* klft-SendToClientFullSyncArchiveResponse: */
struct klft_SendToClientFullSyncArchiveResponse
{
	bool folderIsEqual;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
	struct SOAPFilesInfoList *deletedFilesList;	/* optional element */
};

/* klft-SendToClientFullSyncArchive: */
struct klft_SendToClientFullSyncArchive
{
	wchar_t *remoteClientName;	/* optional element */
	wchar_t *syncFolderFileId;	/* optional element */
	bool fileNamesHashed;	/* required element */
	struct SOAPFilesInfoList *filesList;	/* optional element */
	struct SOAPSyncFolderOptions *syncFolderOptions;	/* optional element */
};

/* klfts-update-agent-info: */
class SOAP_CMAC klfts_update_agent_info
{
public:
	wchar_t *strAgentHostId;	/* optional element */
	wchar_t *strHostDisplayName;	/* optional element */
	int nGroupId;	/* required element */
	int nPort;	/* required element */
	int nSSLPort;	/* required element */
	wchar_t *strMulticastAddr;	/* optional element */
public:
	virtual int soap_type() const { return 1587; } /* = unique id SOAP_TYPE_klfts_update_agent_info */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of klfts-update-agent-info schema type: */
class SOAP_CMAC klfts_update_agent_info_array
{
public:
	klfts_update_agent_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1588; } /* = unique id SOAP_TYPE_klfts_update_agent_info_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klfts-RegisterUpdateAgentResponse: */
struct klfts_RegisterUpdateAgentResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klfts-RegisterUpdateAgent: */
struct klfts_RegisterUpdateAgent
{
	klfts_update_agent_info updateAgentInfo;	/* required element */
	bool checkExisting;	/* required element */
};

/* klfts-ModifyUpdateAgentResponse: */
struct klfts_ModifyUpdateAgentResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klfts-ModifyUpdateAgent: */
struct klfts_ModifyUpdateAgent
{
	klfts_update_agent_info updateAgentInfo;	/* required element */
};

/* klfts-UnregisterUpdateAgentResponse: */
struct klfts_UnregisterUpdateAgentResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klfts-UnregisterUpdateAgent: */
struct klfts_UnregisterUpdateAgent
{
	wchar_t *strAgentHostId;	/* optional element */
};

/* klfts-GetDefaultUpdateAgentRegistrationInfoResponse: */
struct klfts_GetDefaultUpdateAgentRegistrationInfoResponse
{
	klfts_update_agent_info defaultUpdateAgentInfo;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klfts-GetDefaultUpdateAgentRegistrationInfo: */
struct klfts_GetDefaultUpdateAgentRegistrationInfo
{
	int nGroupId;	/* required element */
};

/* klfts-GetUpdateAgentsForGroupResponse: */
struct klfts_GetUpdateAgentsForGroupResponse
{
	klfts_update_agent_info_array updateAgentInfoList;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klfts-GetUpdateAgentsForGroup: */
struct klfts_GetUpdateAgentsForGroup
{
	int nGroupId;	/* required element */
};

/* klfts-GetUpdateAgentInfoResponse: */
struct klfts_GetUpdateAgentInfoResponse
{
	klfts_update_agent_info updateAgentInfo;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klfts-GetUpdateAgentInfo: */
struct klfts_GetUpdateAgentInfo
{
	wchar_t *strAgentHostId;	/* optional element */
};

/* klfts-UseUAForSyncFolderResponse: */
struct klfts_UseUAForSyncFolderResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klfts-UseUAForSyncFolder: */
struct klfts_UseUAForSyncFolder
{
	wchar_t *strAgentHostId;	/* optional element */
	wchar_t *strSyncFolderName;	/* optional element */
	bool bUse;	/* required element */
};

/* klfts-GetUseUAForSyncFolderResponse: */
struct klfts_GetUseUAForSyncFolderResponse
{
	bool bUse;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klfts-GetUseUAForSyncFolder: */
struct klfts_GetUseUAForSyncFolder
{
	wchar_t *strAgentHostId;	/* optional element */
	wchar_t *strSyncFolderName;	/* optional element */
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klcmptrsft_wstring_array
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1622; } /* = unique id SOAP_TYPE_klcmptrsft_wstring_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klcmptrsft-GetCompetitorSoftwareLisResponse: */
struct klcmptrsft_GetCompetitorSoftwareLisResponse
{
	klcmptrsft_wstring_array fields;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klcmptrsft-GetCompetitorSoftwareList: */
struct klcmptrsft_GetCompetitorSoftwareList
{
};

/* klcmptrsft-GetHostCompetitorSoftwareListResponse: */
struct klcmptrsft_GetHostCompetitorSoftwareListResponse
{
	klcmptrsft_wstring_array fields;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klcmptrsft-GetHostCompetitorSoftwareList: */
struct klcmptrsft_GetHostCompetitorSoftwareList
{
	long hostId;	/* required element */
};

/* aklwngt:anyCmd: */
class SOAP_CMAC aklwngt__anyCmd
{
public:
public:
	virtual int soap_type() const { return 1631; } /* = unique id SOAP_TYPE_aklwngt__anyCmd */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* aklwngt:CmdError: */
class SOAP_CMAC aklwngt__CmdError : public aklwngt__anyCmd
{
public:
	struct param_error oError;	/* required element */
public:
	virtual int soap_type() const { return 1632; } /* = unique id SOAP_TYPE_aklwngt__CmdError */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* aklwngt:CmdHash: */
class SOAP_CMAC aklwngt__CmdHash : public aklwngt__anyCmd
{
public:
	xsd__base64Binary hash;	/* required element */
public:
	virtual int soap_type() const { return 1633; } /* = unique id SOAP_TYPE_aklwngt__CmdHash */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* aklwngt:CmdPar: */
class SOAP_CMAC aklwngt__CmdPar : public aklwngt__anyCmd
{
public:
	param__params parameters;	/* required element */
public:
	virtual int soap_type() const { return 1634; } /* = unique id SOAP_TYPE_aklwngt__CmdPar */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* aklwngt:CmdParAndHash: */
class SOAP_CMAC aklwngt__CmdParAndHash : public aklwngt__anyCmd
{
public:
	xsd__base64Binary hash;	/* required element */
	param__params parameters;	/* required element */
public:
	virtual int soap_type() const { return 1635; } /* = unique id SOAP_TYPE_aklwngt__CmdParAndHash */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Sequence of aklwngt:string-array schema type: */
struct aklwngt__string_array
{
	char **__ptr;
	int __size;
};

/* aklwngt:CmdSubscriptions: */
class SOAP_CMAC aklwngt__CmdSubscriptions : public aklwngt__anyCmd
{
public:
	struct aklwngt__string_array typesInfo;	/* required element */
	struct aklwngt__string_array typesWarning;	/* required element */
	struct aklwngt__string_array typesError;	/* required element */
	struct aklwngt__string_array typesCritical;	/* required element */
public:
	virtual int soap_type() const { return 1637; } /* = unique id SOAP_TYPE_aklwngt__CmdSubscriptions */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* aklwngt:DevInfo: */
struct aklwngt__DevInfo
{
	wchar_t *presumedName;	/* optional element */
	wchar_t *presumedGroup;	/* optional element */
	long os_type;	/* required element */
	long os_ver_major;	/* required element */
	long os_ver_minor;	/* required element */
	wchar_t *os_manufacturer;	/* optional element */
	wchar_t *os_name;	/* optional element */
	wchar_t *os_ver;	/* optional element */
	ULONG64 memory;	/* required element */
	wchar_t *processor_family;	/* optional element */
	wchar_t *system_name;	/* optional element */
	wchar_t *system_type;	/* optional element */
};

/* aklwngt:ProdInfo: */
struct aklwngt__ProdInfo
{
	char *product_name;	/* optional element */
	char *product_version;	/* optional element */
	char *installTime;	/* optional element */
	wchar_t *dn;	/* optional element */
	char *prodVersion;	/* optional element */
};

/* aklwngt:LicKeyInfo: */
struct aklwngt__LicKeyInfo
{
	long keyType;	/* required element */
	long keyProdSuiteID;	/* required element */
	long keyAppID;	/* required element */
	char *keyInstallDate;	/* optional element */
	char *keyExpirationDate;	/* optional element */
	long keyLicPeriod;	/* required element */
	long keyLicCount;	/* required element */
	char *keySerial;	/* optional element */
	char *keyMajVer;	/* optional element */
	wchar_t *keyProdName;	/* optional element */
};

/* aklwngt:LicenseInfo: */
struct aklwngt__LicenseInfo
{
	struct aklwngt__LicKeyInfo *keyCurrent;	/* optional element */
	struct aklwngt__LicKeyInfo *keyNext;	/* optional element */
};

/* aklwngt:CmdAppInfo: */
class SOAP_CMAC aklwngt__CmdAppInfo : public aklwngt__anyCmd
{
public:
	xsd__base64Binary hash;	/* required element */
	struct aklwngt__ProdInfo prodInfo;	/* required element */
	struct aklwngt__LicenseInfo licenseInfo;	/* required element */
	struct aklwngt__DevInfo devInfo;	/* required element */
public:
	virtual int soap_type() const { return 1643; } /* = unique id SOAP_TYPE_aklwngt__CmdAppInfo */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* aklwngt:CmdAppState: */
class SOAP_CMAC aklwngt__CmdAppState : public aklwngt__anyCmd
{
public:
	xsd__base64Binary hash;	/* required element */
	long stateApp;	/* required element */
	long stateRTP;	/* required element */
	char *lastFullScan;	/* optional element */
	char *lastUpdateTime;	/* optional element */
	char *basesDate;	/* optional element */
	char *basesInstallDate;	/* optional element */
	long basesRecords;	/* required element */
public:
	virtual int soap_type() const { return 1644; } /* = unique id SOAP_TYPE_aklwngt__CmdAppState */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* aklwngt:command: */
struct aklwngt__command
{
	long code;	/* required element */
	aklwngt__anyCmd *data;	/* optional element */
};

/* aklwngt:sync-info: */
struct aklwngt__sync_info
{
	xsd__base64Binary hash_stgs;	/* required element */
	xsd__base64Binary hash_pol;	/* required element */
	xsd__base64Binary hash_sbsc;	/* required element */
	xsd__base64Binary hash_info;	/* required element */
	xsd__base64Binary hash_state;	/* required element */
};

/* aklwngt:event-body: */
struct aklwngt__event_body
{
	long severity;	/* required element */
	char *product_name;	/* optional element */
	char *product_version;	/* optional element */
	char *event_type;	/* optional element */
	wchar_t *event_type_display_name;	/* optional element */
	wchar_t *descr;	/* optional element */
	long locid;	/* required element */
	char *rise_time;	/* optional element */
	long rise_time_ms;	/* required element */
	wchar_t *par1;	/* optional element */
	wchar_t *par2;	/* optional element */
	wchar_t *par3;	/* optional element */
	wchar_t *par4;	/* optional element */
	wchar_t *par5;	/* optional element */
	wchar_t *par6;	/* optional element */
	wchar_t *par7;	/* optional element */
	wchar_t *par8;	/* optional element */
	wchar_t *par9;	/* optional element */
};

/* aklwngt:event-info: */
struct aklwngt__event_info
{
	char *eventId;	/* optional element */
	struct aklwngt__event_body body;	/* required element */
};

/* Sequence of aklwngt:event-info-array schema type: */
struct aklwngt__event_info_array
{
	struct aklwngt__event_info *__ptr;
	int __size;
};

/* Base64 schema type: */
struct aklwngt__klft_file_chunk_buff
{
	unsigned char *__ptr;
	int __size;
};

/* aklwngt:klft-file-chunk-t: */
struct aklwngt__klft_file_chunk_t
{
	wchar_t *fileName;	/* optional element */
	ULONG64 CRC;	/* required element */
	ULONG64 startPosInFile;	/* required element */
	ULONG64 fullFileSize;	/* required element */
	struct aklwngt__klft_file_chunk_buff buff;	/* required element */
};

/* aklwngt:klft-file-info-t: */
struct aklwngt__klft_file_info_t
{
	wchar_t *fileName;	/* optional element */
	bool isDir;	/* required element */
	bool readPermission;	/* required element */
	char *createTime;	/* optional element */
	ULONG64 fullFileSize;	/* required element */
};

/* aklwngt:SessionBeginResponse: */
struct aklwngt__SessionBeginResponse
{
	char *szSessionId;	/* RPC return element */	/* optional element */
	int nProtocolVersion;	/* required element */
	struct param_error *oError;	/* optional element */
};

/* aklwngt:SessionBegin: */
struct aklwngt__SessionBegin
{
	char *szDeviceId;	/* optional element */
	char *szPassword;	/* optional element */
	int nProtocolVersion;	/* required element */
};

/* aklwngt:SessionEndResponse: */
struct aklwngt__SessionEndResponse
{
	struct param_error *oError;	/* RPC return element */	/* optional element */
};

/* aklwngt:SessionEnd: */
struct aklwngt__SessionEnd
{
	char *szSessionId;	/* optional element */
};

/* aklwngt:HeartbeatResponse: */
struct aklwngt__HeartbeatResponse
{
	struct aklwngt__command oCommand;	/* RPC return element */	/* required element */
	struct param_error *oError;	/* optional element */
};

/* aklwngt:Heartbeat: */
struct aklwngt__Heartbeat
{
	char *szSessionId;	/* optional element */
	struct aklwngt__sync_info *oMaySynchronize;	/* optional element */
};

/* aklwngt:PutResultResponse: */
struct aklwngt__PutResultResponse
{
	struct aklwngt__command oNextCommand;	/* RPC return element */	/* required element */
	struct param_error *oError;	/* optional element */
};

/* aklwngt:PutResult: */
struct aklwngt__PutResult
{
	char *szSessionId;	/* optional element */
	struct aklwngt__command *result;	/* optional element */
};

/* aklwngt:PutEventsResponse: */
struct aklwngt__PutEventsResponse
{
	struct param_error *oError;	/* RPC return element */	/* optional element */
};

/* aklwngt:PutEvents: */
struct aklwngt__PutEvents
{
	char *szSessionId;	/* optional element */
	struct aklwngt__event_info_array *oEventsInfoArray;	/* optional element */
};

/* aklwngt:klft-GetFileInfoResponse: */
struct aklwngt__klft_GetFileInfoResponse
{
	struct aklwngt__klft_file_info_t info;	/* RPC return element */	/* required element */
	struct param_error *oError;	/* optional element */
};

/* aklwngt:klft-GetFileInfo: */
struct aklwngt__klft_GetFileInfo
{
	char *szSessionId;	/* optional element */
	wchar_t *fileName;	/* optional element */
};

/* aklwngt:klft-GetNextFileChunkResponse: */
struct aklwngt__klft_GetNextFileChunkResponse
{
	struct aklwngt__klft_file_chunk_t chunk;	/* RPC return element */	/* required element */
	struct param_error *oError;	/* optional element */
};

/* aklwngt:klft-GetNextFileChunk: */
struct aklwngt__klft_GetNextFileChunk
{
	char *szSessionId;	/* optional element */
	wchar_t *fileName;	/* optional element */
	ULONG64 startFilePos;	/* required element */
	ULONG64 neededSize;	/* required element */
};

/* klptch-get-nagent-latest-patch-infoResponse: */
struct klptch_get_nagent_latest_patch_infoResponse
{
	param__params data;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klptch-get-nagent-latest-patch-info: */
struct klptch_get_nagent_latest_patch_info
{
	param__params nagent_data;	/* required element */
};

/* klinv-product-info: */
struct klinv_product_info
{
	wchar_t *wstrProductID;	/* optional element */
	bool bIsMsi;	/* required element */
	wchar_t *wstrPackageCode;	/* optional element */
	wchar_t *wstrDisplayName;	/* optional element */
	wchar_t *wstrDisplayVersion;	/* optional element */
	wchar_t *wstrPublisher;	/* optional element */
	unsigned short uLangId;	/* required element */
	wchar_t *wstrInstallDate;	/* optional element */
	wchar_t *wstrInstallDir;	/* optional element */
	wchar_t *wstrComments;	/* optional element */
	wchar_t *wstrHelpLink;	/* optional element */
	wchar_t *wstrHelpTelephone;	/* optional element */
	wchar_t *wstrARPRegKey;	/* optional element */
	wchar_t *wstrCleanerProductName;	/* optional element */
};

/* SOAP encoded array of klinv-product-info schema type: */
class SOAP_CMAC klinv_product_info_array
{
public:
	struct klinv_product_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1692; } /* = unique id SOAP_TYPE_klinv_product_info_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klinv-patch-info: */
struct klinv_patch_info
{
	wchar_t *wstrPatchID;	/* optional element */
	bool bIsMsi;	/* required element */
	wchar_t *wstrParentID;	/* optional element */
	wchar_t *wstrDisplayName;	/* optional element */
	wchar_t *wstrDisplayVersion;	/* optional element */
	wchar_t *wstrPublisher;	/* optional element */
	wchar_t *wstrInstallDate;	/* optional element */
	wchar_t *wstrComments;	/* optional element */
	wchar_t *wstrHelpLink;	/* optional element */
	wchar_t *wstrHelpTelephone;	/* optional element */
	wchar_t *wstrClassification;	/* optional element */
	wchar_t *wstrMoreInfoURL;	/* optional element */
};

/* SOAP encoded array of klinv-patch-info schema type: */
class SOAP_CMAC klinv_patch_info_array
{
public:
	struct klinv_patch_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1695; } /* = unique id SOAP_TYPE_klinv_patch_info_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klinv-cleaner-inifile-info: */
struct klinv_cleaner_inifile_info
{
	wchar_t *wstrProductName;	/* optional element */
	wchar_t *wstrType;	/* optional element */
	wchar_t *wstrFileName;	/* optional element */
	wchar_t *wstrDetectRegistry;	/* optional element */
	wchar_t *wstrDetectMsi;	/* optional element */
};

/* SOAP encoded array of klinv-cleaner-inifile-info schema type: */
class SOAP_CMAC klinv_cleaner_inifile_info_array
{
public:
	struct klinv_cleaner_inifile_info *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1698; } /* = unique id SOAP_TYPE_klinv_cleaner_inifile_info_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klinv-GetInvProductsListResponse: */
struct klinv_GetInvProductsListResponse
{
	klinv_product_info_array fields;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klinv-GetInvProductsList: */
struct klinv_GetInvProductsList
{
};

/* klinv-GetInvPatchesListResponse: */
struct klinv_GetInvPatchesListResponse
{
	klinv_patch_info_array fields;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klinv-GetInvPatchesList: */
struct klinv_GetInvPatchesList
{
};

/* klinv-GetHostInvProductsListResponse: */
struct klinv_GetHostInvProductsListResponse
{
	klinv_product_info_array fields;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klinv-GetHostInvProductsList: */
struct klinv_GetHostInvProductsList
{
	long hostId;	/* required element */
};

/* klinv-GetHostInvPatchesListResponse: */
struct klinv_GetHostInvPatchesListResponse
{
	klinv_patch_info_array fields;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klinv-GetHostInvPatchesList: */
struct klinv_GetHostInvPatchesList
{
	long hostId;	/* required element */
};

/* klinv-GetSrvCompetitorIniFileInfoListResponse: */
struct klinv_GetSrvCompetitorIniFileInfoListResponse
{
	klinv_cleaner_inifile_info_array fields;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klinv-GetSrvCompetitorIniFileInfoList: */
struct klinv_GetSrvCompetitorIniFileInfoList
{
	wchar_t *wstrType;	/* optional element */
};

/* klinv-field-order: */
struct klinv_field_order
{
	wchar_t *wstrFieldName;	/* optional element */
	bool bOrder;	/* required element */
};

/* SOAP encoded array of klinv-field-order schema type: */
class SOAP_CMAC klinv_field_order_array
{
public:
	struct klinv_field_order *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1721; } /* = unique id SOAP_TYPE_klinv_field_order_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC klinv_wstring_array
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1723; } /* = unique id SOAP_TYPE_klinv_wstring_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* klinv-ResetIteratorResponse: */
struct klinv_ResetIteratorResponse
{
	wchar_t *iteratorId;	/* RPC return element */	/* optional element */
	struct param_error error;	/* required element */
};

/* klinv-ResetIterator: */
struct klinv_ResetIterator
{
	wchar_t *wstrFilter;	/* optional element */
	klinv_wstring_array fields;	/* required element */
	klinv_field_order_array fields_to_order;	/* required element */
	long lifetime;	/* required element */
};

/* klinv-GetRecordCountResponse: */
struct klinv_GetRecordCountResponse
{
	long nCount;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klinv-GetRecordCount: */
struct klinv_GetRecordCount
{
	wchar_t *iteratorId;	/* optional element */
};

/* klinv-GetRecordRangeResponse: */
struct klinv_GetRecordRangeResponse
{
	param__params paramProperties;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* klinv-GetRecordRange: */
struct klinv_GetRecordRange
{
	wchar_t *iteratorId;	/* optional element */
	long nStart;	/* required element */
	long nEnd;	/* required element */
};

/* klinv-ReleaseIteratorResponse: */
struct klinv_ReleaseIteratorResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klinv-ReleaseIterator: */
struct klinv_ReleaseIterator
{
	wchar_t *iteratorId;	/* optional element */
};

/* kltrf-Restriction: */
class SOAP_CMAC kltrf_Restriction
{
public:
	long iId;	/* required element */
	long iTotalLimit;	/* required element */
	long iStartHour;	/* required element */
	long iStartMin;	/* required element */
	long iEndHour;	/* required element */
	long iEndMin;	/* required element */
	long iLimit;	/* required element */
	long nMaskOrLo;	/* required element */
	long nSubnetOrHi;	/* required element */
	bool bIsSubnet;	/* required element */
public:
	virtual int soap_type() const { return 1740; } /* = unique id SOAP_TYPE_kltrf_Restriction */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of kltrf-Restriction schema type: */
class SOAP_CMAC kltrf_Restriction_array
{
public:
	kltrf_Restriction *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 1741; } /* = unique id SOAP_TYPE_kltrf_Restriction_array */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* kltrf-ReplaceRestrictionResponse: */
struct kltrf_ReplaceRestrictionResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
	long nRestrictionId;	/* required element */
};

/* kltrf-ReplaceRestriction: */
struct kltrf_ReplaceRestriction
{
	kltrf_Restriction restriction;	/* required element */
};

/* kltrf-DeleteRestrictionResponse: */
struct kltrf_DeleteRestrictionResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* kltrf-DeleteRestriction: */
struct kltrf_DeleteRestriction
{
	LONG64 nRestrictionId;	/* required element */
};

/* kltrf-GetRestrictionsResponse: */
struct kltrf_GetRestrictionsResponse
{
	kltrf_Restriction_array restrArray;	/* RPC return element */	/* required element */
	struct param_error error;	/* required element */
};

/* kltrf-GetRestrictions: */
struct kltrf_GetRestrictions
{
};

/* klnag-SendWakeOnLanOnSubnetsHostsResponse: */
struct klnag_SendWakeOnLanOnSubnetsHostsResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klnag-SendWakeOnLanOnSubnetsHosts: */
struct klnag_SendWakeOnLanOnSubnetsHosts
{
	param__params macsList;	/* required element */
};

/* klsnmpagt-event: */
struct klsnmpagt_event
{
	LONG64 lDateTime;	/* required element */
	long lSeverity;	/* required element */
	wchar_t *wstrComputerName;	/* optional element */
	wchar_t *wstrApplicationName;	/* optional element */
	wchar_t *wstrEventCaption;	/* optional element */
	wchar_t *wstrEventDescription;	/* optional element */
	wchar_t *wstrEventTypeCode;	/* optional element */
};

/* klsnmpagt-PutServerEventResponse: */
struct klsnmpagt_PutServerEventResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsnmpagt-PutServerEvent: */
struct klsnmpagt_PutServerEvent
{
	struct klsnmpagt_event event;	/* required element */
};

/* klsnmpagt-SetAgentConnectionResponse: */
struct klsnmpagt_SetAgentConnectionResponse
{
	struct param_error error;	/* RPC return element */	/* required element */
};

/* klsnmpagt-SetAgentConnection: */
struct klsnmpagt_SetAgentConnection
{
	wchar_t *wstrLocalName;	/* optional element */
	wchar_t *wstrRemoteName;	/* optional element */
};

/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element */
	char *SOAP_ENV__Node;	/* optional element */
	char *SOAP_ENV__Role;	/* optional element */
};

/* SOAP-ENV:Detail: */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};

/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element */
	char *faultstring;	/* optional element */
	char *faultactor;	/* optional element */
	struct SOAP_ENV__Detail *detail;	/* optional element */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element */
	char *SOAP_ENV__Reason;	/* optional element */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element */
};

/* Types With Custom (De)serializers: */
typedef struct message_desc_t message_desc;

/* Typedefs */
typedef char *_XML;
typedef char *_QName;
typedef char *xsd__anyURI;
typedef bool xsd__boolean;
typedef char *xsd__date;
typedef char *xsd__dateTime;
typedef double xsd__double;
typedef char *xsd__duration;
typedef float xsd__float;
typedef char *xsd__time;
typedef char *xsd__decimal;
typedef char *xsd__integer;
typedef LONG64 xsd__long;
typedef long xsd__int;
typedef short xsd__short;
typedef char xsd__byte;
typedef char *xsd__nonPositiveInteger;
typedef char *xsd__negativeInteger;
typedef char *xsd__nonNegativeInteger;
typedef char *xsd__positiveInteger;
typedef ULONG64 xsd__unsignedLong;
typedef unsigned long xsd__unsignedInt;
typedef unsigned short xsd__unsignedShort;
typedef unsigned char xsd__unsignedByte;
typedef wchar_t *xsd__wstring;
typedef char *xsd__string;
typedef char *xsd__normalizedString;
typedef char *xsd__token;
typedef bool param__null;

/* Extern */

/* Remote Methods */

SOAP_FMAC5 int SOAP_FMAC6 tr_InitiateRemoteConnection(struct soap*, char *, char *, int *);

SOAP_FMAC5 int SOAP_FMAC6 tr_CreateReverseConnection(struct soap*, char *, char *, char *, char *, int, int, int, SOAPPermissions *, SOAPConnectionOptions *, int *);

SOAP_FMAC5 int SOAP_FMAC6 tr_ReverseConnectionReply(struct soap*, char *, char *, int, SOAPPermissions *, SOAPConnectionOptions *, int *);

SOAP_FMAC5 int SOAP_FMAC6 tr_PingMethod(struct soap*, char *, int *);

SOAP_FMAC5 int SOAP_FMAC6 tr_AuthenticationHandshake(struct soap*, wchar_t *, xsd__hexBinary, int, struct tr_AuthHandshakeResult &);

SOAP_FMAC5 int SOAP_FMAC6 tr_CreateGatewayConnection(struct soap*, wchar_t *, struct TransportLocList *, int, int, int *);

SOAP_FMAC5 int SOAP_FMAC6 tr_TestMethod(struct soap*, int, char *, int *);

SOAP_FMAC5 int SOAP_FMAC6 tr_TestMethod1(struct soap*, int, char *, struct tr_TestMethod1Result &);

SOAP_FMAC5 int SOAP_FMAC6 tr_TrafficControlNotify(struct soap*, int, int *);

SOAP_FMAC5 int SOAP_FMAC6 ev_RemoteSubscribe(struct soap*, long, wchar_t *, SOAPComponentId *, SOAPComponentId *, wchar_t *, param__params, int, int, int *);

SOAP_FMAC5 int SOAP_FMAC6 ev_RemoteUnsubscribe(struct soap*, long, int *);

SOAP_FMAC5 int SOAP_FMAC6 ev_PublishEvent(struct soap*, SOAPComponentId *, wchar_t *, param__params, time_t, int, struct SOAPComponentIdsList *, struct SOAPSubsIdsList *, int *);

SOAP_FMAC5 int SOAP_FMAC6 klspl_GetPermissions(struct soap*, LONG64, struct klspl_GetPermissionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klspl_SetPermissions(struct soap*, LONG64, struct klspl_permissions_t, bool, struct klspl_SetPermissionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_GetTasksParams(struct soap*, wchar_t *, long, param__params, struct klprci_GetTasksParamsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_GetPingTimeout(struct soap*, wchar_t *, struct klprci_GetPingTimeoutResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_GetState(struct soap*, wchar_t *, struct klprci_GetStateResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_GetStatistics(struct soap*, wchar_t *, param__params, struct klprci_GetStatisticsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_Stop(struct soap*, wchar_t *, struct klprci_StopResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_Suspend(struct soap*, wchar_t *, struct klprci_SuspendResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_Resume(struct soap*, wchar_t *, struct klprci_ResumeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_RunTask(struct soap*, wchar_t *, wchar_t *, param__params, wchar_t *, long, struct klprci_RunTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_RunMethod(struct soap*, wchar_t *, wchar_t *, param__params, long, struct klprci_RunMethodResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_GetTasksList(struct soap*, wchar_t *, struct klprci_GetTasksListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_GetTaskName(struct soap*, wchar_t *, long, struct klprci_GetTaskNameResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_TaskStop(struct soap*, wchar_t *, long, struct klprci_TaskStopResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_TaskSuspend(struct soap*, wchar_t *, long, struct klprci_TaskSuspendResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_TaskResume(struct soap*, wchar_t *, long, struct klprci_TaskResumeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_TaskGetState(struct soap*, wchar_t *, long, struct klprci_GetTaskStateResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_TaskGetCompletion(struct soap*, wchar_t *, long, struct klprci_GetTaskCompletionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprci_TaskReload(struct soap*, wchar_t *, long, param__params, struct klprci_TaskReloadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_ResetSubscriptionsIterator(struct soap*, wchar_t *, SOAPComponentId, long, struct KLPRES_RESET_SUBSCRIPTIONS_ITERATOR_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_ReleaseSubscriptionsIterator(struct soap*, wchar_t *, wchar_t *, struct KLPRES_RELEASE_SUBSCRIPTIONS_ITERATOR_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_GetNextSubscription(struct soap*, wchar_t *, wchar_t *, struct KLPRES_GET_NEXT_SUBSCRIPTION_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_AddSubscription(struct soap*, wchar_t *, wchar_t *, bool, param__params, struct KLPRES_ADD_SUBSCRIPTION_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_UpdateSubscription(struct soap*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_PauseSubscription(struct soap*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_ResumeSubscription(struct soap*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_RemoveSubscription(struct soap*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_ResetEventsIterator(struct soap*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_SetEventsIterator(struct soap*, wchar_t *, wchar_t *, long, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_ResetEventsIteratorEx(struct soap*, wchar_t *, wchar_t *, struct KLPRES_RESET_EVENTS_ITERATOR_EX_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_SetEventsIteratorEx(struct soap*, wchar_t *, wchar_t *, long, struct KLPRES_SET_EVENTS_ITERATOR_EX_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_MoveToEventWithIndex(struct soap*, wchar_t *, wchar_t *, long, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_GetEventsCount(struct soap*, wchar_t *, wchar_t *, struct KLPRES_GET_EVENTS_COUNT_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_GetNextEventsChunk(struct soap*, wchar_t *, wchar_t *, struct KLPRES_GET_NEXT_EVENTS_CHUNK_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_ClearEventsList(struct soap*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_DeleteEvents(struct soap*, wchar_t *, wchar_t *, long, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_DeleteOneEventByID(struct soap*, wchar_t *, wchar_t *, long, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_DeleteRanges(struct soap*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_RemoveExpiredEvents(struct soap*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRES_GetEventStorageFileSize(struct soap*, wchar_t *, wchar_t *, struct KLPRES_GET_EVENT_STORAGE_FILE_SIZE_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_ResetTasksIterator(struct soap*, wchar_t *, SOAPComponentId, wchar_t *, struct KLPRTS_RESET_TASKS_ITERATOR_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_GetTaskByID(struct soap*, wchar_t *, wchar_t *, struct KLPRTS_GET_TASK_BY_ID_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_GetTaskByIDWithPolicyApplied(struct soap*, wchar_t *, wchar_t *, struct KLPRTS_GET_TASK_BY_ID_WPA_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_AddTask(struct soap*, wchar_t *, param__params, struct KLPRTS_ADD_TASK_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_UpdateTask(struct soap*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_DeleteTask(struct soap*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_SetTaskStartEvent(struct soap*, wchar_t *, wchar_t *, SOAPComponentId, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_GetTaskStartEvent(struct soap*, wchar_t *, wchar_t *, struct KLPRTS_GET_TASK_START_EVENT_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_UpdateTask2(struct soap*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 KLPRTS_ReplaceTask(struct soap*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_Close(struct soap*, wchar_t *, wchar_t *, struct klsssrv_CloseResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_CreateSettingsStorage(struct soap*, wchar_t *, wchar_t *, long, long, param__params, struct klsssrv_CreateSettingsStorageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_Read(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, param__params, struct klsssrv_ReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_Write(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, param__params, struct klsssrv_WriteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_CreateSection(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klsssrv_CreateSectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_DeleteSection(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klsssrv_DeleteSectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_SetTimeout(struct soap*, wchar_t *, wchar_t *, long, struct klsssrv_SetTimeoutResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_GetNames(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klsssrv_GetNamesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsssrv_AttrRead(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klsssrv_AttrReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klagent_StartTaskStorageTask(struct soap*, wchar_t *, wchar_t *, long, struct klagent_StartTaskStorageTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klagent_StartComponentEx(struct soap*, SOAPComponentId, param__params, wchar_t *, long, long, long, long, wchar_t *, wchar_t *, wchar_t *, param__params, struct klagent_StartComponentExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klagent_GetStartedComponentsList(struct soap*, SOAPComponentId, struct klagent_GetStartedComponentsListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klagent_IsComponentStarted(struct soap*, SOAPComponentId, struct klagent_IsComponentStartedResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klagent_GetComponentStartParameters(struct soap*, SOAPComponentId, struct klagent_GetComponentStartParametersResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klagent_GetComponentPort(struct soap*, SOAPComponentId, struct klagent_GetComponentPortResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevprop_ResetIterator(struct soap*, long, param__params, klevprop_wstring_array, klevprop_field_order_array, long, struct klevprop_ResetIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevprop_GetRecordCount(struct soap*, wchar_t *, struct klevprop_GetRecordCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevprop_GetRecordRange(struct soap*, wchar_t *, long, long, struct klevprop_GetRecordRangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevprop_FindRecordByFirstChars(struct soap*, wchar_t *, wchar_t *, wchar_t *, struct klevprop_FindRecordByFirstCharsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevprop_DeleteProperties(struct soap*, klevprop_int_array, struct klevprop_DeletePropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevprop_InitiateDelete(struct soap*, param__params, struct klevprop_InitiateDeleteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevprop_CancelDelete(struct soap*, param__params, struct klevprop_CancelDeleteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevprop_ReleaseIterator(struct soap*, wchar_t *, struct klevprop_ReleaseIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevproc_Process(struct soap*, param__params, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klevproc_ProcessResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_GetDefaultSettings(struct soap*, void *, struct klevpnp_GetDefaultSettingsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_SetDefaultSettings(struct soap*, param__params, struct klevpnp_SetDefaultSettingsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_TestNotification(struct soap*, param__params, struct klevpnp_TestNotificationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_SetNotificationLimits(struct soap*, param__params, struct klevpnp_SetNotificationLimitsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_GetNotificationLimits(struct soap*, void *, struct klevpnp_GetNotificationLimitsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_GetCommonProperties(struct soap*, void *, struct klevpnp_GetCommonPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_GetGroupProperties(struct soap*, long, struct klevpnp_GetGroupPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_GetTaskProperties(struct soap*, wchar_t *, struct klevpnp_GetTaskPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_SetCommonProperties(struct soap*, klevpnp_notification_descr_array, struct klevpnp_SetCommonPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_SetGroupProperties(struct soap*, long, klevpnp_notification_descr_array, struct klevpnp_SetGroupPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klevpnp_SetTaskProperties(struct soap*, wchar_t *, klevpnp_notification_descr_array, struct klevpnp_SetTaskPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_RemoveStores(struct soap*, struct klnag_StoresList, struct klnag_RemoveStoresResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_StartNewIntegration(struct soap*, wchar_t *, struct klnag_StartNewIntegrationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_NotifySSChange(struct soap*, wchar_t *, wchar_t *, wchar_t *, long, struct klnag_NotifySSChangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_OnPing(struct soap*, param__params, struct klnag_OnPingResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_WatchdogPing(struct soap*, struct klnag_WatchdogPingResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_GetRunTimeInfo(struct soap*, param__params, struct klnag_GetRunTimeInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_GetStaticInfo(struct soap*, param__params, struct klnag_GetStaticInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_GetStatistics(struct soap*, param__params, struct klnag_GetStatisticsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_GetInstancePort(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klnag_GetInstancePortResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_StartProduct(struct soap*, wchar_t *, wchar_t *, param__params, struct klnag_StartProductResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_StopProduct(struct soap*, wchar_t *, wchar_t *, param__params, struct klnag_StopProductResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_OnStartRemoteInstallTask(struct soap*, long, struct klnag_OnStartRemoteInstallTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_OnInstallerNotification(struct soap*, param__params, struct klnag_OnInstallerNotificationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_GetHostPublicKey(struct soap*, struct klnag_GetHostPublicKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_PutGlobalKeys(struct soap*, xsd__base64Binary, xsd__base64Binary, struct klnag_PutGlobalKeysResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_OnUserForceSyncRequest(struct soap*, param__params, struct klnag_OnUserForceSyncRequestResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klftbridge_CreateReceiver(struct soap*, bool, struct klftbridge_CreateReceiverResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klftbridge_Connect(struct soap*, wchar_t *, bool, struct klftbridge_ConnectResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klftbridge_GetFileInfo(struct soap*, wchar_t *, wchar_t *, struct klftbridge_GetFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klftbridge_GetNextFileChunk(struct soap*, wchar_t *, wchar_t *, ULONG64, ULONG64, struct klftbridge_GetNextFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klftbridge_ReleaseReceiver(struct soap*, wchar_t *, struct klftbridge_ReleaseReceiverResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_InitiateFileUpload(struct soap*, wchar_t *, wchar_t *, wchar_t *, ULONG64, ULONG64, wchar_t *, wchar_t *, ULONG64, ULONG64, long, ULONG64, struct SOAPUpdateAgentInfosList *, struct klft_InitiateFileUploadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_RegisterUpdateAgent(struct soap*, wchar_t *, wchar_t *, wchar_t *, param__params, struct klft_RegisterUpdateAgentResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_InitiateServerFileUpload(struct soap*, wchar_t *, ULONG64, ULONG64, ULONG64, struct klft_InitiateServerFileUploadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_CancelServerFileUpload(struct soap*, wchar_t *, struct klft_CancelServerFileUploadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_PutNextFileChunk(struct soap*, wchar_t *, struct klft_file_chunk_t, struct klft_PutNextFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_GetSyncFolderDiff(struct soap*, wchar_t *, struct SOAPFilesInfoList *, struct SOAPSyncFolderOptions *, struct klft_GetSyncFolderDiffResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_GetSyncFolderFileInfo(struct soap*, wchar_t *, wchar_t *, struct klft_GetSyncFolderFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_GetSyncFolderFileChunk(struct soap*, wchar_t *, wchar_t *, ULONG64, ULONG64, struct klft_GetSyncFolderFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 sync_putData(struct soap*, wchar_t *, param__params, struct sync_putDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 sync_Call(struct soap*, wchar_t *, wchar_t *, param__params, struct sync_CallResponse &);

SOAP_FMAC5 int SOAP_FMAC6 sync_start(struct soap*, wchar_t *, wchar_t *, param__params, struct sync_startResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_UseKeepConnection(struct soap*, wchar_t *, struct klhst_UseKeepConnectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_AddHosts(struct soap*, param__params, struct klhst_AddHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_GetHostTasks(struct soap*, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_GetHostTasksResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_GetDomains(struct soap*, void *, struct klhst_GetDomainsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_GetDomainHosts(struct soap*, wchar_t *, struct klhst_GetDomainHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_GetHostInfo(struct soap*, wchar_t *, klhst_wstrings, struct klhst_GetHostInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_AddDomain(struct soap*, wchar_t *, long, struct klhst_AddDomainResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_DelDomain(struct soap*, wchar_t *, struct klhst_DelDomainResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_AddHost(struct soap*, param__params, struct klhst_AddHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_DelHost(struct soap*, wchar_t *, struct klhst_DelHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_UpdateHost(struct soap*, wchar_t *, param__params, struct klhst_UpdateHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_GetHostProducts(struct soap*, wchar_t *, struct klhst_GetHostProductsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_SS_Read(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_SS_ReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_SS_Write(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, param__params, long, struct klhst_SS_WriteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_SS_CreateSection(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_SS_CreateSectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_SS_DeleteSection(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_SS_DeleteSectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_SS_GetNames(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_SS_GetNamesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_CallGetRunTimeInfo(struct soap*, wchar_t *, param__params, struct klhst_CallGetRunTimeInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_CallGetStaticInfo(struct soap*, wchar_t *, param__params, struct klhst_CallGetStaticInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_CallGetStatistics(struct soap*, wchar_t *, param__params, struct klhst_CallGetStatisticsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_CallGetInstancePort(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klhst_CallGetInstancePortResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_NotifyTask(struct soap*, wchar_t *, struct klhst_NotifyTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klupdt_GetUpdatesInfo(struct soap*, param__params, struct klupdt_GetUpdatesInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klupdt_SetBundleOptions(struct soap*, param__params, struct klupdt_SetBundleOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klupdt_SetGeneralOptions(struct soap*, param__params, struct klupdt_SetGeneralOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klupdt_GetGeneralOptions(struct soap*, param__params, struct klupdt_GetGeneralOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klupdt_GetAvailableUpdatesInfo(struct soap*, wchar_t *, struct klupdt_GetAvailableUpdatesInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klupdt_GetRequiedUpdatesInfo(struct soap*, int, struct klupdt_GetRequiedUpdatesInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kllicsrv_GetKeysInfo(struct soap*, klhst_wstrings, wchar_t *, long, param__params, struct kllicsrv_GetKeysInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kllicsrv_GetKeyInfo(struct soap*, klhst_wstrings, klhst_field_order_array, wchar_t *, long, struct kllicsrv_GetKeyInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kllicsrv_DeleteKeyInfo(struct soap*, wchar_t *, struct kllicsrv_DeleteKeyInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kllicsrv_InstallKey(struct soap*, param__params, struct kllicsrv_InstallKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kllicsrv_UninstallKey(struct soap*, param__params, struct kllicsrv_UninstallKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kllicsrv_GetKeyData(struct soap*, param__params, struct kllicsrv_GetKeyDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kllicsrv_AdjustFlexibleKey(struct soap*, param__params, struct kllicsrv_AdjustFlexibleKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kllicsrv_EnumKeys(struct soap*, klhst_wstrings, klhst_field_order_array, param__params, long, struct kllicsrv_EnumKeysResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_MoveRulesAddRule(struct soap*, param__params, struct klhst_MoveRulesAddRuleResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_MoveRulesUpdateRule(struct soap*, long, param__params, struct klhst_MoveRulesUpdateRuleResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_MoveRulesDeleteRule(struct soap*, long, struct klhst_MoveRulesDeleteRuleResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_MoveRulesSetRulesOrder(struct soap*, klhst_rule_order_array, struct klhst_MoveRulesSetRulesOrderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_MoveRulesGetRule(struct soap*, long, struct klhst_MoveRulesGetRuleResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klhst_MoveRulesGetRules(struct soap*, klhst_wstrings, struct klhst_MoveRulesGetRulesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kldpns_AddDiapason(struct soap*, param__params, struct kldpns_AddDiapasonResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kldpns_UpdateDiapason(struct soap*, long, param__params, struct kldpns_UpdateDiapasonResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kldpns_RemoveDiapason(struct soap*, long, struct kldpns_RemoveDiapasonResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kldpns_GetDiapasons(struct soap*, klhst_wstrings, long, struct kldpns_GetDiapasonsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kldpns_GetDiapason(struct soap*, long, klhst_wstrings, struct kldpns_GetDiapasonResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kldpns_NotifyDpnsTask(struct soap*, struct kldpns_NotifyDpnsTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_GetGroups(struct soap*, long, long, struct klgrp_GetGroupsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_GetUnassignedGroupId(struct soap*, void *, struct klgrp_GetUnassignedGroupIdResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_GetGroupInfo(struct soap*, long, param__params, struct klgrp_GetGroupInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_AddGroup(struct soap*, param__params, struct klgrp_AddGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_DelGroup(struct soap*, long, struct klgrp_DelGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_UpdateGroup(struct soap*, long, param__params, struct klgrp_UpdateGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_SetGroupHosts(struct soap*, long, param__params, struct klgrp_SetGroupHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_RemoveHosts(struct soap*, klgrp_wstrings, struct klgrp_RemoveHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_ResetGroupHostsIterator(struct soap*, long, klgrp_wstrings, long, struct klgrp_ResetGroupHostsIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_ReleaseGroupHostsIterator(struct soap*, wchar_t *, struct klgrp_ReleaseGroupHostsIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_GetNextGroupHost(struct soap*, wchar_t *, long, struct klgrp_GetNextGroupHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_FindHosts(struct soap*, wchar_t *, klgrp_wstrings, klgrp_field_order_array, param__params, long, wchar_t *, struct klgrp_FindHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_FindHostsCancel(struct soap*, wchar_t *, struct klgrp_FindHostsCancelResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_FindHostsGetAccessor(struct soap*, wchar_t *, struct klgrp_FindHostsGetAccessorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_GetSuperGroupId(struct soap*, void *, struct klgrp_GetSuperGroupIdResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgrp_FindGroups(struct soap*, wchar_t *, klgrp_wstrings, klgrp_field_order_array, param__params, long, wchar_t *, struct klgrp_FindGroupsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_GetPolicyCommonData(struct soap*, long, long, struct klpol_GetPolicyCommonDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_GetAllAcivePoliciesForGroup(struct soap*, long, struct klpol_GetAllAcivePoliciesForGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_GetSinglePolicyCommonData(struct soap*, long, struct klpol_GetSinglePolicyCommonDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_AddPolicy(struct soap*, long, struct klpol_policy_common_data, struct klpol_AddPolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_UpdatePolicyCommonData(struct soap*, struct klpol_policy_common_data, struct klpol_UpdatePolicyCommonDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_DeletePolicy(struct soap*, long, struct klpol_DeletePolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_CopyPolicyEx(struct soap*, long, long, bool, struct klpol_CopyPolicyExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_GetSSProxyID(struct soap*, long, long, struct klpol_GetSSProxyIDResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_ModifySettings(struct soap*, long, struct klpol_ModifySettingsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_MakePolicyActive(struct soap*, long, bool, struct klpol_MakePolicyActiveResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_MakePolicyRoaming(struct soap*, long, struct klpol_MakePolicyRoamingResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_GetPoliciesForGroup(struct soap*, long, long, struct klpol_GetPoliciesForGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_CopyOrMovePolicy(struct soap*, long, long, bool, struct klpol_policy_common_data, struct klpol_CopyOrMovePolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_SetOutbreakPolicy(struct soap*, klpol_polici_ids, struct klpol_SetOutbreakPolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_GetOutbreakPolicy(struct soap*, struct klpol_GetOutbreakPolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_SetOutbreakPolicy2(struct soap*, param__params, struct klpol_SetOutbreakPolicy2Response &);

SOAP_FMAC5 int SOAP_FMAC6 klpol_GetOutbreakPolicy2(struct soap*, struct klpol_GetOutbreakPolicy2Response &);

SOAP_FMAC5 int SOAP_FMAC6 klprssp_SS_Read(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klprssp_SS_ReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprssp_SS_Write(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, param__params, long, struct klprssp_SS_WriteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprssp_SS_SectionOperation(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klprssp_SS_SectionOperationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprssp_SS_GetNames(struct soap*, wchar_t *, wchar_t *, wchar_t *, struct klprssp_SS_GetNamesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprssp_SS_ApplyChanges(struct soap*, wchar_t *, struct klprssp_SS_ApplyChangesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klprssp_ReleaseSS(struct soap*, wchar_t *, struct klprssp_ReleaseSSResponse &);

SOAP_FMAC5 int SOAP_FMAC6 adhst_GetChildComputers(struct soap*, long, klhst_wstrings, long, struct adhst_GetChildComputersResponse &);

SOAP_FMAC5 int SOAP_FMAC6 adhst_GetChildOUs(struct soap*, long, klhst_wstrings, long, struct adhst_GetChildOUsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 adhst_GetOU(struct soap*, long, klhst_wstrings, struct adhst_GetOUResponse &);

SOAP_FMAC5 int SOAP_FMAC6 adhst_UpdateOU(struct soap*, long, param__params, struct adhst_UpdateOUResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_GetNextItems(struct soap*, wchar_t *, long, struct klgsyn_GetNextItemsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_ReleaseIterator(struct soap*, wchar_t *, struct klgsyn_ReleaseIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_AddSyncObjG(struct soap*, wchar_t *, wchar_t *, long, long, long, bool, struct klgsyn_AddSyncObjGResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_AddSyncObjH(struct soap*, wchar_t *, wchar_t *, long, klgsyn_hostids, long, struct klgsyn_AddSyncObjHResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_GetSyncInfo(struct soap*, long, klgsyn_wstrings, struct klgsyn_GetSyncInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_RemoveSyncObj(struct soap*, long, struct klgsyn_RemoveSyncObjResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_GetSyncHostsInfo(struct soap*, long, klgsyn_wstrings, long, struct klgsyn_GetSyncHostsInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_FindHosts(struct soap*, long, wchar_t *, klgsyn_wstrings, long, struct klgsyn_FindHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_GetSyncHostsInfo2(struct soap*, long, klgsyn_wstrings, klgsyn_field_order_array, long, struct klgsyn_GetSyncHostsInfo2Response &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_FindHosts2(struct soap*, long, wchar_t *, klgsyn_wstrings, klgsyn_field_order_array, long, struct klgsyn_FindHosts2Response &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_GetItemsCount(struct soap*, wchar_t *, struct klgsyn_GetItemsCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_GetItemsChunk(struct soap*, wchar_t *, long, long, struct klgsyn_GetItemsChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klgsyn_ReleaseChunkAccessor(struct soap*, wchar_t *, struct klgsyn_ReleaseChunkAccessorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_ForbidTaskForGroup(struct soap*, long, long, struct kltsk_ForbidTaskForGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_RunTaskNow(struct soap*, long, wchar_t *, wchar_t *, bool, struct kltsk_RunTaskNowResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_SuspendTask(struct soap*, long, struct kltsk_SuspendTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_ResumeTask(struct soap*, long, struct kltsk_ResumeTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_CancelTask(struct soap*, long, struct kltsk_CancelTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_ResetTasksIterator(struct soap*, long, bool, struct kltsk_component_id, wchar_t *, bool, struct kltsk_ResetTasksIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetNextTask(struct soap*, wchar_t *, struct kltsk_GetNextTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetTaskByID(struct soap*, long, struct kltsk_GetTaskByIDResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetTaskStatistics(struct soap*, long, struct kltsk_GetTaskStatisticsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_AddTask(struct soap*, long, bool, param__params, struct kltsk_AddTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_UpdateTask(struct soap*, long, param__params, struct kltsk_UpdateTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_DeleteTask(struct soap*, long, struct kltsk_DeleteTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_SetTaskStartEvent(struct soap*, long, struct kltsk_component_id, wchar_t *, param__params, struct kltsk_SetTaskStartEventResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetTaskStartEvent(struct soap*, long, struct kltsk_GetTaskStartEventResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_ResetHostIteratorForTaskStatus(struct soap*, wchar_t *, wchar_t *, wchar_t *, kltsk_wstring_array, long, long, struct kltsk_ResetHostIteratorForTaskStatusResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetNextHostStatus(struct soap*, wchar_t *, long, struct kltsk_GetNextHostStatusResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_ResetHostIteratorForTaskStatusEx(struct soap*, wchar_t *, wchar_t *, wchar_t *, kltsk_wstring_array, kltsk_field_order_array, long, long, struct kltsk_ResetHostIteratorForTaskStatusExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetHostStatusRecordsCount(struct soap*, wchar_t *, struct kltsk_GetHostStatusRecordsCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetHostStatusRecordRange(struct soap*, wchar_t *, long, long, struct kltsk_GetHostStatusRecordRangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetAllTasksOfHost(struct soap*, wchar_t *, wchar_t *, struct kltsk_GetAllTasksOfHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltsk_GetTaskGroup(struct soap*, long, struct kltsk_GetTaskGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetPackages(struct soap*, void *, struct klpkg_GetPackagesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_RenamePackage(struct soap*, long, wchar_t *, struct klpkg_RenamePackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetIntranetFolderForNewPackage(struct soap*, wchar_t *, wchar_t *, struct klpkg_GetIntranetFolderForNewPackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_RecordNewPackage(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klpkg_RecordNewPackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_RemovePackage(struct soap*, long, struct klpkg_RemovePackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetIntranetFolderForPackage(struct soap*, long, struct klpkg_GetIntranetFolderForPackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_SS_Read(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klpkg_SS_ReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_SS_Write(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, param__params, long, long, struct klpkg_SS_WriteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_SS_SectionOpearation(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, long, struct klpkg_SS_SectionOpearationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_SS_GetNames(struct soap*, wchar_t *, wchar_t *, wchar_t *, long, struct klpkg_SS_GetNamesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_RemovePackage2(struct soap*, long, struct klpkg_RemovePackage2Response &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetLoginScript(struct soap*, long, wchar_t *, struct klpkg_GetLoginScriptResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_SetRebootOptions(struct soap*, long, bool, bool, long, long, wchar_t *, struct klpkg_SetRebootOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetRebootOptions(struct soap*, long, struct klpkg_GetRebootOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_RecordNewPackage2(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klpkg_RecordNewPackage2Response &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetLicenseKey(struct soap*, long, struct klpkg_GetLicenseKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_SetLicenseKey(struct soap*, long, wchar_t *, xsd__hexBinary, bool, struct klpkg_SetLicenseKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_ReadPkgCfgFile(struct soap*, long, wchar_t *, struct klpkg_ReadPkgCfgFileResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_WritePkgCfgFile(struct soap*, long, wchar_t *, xsd__hexBinary, struct klpkg_WritePkgCfgFileResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_ReadKpdFile(struct soap*, long, struct klpkg_ReadKpdFileResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetKpdProfileString(struct soap*, long, wchar_t *, wchar_t *, wchar_t *, struct klpkg_GetKpdProfileStringResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_WriteKpdProfileString(struct soap*, long, wchar_t *, wchar_t *, wchar_t *, struct klpkg_WriteKpdProfileStringResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_SetRebootOptionsEx(struct soap*, long, bool, bool, long, long, wchar_t *, bool, param__params, struct klpkg_SetRebootOptionsExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetRebootOptionsEx(struct soap*, long, struct klpkg_GetRebootOptionsExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_RecordNewPackageAsync(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klpkg_RecordNewPackageAsyncResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetPackageInfo(struct soap*, long, struct klpkg_GetPackageInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_GetIncompatibleAppsInfo(struct soap*, long, struct klpkg_GetIncompatibleAppsInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klpkg_SetRemoveIncompatibleApps(struct soap*, long, bool, struct klpkg_SetRemoveIncompatibleAppsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetReportTypes(struct soap*, void *, struct klrpt_GetReportTypesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetReportTypeDetailedData(struct soap*, long, struct klrpt_GetReportTypeDetailedDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetReportIds(struct soap*, void *, struct klrpt_GetReportIdsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetReports(struct soap*, void *, struct klrpt_GetReportsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetReportCommonData(struct soap*, long, struct klrpt_GetReportCommonDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetReportDetailedData(struct soap*, long, struct klrpt_GetReportDetailedDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_AddReport(struct soap*, struct klrpt_common, struct klrpt_details, struct klrpt_AddReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_UpdateReport(struct soap*, struct klrpt_common, struct klrpt_details, struct klrpt_UpdateReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_DeleteReport(struct soap*, long, struct klrpt_DeleteReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ExecuteReport(struct soap*, long, struct klrpt_input, struct klrpt_ExecuteReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetConstantOutputForReportType(struct soap*, long, long, struct klrpt_GetConstantOutputForReportTypeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_CreateDefaultReportData(struct soap*, long, struct klrpt_CreateDefaultReportDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ExecuteReportAsync(struct soap*, long, wchar_t *, struct klrpt_input, struct klrpt_ExecuteReportAsyncResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ExecuteReportAsyncCancel(struct soap*, wchar_t *, struct klrpt_ExecuteReportAsyncCancelResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ExecuteReportAsyncGetData(struct soap*, wchar_t *, long, struct klrpt_ExecuteReportAsyncGetDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ExecuteSlaveReportAsync(struct soap*, struct klrpt_common, struct klrpt_details, param__params, wchar_t *, long, struct klrpt_ExecuteSlaveReportAsyncResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ExecuteSlaveReportAsyncCancel(struct soap*, wchar_t *, struct klrpt_ExecuteSlaveReportAsyncCancelResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ExecuteSlaveReportAsyncGetData(struct soap*, wchar_t *, long, struct klrpt_ExecuteSlaveReportAsyncGetDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_RequestStatisticsData(struct soap*, param__params, wchar_t *, struct klrpt_RequestStatisticsDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_CancelStatisticsRequest(struct soap*, wchar_t *, struct klrpt_CancelStatisticsRequestResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetStatisticsData(struct soap*, wchar_t *, struct klrpt_GetStatisticsDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_GetFilterSettings(struct soap*, long, struct klrpt_GetFilterSettingsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ExecuteReportAsyncCancelWaitingForSlaves(struct soap*, wchar_t *, struct klrpt_ExecuteReportAsyncCancelWaitingForSlavesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klrpt_ResetStatisticsData(struct soap*, param__params, struct klrpt_ResetStatisticsDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_GetChildServers(struct soap*, long, struct klsrvh_GetChildServersResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_GetServerInfo(struct soap*, long, klsrvh_wstrings, struct klsrvh_GetServerInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_RegisterServer(struct soap*, param__params, param__params, struct klsrvh_RegisterServerResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_DelServer(struct soap*, long, struct klsrvh_DelServerResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_UpdateServer(struct soap*, long, param__params, struct klsrvh_UpdateServerResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_InitialPingMaster(struct soap*, param__params, struct klsrvh_InitialPingMasterResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_PingMaster(struct soap*, param__params, struct klsrvh_PingMasterResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_PingSlave(struct soap*, param__params, struct klsrvh_PingSlaveResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_ForceRetranslateUpdates(struct soap*, param__params, struct klsrvh_ForceRetranslateUpdatesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_DeliverReport(struct soap*, wchar_t *, long, long, wchar_t *, param__params, param__params, struct klsrvh_DeliverReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_RecreateInstallationPackage(struct soap*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, bool, struct klsrvh_RecreateInstallationPackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_StartTask(struct soap*, wchar_t *, wchar_t *, param__params, struct klsrvh_StartTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_StartRemoteInstallation(struct soap*, param__params, param__params, struct klsrvh_StartRemoteInstallationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_ReportRemoteInstallationResult(struct soap*, wchar_t *, param__params, struct klsrvh_ReportRemoteInstallationResultResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_NotifyOnReportResult(struct soap*, wchar_t *, long, param__params, struct klsrvh_NotifyOnReportResultResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvh_FindSlaveServers(struct soap*, wchar_t *, klgrp_wstrings, klgrp_field_order_array, param__params, long, wchar_t *, struct klsrvh_FindSlaveServersResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvs_GetSharedFolder(struct soap*, void *, struct klsrvs_GetSharedFolderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsrvs_ChangeSharedFolder(struct soap*, wchar_t *, struct klsrvs_ChangeSharedFolderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnlst_ResetIterator(struct soap*, wchar_t *, param__params, klnlst_wstring_array, klnlst_field_order_array, long, struct klnlst_ResetIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnlst_GetRecordCount(struct soap*, wchar_t *, struct klnlst_GetRecordCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnlst_GetRecordRange(struct soap*, wchar_t *, long, long, struct klnlst_GetRecordRangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnlst_ReleaseIterator(struct soap*, wchar_t *, struct klnlst_ReleaseIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnlst_UpdateHostNetworkList(struct soap*, wchar_t *, wchar_t *, wchar_t *, klnlst_network_list_item_array, struct klnlst_UpdateHostNetworkListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnlst_AddListItemTask(struct soap*, long, param__params, wchar_t *, struct klnlst_AddListItemTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnlst_AddTaskForListItems(struct soap*, klnlst_long_array, param__params, wchar_t *, struct klnlst_AddTaskForListItemsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnlst_GetItemInfo(struct soap*, long, struct klnlst_GetItemInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnagnlst_CallNetworkListTask(struct soap*, wchar_t *, wchar_t *, wchar_t *, param__params, struct klnagnlst_CallNetworkListTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnagnlst_GetItemFileInfo(struct soap*, wchar_t *, wchar_t *, struct klnagnlst_GetItemFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnagnlst_GetItemFileChunk(struct soap*, wchar_t *, wchar_t *, ULONG64, ULONG64, struct klnagnlst_GetItemFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_GetNextFileChunk(struct soap*, wchar_t *, wchar_t *, wchar_t *, ULONG64, ULONG64, bool, bool, struct klft_GetNextFileChunkOptions *, struct klft_GetNextFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_GetServerFilesList(struct soap*, wchar_t *, struct klft_GetServerFilesListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_GetUpdaterFolderFileInfo(struct soap*, wchar_t *, struct klft_GetUpdaterFolderFileInfoOptions *, struct klft_GetUpdaterFolderFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_GetFullFileInfo(struct soap*, wchar_t *, struct klft_GetFullFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_GetHostUpdateAgentInfo(struct soap*, wchar_t *, struct klft_GetHostUpdateAgentInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klft_SendToClientFullSyncArchive(struct soap*, wchar_t *, wchar_t *, bool, struct SOAPFilesInfoList *, struct SOAPSyncFolderOptions *, struct klft_SendToClientFullSyncArchiveResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klfts_RegisterUpdateAgent(struct soap*, klfts_update_agent_info, bool, struct klfts_RegisterUpdateAgentResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klfts_ModifyUpdateAgent(struct soap*, klfts_update_agent_info, struct klfts_ModifyUpdateAgentResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klfts_UnregisterUpdateAgent(struct soap*, wchar_t *, struct klfts_UnregisterUpdateAgentResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klfts_GetDefaultUpdateAgentRegistrationInfo(struct soap*, int, struct klfts_GetDefaultUpdateAgentRegistrationInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klfts_GetUpdateAgentsForGroup(struct soap*, int, struct klfts_GetUpdateAgentsForGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klfts_GetUpdateAgentInfo(struct soap*, wchar_t *, struct klfts_GetUpdateAgentInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klfts_UseUAForSyncFolder(struct soap*, wchar_t *, wchar_t *, bool, struct klfts_UseUAForSyncFolderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klfts_GetUseUAForSyncFolder(struct soap*, wchar_t *, wchar_t *, struct klfts_GetUseUAForSyncFolderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klcmptrsft_GetCompetitorSoftwareList(struct soap*, struct klcmptrsft_GetCompetitorSoftwareLisResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klcmptrsft_GetHostCompetitorSoftwareList(struct soap*, long, struct klcmptrsft_GetHostCompetitorSoftwareListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 aklwngt__SessionBegin(struct soap*, char *, char *, int, struct aklwngt__SessionBeginResponse &);

SOAP_FMAC5 int SOAP_FMAC6 aklwngt__SessionEnd(struct soap*, char *, struct aklwngt__SessionEndResponse &);

SOAP_FMAC5 int SOAP_FMAC6 aklwngt__Heartbeat(struct soap*, char *, struct aklwngt__sync_info *, struct aklwngt__HeartbeatResponse &);

SOAP_FMAC5 int SOAP_FMAC6 aklwngt__PutResult(struct soap*, char *, struct aklwngt__command *, struct aklwngt__PutResultResponse &);

SOAP_FMAC5 int SOAP_FMAC6 aklwngt__PutEvents(struct soap*, char *, struct aklwngt__event_info_array *, struct aklwngt__PutEventsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 aklwngt__klft_GetFileInfo(struct soap*, char *, wchar_t *, struct aklwngt__klft_GetFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 aklwngt__klft_GetNextFileChunk(struct soap*, char *, wchar_t *, ULONG64, ULONG64, struct aklwngt__klft_GetNextFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klptch_get_nagent_latest_patch_info(struct soap*, param__params, struct klptch_get_nagent_latest_patch_infoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_GetInvProductsList(struct soap*, struct klinv_GetInvProductsListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_GetInvPatchesList(struct soap*, struct klinv_GetInvPatchesListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_GetHostInvProductsList(struct soap*, long, struct klinv_GetHostInvProductsListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_GetHostInvPatchesList(struct soap*, long, struct klinv_GetHostInvPatchesListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_GetSrvCompetitorIniFileInfoList(struct soap*, wchar_t *, struct klinv_GetSrvCompetitorIniFileInfoListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_ResetIterator(struct soap*, wchar_t *, klinv_wstring_array, klinv_field_order_array, long, struct klinv_ResetIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_GetRecordCount(struct soap*, wchar_t *, struct klinv_GetRecordCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_GetRecordRange(struct soap*, wchar_t *, long, long, struct klinv_GetRecordRangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klinv_ReleaseIterator(struct soap*, wchar_t *, struct klinv_ReleaseIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltrf_ReplaceRestriction(struct soap*, kltrf_Restriction, struct kltrf_ReplaceRestrictionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltrf_DeleteRestriction(struct soap*, LONG64, struct kltrf_DeleteRestrictionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 kltrf_GetRestrictions(struct soap*, struct kltrf_GetRestrictionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klnag_SendWakeOnLanOnSubnetsHosts(struct soap*, param__params, struct klnag_SendWakeOnLanOnSubnetsHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsnmpagt_PutServerEvent(struct soap*, struct klsnmpagt_event, struct klsnmpagt_PutServerEventResponse &);

SOAP_FMAC5 int SOAP_FMAC6 klsnmpagt_SetAgentConnection(struct soap*, wchar_t *, wchar_t *, struct klsnmpagt_SetAgentConnectionResponse &);

/* Stubs */

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_InitiateRemoteConnection(struct soap*, const char*, const char*, char *, char *, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_CreateReverseConnection(struct soap*, const char*, const char*, char *, char *, char *, char *, int, int, int, SOAPPermissions *, SOAPConnectionOptions *, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_ReverseConnectionReply(struct soap*, const char*, const char*, char *, char *, int, SOAPPermissions *, SOAPConnectionOptions *, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_PingMethod(struct soap*, const char*, const char*, char *, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_AuthenticationHandshake(struct soap*, const char*, const char*, wchar_t *, xsd__hexBinary, int, struct tr_AuthHandshakeResult &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_CreateGatewayConnection(struct soap*, const char*, const char*, wchar_t *, struct TransportLocList *, int, int, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_TestMethod(struct soap*, const char*, const char*, int, char *, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_TestMethod1(struct soap*, const char*, const char*, int, char *, struct tr_TestMethod1Result &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_tr_TrafficControlNotify(struct soap*, const char*, const char*, int, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ev_RemoteSubscribe(struct soap*, const char*, const char*, long, wchar_t *, SOAPComponentId *, SOAPComponentId *, wchar_t *, param__params, int, int, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ev_RemoteUnsubscribe(struct soap*, const char*, const char*, long, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ev_PublishEvent(struct soap*, const char*, const char*, SOAPComponentId *, wchar_t *, param__params, time_t, int, struct SOAPComponentIdsList *, struct SOAPSubsIdsList *, int *);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klspl_GetPermissions(struct soap*, const char*, const char*, LONG64, struct klspl_GetPermissionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klspl_SetPermissions(struct soap*, const char*, const char*, LONG64, struct klspl_permissions_t, bool, struct klspl_SetPermissionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_GetTasksParams(struct soap*, const char*, const char*, wchar_t *, long, param__params, struct klprci_GetTasksParamsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_GetPingTimeout(struct soap*, const char*, const char*, wchar_t *, struct klprci_GetPingTimeoutResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_GetState(struct soap*, const char*, const char*, wchar_t *, struct klprci_GetStateResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_GetStatistics(struct soap*, const char*, const char*, wchar_t *, param__params, struct klprci_GetStatisticsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_Stop(struct soap*, const char*, const char*, wchar_t *, struct klprci_StopResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_Suspend(struct soap*, const char*, const char*, wchar_t *, struct klprci_SuspendResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_Resume(struct soap*, const char*, const char*, wchar_t *, struct klprci_ResumeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_RunTask(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, wchar_t *, long, struct klprci_RunTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_RunMethod(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, long, struct klprci_RunMethodResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_GetTasksList(struct soap*, const char*, const char*, wchar_t *, struct klprci_GetTasksListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_GetTaskName(struct soap*, const char*, const char*, wchar_t *, long, struct klprci_GetTaskNameResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_TaskStop(struct soap*, const char*, const char*, wchar_t *, long, struct klprci_TaskStopResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_TaskSuspend(struct soap*, const char*, const char*, wchar_t *, long, struct klprci_TaskSuspendResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_TaskResume(struct soap*, const char*, const char*, wchar_t *, long, struct klprci_TaskResumeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_TaskGetState(struct soap*, const char*, const char*, wchar_t *, long, struct klprci_GetTaskStateResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_TaskGetCompletion(struct soap*, const char*, const char*, wchar_t *, long, struct klprci_GetTaskCompletionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprci_TaskReload(struct soap*, const char*, const char*, wchar_t *, long, param__params, struct klprci_TaskReloadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_ResetSubscriptionsIterator(struct soap*, const char*, const char*, wchar_t *, SOAPComponentId, long, struct KLPRES_RESET_SUBSCRIPTIONS_ITERATOR_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_ReleaseSubscriptionsIterator(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRES_RELEASE_SUBSCRIPTIONS_ITERATOR_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_GetNextSubscription(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRES_GET_NEXT_SUBSCRIPTION_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_AddSubscription(struct soap*, const char*, const char*, wchar_t *, wchar_t *, bool, param__params, struct KLPRES_ADD_SUBSCRIPTION_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_UpdateSubscription(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_PauseSubscription(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_ResumeSubscription(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_RemoveSubscription(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_ResetEventsIterator(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_SetEventsIterator(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_ResetEventsIteratorEx(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRES_RESET_EVENTS_ITERATOR_EX_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_SetEventsIteratorEx(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, struct KLPRES_SET_EVENTS_ITERATOR_EX_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_MoveToEventWithIndex(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_GetEventsCount(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRES_GET_EVENTS_COUNT_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_GetNextEventsChunk(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRES_GET_NEXT_EVENTS_CHUNK_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_ClearEventsList(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_DeleteEvents(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_DeleteOneEventByID(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_DeleteRanges(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_RemoveExpiredEvents(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRES_GetEventStorageFileSize(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRES_GET_EVENT_STORAGE_FILE_SIZE_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_ResetTasksIterator(struct soap*, const char*, const char*, wchar_t *, SOAPComponentId, wchar_t *, struct KLPRTS_RESET_TASKS_ITERATOR_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_GetTaskByID(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRTS_GET_TASK_BY_ID_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_GetTaskByIDWithPolicyApplied(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRTS_GET_TASK_BY_ID_WPA_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_AddTask(struct soap*, const char*, const char*, wchar_t *, param__params, struct KLPRTS_ADD_TASK_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_UpdateTask(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_DeleteTask(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_SetTaskStartEvent(struct soap*, const char*, const char*, wchar_t *, wchar_t *, SOAPComponentId, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_GetTaskStartEvent(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct KLPRTS_GET_TASK_START_EVENT_RESPONSE &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_UpdateTask2(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_KLPRTS_ReplaceTask(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct param_error &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_Close(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct klsssrv_CloseResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_CreateSettingsStorage(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, long, param__params, struct klsssrv_CreateSettingsStorageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_Read(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, param__params, struct klsssrv_ReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_Write(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, param__params, struct klsssrv_WriteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_CreateSection(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klsssrv_CreateSectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_DeleteSection(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klsssrv_DeleteSectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_SetTimeout(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, struct klsssrv_SetTimeoutResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_GetNames(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klsssrv_GetNamesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsssrv_AttrRead(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klsssrv_AttrReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klagent_StartTaskStorageTask(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, struct klagent_StartTaskStorageTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klagent_StartComponentEx(struct soap*, const char*, const char*, SOAPComponentId, param__params, wchar_t *, long, long, long, long, wchar_t *, wchar_t *, wchar_t *, param__params, struct klagent_StartComponentExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klagent_GetStartedComponentsList(struct soap*, const char*, const char*, SOAPComponentId, struct klagent_GetStartedComponentsListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klagent_IsComponentStarted(struct soap*, const char*, const char*, SOAPComponentId, struct klagent_IsComponentStartedResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klagent_GetComponentStartParameters(struct soap*, const char*, const char*, SOAPComponentId, struct klagent_GetComponentStartParametersResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klagent_GetComponentPort(struct soap*, const char*, const char*, SOAPComponentId, struct klagent_GetComponentPortResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevprop_ResetIterator(struct soap*, const char*, const char*, long, param__params, klevprop_wstring_array, klevprop_field_order_array, long, struct klevprop_ResetIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevprop_GetRecordCount(struct soap*, const char*, const char*, wchar_t *, struct klevprop_GetRecordCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevprop_GetRecordRange(struct soap*, const char*, const char*, wchar_t *, long, long, struct klevprop_GetRecordRangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevprop_FindRecordByFirstChars(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, struct klevprop_FindRecordByFirstCharsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevprop_DeleteProperties(struct soap*, const char*, const char*, klevprop_int_array, struct klevprop_DeletePropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevprop_InitiateDelete(struct soap*, const char*, const char*, param__params, struct klevprop_InitiateDeleteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevprop_CancelDelete(struct soap*, const char*, const char*, param__params, struct klevprop_CancelDeleteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevprop_ReleaseIterator(struct soap*, const char*, const char*, wchar_t *, struct klevprop_ReleaseIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevproc_Process(struct soap*, const char*, const char*, param__params, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klevproc_ProcessResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_GetDefaultSettings(struct soap*, const char*, const char*, void *, struct klevpnp_GetDefaultSettingsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_SetDefaultSettings(struct soap*, const char*, const char*, param__params, struct klevpnp_SetDefaultSettingsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_TestNotification(struct soap*, const char*, const char*, param__params, struct klevpnp_TestNotificationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_SetNotificationLimits(struct soap*, const char*, const char*, param__params, struct klevpnp_SetNotificationLimitsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_GetNotificationLimits(struct soap*, const char*, const char*, void *, struct klevpnp_GetNotificationLimitsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_GetCommonProperties(struct soap*, const char*, const char*, void *, struct klevpnp_GetCommonPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_GetGroupProperties(struct soap*, const char*, const char*, long, struct klevpnp_GetGroupPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_GetTaskProperties(struct soap*, const char*, const char*, wchar_t *, struct klevpnp_GetTaskPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_SetCommonProperties(struct soap*, const char*, const char*, klevpnp_notification_descr_array, struct klevpnp_SetCommonPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_SetGroupProperties(struct soap*, const char*, const char*, long, klevpnp_notification_descr_array, struct klevpnp_SetGroupPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klevpnp_SetTaskProperties(struct soap*, const char*, const char*, wchar_t *, klevpnp_notification_descr_array, struct klevpnp_SetTaskPropertiesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_RemoveStores(struct soap*, const char*, const char*, struct klnag_StoresList, struct klnag_RemoveStoresResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_StartNewIntegration(struct soap*, const char*, const char*, wchar_t *, struct klnag_StartNewIntegrationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_NotifySSChange(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, long, struct klnag_NotifySSChangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_OnPing(struct soap*, const char*, const char*, param__params, struct klnag_OnPingResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_WatchdogPing(struct soap*, const char*, const char*, struct klnag_WatchdogPingResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_GetRunTimeInfo(struct soap*, const char*, const char*, param__params, struct klnag_GetRunTimeInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_GetStaticInfo(struct soap*, const char*, const char*, param__params, struct klnag_GetStaticInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_GetStatistics(struct soap*, const char*, const char*, param__params, struct klnag_GetStatisticsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_GetInstancePort(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klnag_GetInstancePortResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_StartProduct(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct klnag_StartProductResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_StopProduct(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct klnag_StopProductResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_OnStartRemoteInstallTask(struct soap*, const char*, const char*, long, struct klnag_OnStartRemoteInstallTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_OnInstallerNotification(struct soap*, const char*, const char*, param__params, struct klnag_OnInstallerNotificationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_GetHostPublicKey(struct soap*, const char*, const char*, struct klnag_GetHostPublicKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_PutGlobalKeys(struct soap*, const char*, const char*, xsd__base64Binary, xsd__base64Binary, struct klnag_PutGlobalKeysResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_OnUserForceSyncRequest(struct soap*, const char*, const char*, param__params, struct klnag_OnUserForceSyncRequestResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klftbridge_CreateReceiver(struct soap*, const char*, const char*, bool, struct klftbridge_CreateReceiverResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klftbridge_Connect(struct soap*, const char*, const char*, wchar_t *, bool, struct klftbridge_ConnectResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klftbridge_GetFileInfo(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct klftbridge_GetFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klftbridge_GetNextFileChunk(struct soap*, const char*, const char*, wchar_t *, wchar_t *, ULONG64, ULONG64, struct klftbridge_GetNextFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klftbridge_ReleaseReceiver(struct soap*, const char*, const char*, wchar_t *, struct klftbridge_ReleaseReceiverResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_InitiateFileUpload(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, ULONG64, ULONG64, wchar_t *, wchar_t *, ULONG64, ULONG64, long, ULONG64, struct SOAPUpdateAgentInfosList *, struct klft_InitiateFileUploadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_RegisterUpdateAgent(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, param__params, struct klft_RegisterUpdateAgentResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_InitiateServerFileUpload(struct soap*, const char*, const char*, wchar_t *, ULONG64, ULONG64, ULONG64, struct klft_InitiateServerFileUploadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_CancelServerFileUpload(struct soap*, const char*, const char*, wchar_t *, struct klft_CancelServerFileUploadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_PutNextFileChunk(struct soap*, const char*, const char*, wchar_t *, struct klft_file_chunk_t, struct klft_PutNextFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_GetSyncFolderDiff(struct soap*, const char*, const char*, wchar_t *, struct SOAPFilesInfoList *, struct SOAPSyncFolderOptions *, struct klft_GetSyncFolderDiffResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_GetSyncFolderFileInfo(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct klft_GetSyncFolderFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_GetSyncFolderFileChunk(struct soap*, const char*, const char*, wchar_t *, wchar_t *, ULONG64, ULONG64, struct klft_GetSyncFolderFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sync_putData(struct soap*, const char*, const char*, wchar_t *, param__params, struct sync_putDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sync_Call(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct sync_CallResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_sync_start(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct sync_startResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_UseKeepConnection(struct soap*, const char*, const char*, wchar_t *, struct klhst_UseKeepConnectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_AddHosts(struct soap*, const char*, const char*, param__params, struct klhst_AddHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_GetHostTasks(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_GetHostTasksResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_GetDomains(struct soap*, const char*, const char*, void *, struct klhst_GetDomainsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_GetDomainHosts(struct soap*, const char*, const char*, wchar_t *, struct klhst_GetDomainHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_GetHostInfo(struct soap*, const char*, const char*, wchar_t *, klhst_wstrings, struct klhst_GetHostInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_AddDomain(struct soap*, const char*, const char*, wchar_t *, long, struct klhst_AddDomainResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_DelDomain(struct soap*, const char*, const char*, wchar_t *, struct klhst_DelDomainResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_AddHost(struct soap*, const char*, const char*, param__params, struct klhst_AddHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_DelHost(struct soap*, const char*, const char*, wchar_t *, struct klhst_DelHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_UpdateHost(struct soap*, const char*, const char*, wchar_t *, param__params, struct klhst_UpdateHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_GetHostProducts(struct soap*, const char*, const char*, wchar_t *, struct klhst_GetHostProductsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_SS_Read(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_SS_ReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_SS_Write(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, param__params, long, struct klhst_SS_WriteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_SS_CreateSection(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_SS_CreateSectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_SS_DeleteSection(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_SS_DeleteSectionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_SS_GetNames(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klhst_SS_GetNamesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_CallGetRunTimeInfo(struct soap*, const char*, const char*, wchar_t *, param__params, struct klhst_CallGetRunTimeInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_CallGetStaticInfo(struct soap*, const char*, const char*, wchar_t *, param__params, struct klhst_CallGetStaticInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_CallGetStatistics(struct soap*, const char*, const char*, wchar_t *, param__params, struct klhst_CallGetStatisticsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_CallGetInstancePort(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klhst_CallGetInstancePortResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_NotifyTask(struct soap*, const char*, const char*, wchar_t *, struct klhst_NotifyTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klupdt_GetUpdatesInfo(struct soap*, const char*, const char*, param__params, struct klupdt_GetUpdatesInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klupdt_SetBundleOptions(struct soap*, const char*, const char*, param__params, struct klupdt_SetBundleOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klupdt_SetGeneralOptions(struct soap*, const char*, const char*, param__params, struct klupdt_SetGeneralOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klupdt_GetGeneralOptions(struct soap*, const char*, const char*, param__params, struct klupdt_GetGeneralOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klupdt_GetAvailableUpdatesInfo(struct soap*, const char*, const char*, wchar_t *, struct klupdt_GetAvailableUpdatesInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klupdt_GetRequiedUpdatesInfo(struct soap*, const char*, const char*, int, struct klupdt_GetRequiedUpdatesInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kllicsrv_GetKeysInfo(struct soap*, const char*, const char*, klhst_wstrings, wchar_t *, long, param__params, struct kllicsrv_GetKeysInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kllicsrv_GetKeyInfo(struct soap*, const char*, const char*, klhst_wstrings, klhst_field_order_array, wchar_t *, long, struct kllicsrv_GetKeyInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kllicsrv_DeleteKeyInfo(struct soap*, const char*, const char*, wchar_t *, struct kllicsrv_DeleteKeyInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kllicsrv_InstallKey(struct soap*, const char*, const char*, param__params, struct kllicsrv_InstallKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kllicsrv_UninstallKey(struct soap*, const char*, const char*, param__params, struct kllicsrv_UninstallKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kllicsrv_GetKeyData(struct soap*, const char*, const char*, param__params, struct kllicsrv_GetKeyDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kllicsrv_AdjustFlexibleKey(struct soap*, const char*, const char*, param__params, struct kllicsrv_AdjustFlexibleKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kllicsrv_EnumKeys(struct soap*, const char*, const char*, klhst_wstrings, klhst_field_order_array, param__params, long, struct kllicsrv_EnumKeysResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_MoveRulesAddRule(struct soap*, const char*, const char*, param__params, struct klhst_MoveRulesAddRuleResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_MoveRulesUpdateRule(struct soap*, const char*, const char*, long, param__params, struct klhst_MoveRulesUpdateRuleResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_MoveRulesDeleteRule(struct soap*, const char*, const char*, long, struct klhst_MoveRulesDeleteRuleResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_MoveRulesSetRulesOrder(struct soap*, const char*, const char*, klhst_rule_order_array, struct klhst_MoveRulesSetRulesOrderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_MoveRulesGetRule(struct soap*, const char*, const char*, long, struct klhst_MoveRulesGetRuleResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klhst_MoveRulesGetRules(struct soap*, const char*, const char*, klhst_wstrings, struct klhst_MoveRulesGetRulesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kldpns_AddDiapason(struct soap*, const char*, const char*, param__params, struct kldpns_AddDiapasonResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kldpns_UpdateDiapason(struct soap*, const char*, const char*, long, param__params, struct kldpns_UpdateDiapasonResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kldpns_RemoveDiapason(struct soap*, const char*, const char*, long, struct kldpns_RemoveDiapasonResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kldpns_GetDiapasons(struct soap*, const char*, const char*, klhst_wstrings, long, struct kldpns_GetDiapasonsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kldpns_GetDiapason(struct soap*, const char*, const char*, long, klhst_wstrings, struct kldpns_GetDiapasonResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kldpns_NotifyDpnsTask(struct soap*, const char*, const char*, struct kldpns_NotifyDpnsTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_GetGroups(struct soap*, const char*, const char*, long, long, struct klgrp_GetGroupsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_GetUnassignedGroupId(struct soap*, const char*, const char*, void *, struct klgrp_GetUnassignedGroupIdResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_GetGroupInfo(struct soap*, const char*, const char*, long, param__params, struct klgrp_GetGroupInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_AddGroup(struct soap*, const char*, const char*, param__params, struct klgrp_AddGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_DelGroup(struct soap*, const char*, const char*, long, struct klgrp_DelGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_UpdateGroup(struct soap*, const char*, const char*, long, param__params, struct klgrp_UpdateGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_SetGroupHosts(struct soap*, const char*, const char*, long, param__params, struct klgrp_SetGroupHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_RemoveHosts(struct soap*, const char*, const char*, klgrp_wstrings, struct klgrp_RemoveHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_ResetGroupHostsIterator(struct soap*, const char*, const char*, long, klgrp_wstrings, long, struct klgrp_ResetGroupHostsIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_ReleaseGroupHostsIterator(struct soap*, const char*, const char*, wchar_t *, struct klgrp_ReleaseGroupHostsIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_GetNextGroupHost(struct soap*, const char*, const char*, wchar_t *, long, struct klgrp_GetNextGroupHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_FindHosts(struct soap*, const char*, const char*, wchar_t *, klgrp_wstrings, klgrp_field_order_array, param__params, long, wchar_t *, struct klgrp_FindHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_FindHostsCancel(struct soap*, const char*, const char*, wchar_t *, struct klgrp_FindHostsCancelResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_FindHostsGetAccessor(struct soap*, const char*, const char*, wchar_t *, struct klgrp_FindHostsGetAccessorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_GetSuperGroupId(struct soap*, const char*, const char*, void *, struct klgrp_GetSuperGroupIdResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgrp_FindGroups(struct soap*, const char*, const char*, wchar_t *, klgrp_wstrings, klgrp_field_order_array, param__params, long, wchar_t *, struct klgrp_FindGroupsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_GetPolicyCommonData(struct soap*, const char*, const char*, long, long, struct klpol_GetPolicyCommonDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_GetAllAcivePoliciesForGroup(struct soap*, const char*, const char*, long, struct klpol_GetAllAcivePoliciesForGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_GetSinglePolicyCommonData(struct soap*, const char*, const char*, long, struct klpol_GetSinglePolicyCommonDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_AddPolicy(struct soap*, const char*, const char*, long, struct klpol_policy_common_data, struct klpol_AddPolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_UpdatePolicyCommonData(struct soap*, const char*, const char*, struct klpol_policy_common_data, struct klpol_UpdatePolicyCommonDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_DeletePolicy(struct soap*, const char*, const char*, long, struct klpol_DeletePolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_CopyPolicyEx(struct soap*, const char*, const char*, long, long, bool, struct klpol_CopyPolicyExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_GetSSProxyID(struct soap*, const char*, const char*, long, long, struct klpol_GetSSProxyIDResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_ModifySettings(struct soap*, const char*, const char*, long, struct klpol_ModifySettingsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_MakePolicyActive(struct soap*, const char*, const char*, long, bool, struct klpol_MakePolicyActiveResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_MakePolicyRoaming(struct soap*, const char*, const char*, long, struct klpol_MakePolicyRoamingResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_GetPoliciesForGroup(struct soap*, const char*, const char*, long, long, struct klpol_GetPoliciesForGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_CopyOrMovePolicy(struct soap*, const char*, const char*, long, long, bool, struct klpol_policy_common_data, struct klpol_CopyOrMovePolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_SetOutbreakPolicy(struct soap*, const char*, const char*, klpol_polici_ids, struct klpol_SetOutbreakPolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_GetOutbreakPolicy(struct soap*, const char*, const char*, struct klpol_GetOutbreakPolicyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_SetOutbreakPolicy2(struct soap*, const char*, const char*, param__params, struct klpol_SetOutbreakPolicy2Response &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpol_GetOutbreakPolicy2(struct soap*, const char*, const char*, struct klpol_GetOutbreakPolicy2Response &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprssp_SS_Read(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klprssp_SS_ReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprssp_SS_Write(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, param__params, long, struct klprssp_SS_WriteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprssp_SS_SectionOperation(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klprssp_SS_SectionOperationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprssp_SS_GetNames(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, struct klprssp_SS_GetNamesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprssp_SS_ApplyChanges(struct soap*, const char*, const char*, wchar_t *, struct klprssp_SS_ApplyChangesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klprssp_ReleaseSS(struct soap*, const char*, const char*, wchar_t *, struct klprssp_ReleaseSSResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adhst_GetChildComputers(struct soap*, const char*, const char*, long, klhst_wstrings, long, struct adhst_GetChildComputersResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adhst_GetChildOUs(struct soap*, const char*, const char*, long, klhst_wstrings, long, struct adhst_GetChildOUsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adhst_GetOU(struct soap*, const char*, const char*, long, klhst_wstrings, struct adhst_GetOUResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adhst_UpdateOU(struct soap*, const char*, const char*, long, param__params, struct adhst_UpdateOUResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_GetNextItems(struct soap*, const char*, const char*, wchar_t *, long, struct klgsyn_GetNextItemsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_ReleaseIterator(struct soap*, const char*, const char*, wchar_t *, struct klgsyn_ReleaseIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_AddSyncObjG(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, long, long, bool, struct klgsyn_AddSyncObjGResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_AddSyncObjH(struct soap*, const char*, const char*, wchar_t *, wchar_t *, long, klgsyn_hostids, long, struct klgsyn_AddSyncObjHResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_GetSyncInfo(struct soap*, const char*, const char*, long, klgsyn_wstrings, struct klgsyn_GetSyncInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_RemoveSyncObj(struct soap*, const char*, const char*, long, struct klgsyn_RemoveSyncObjResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_GetSyncHostsInfo(struct soap*, const char*, const char*, long, klgsyn_wstrings, long, struct klgsyn_GetSyncHostsInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_FindHosts(struct soap*, const char*, const char*, long, wchar_t *, klgsyn_wstrings, long, struct klgsyn_FindHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_GetSyncHostsInfo2(struct soap*, const char*, const char*, long, klgsyn_wstrings, klgsyn_field_order_array, long, struct klgsyn_GetSyncHostsInfo2Response &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_FindHosts2(struct soap*, const char*, const char*, long, wchar_t *, klgsyn_wstrings, klgsyn_field_order_array, long, struct klgsyn_FindHosts2Response &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_GetItemsCount(struct soap*, const char*, const char*, wchar_t *, struct klgsyn_GetItemsCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_GetItemsChunk(struct soap*, const char*, const char*, wchar_t *, long, long, struct klgsyn_GetItemsChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klgsyn_ReleaseChunkAccessor(struct soap*, const char*, const char*, wchar_t *, struct klgsyn_ReleaseChunkAccessorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_ForbidTaskForGroup(struct soap*, const char*, const char*, long, long, struct kltsk_ForbidTaskForGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_RunTaskNow(struct soap*, const char*, const char*, long, wchar_t *, wchar_t *, bool, struct kltsk_RunTaskNowResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_SuspendTask(struct soap*, const char*, const char*, long, struct kltsk_SuspendTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_ResumeTask(struct soap*, const char*, const char*, long, struct kltsk_ResumeTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_CancelTask(struct soap*, const char*, const char*, long, struct kltsk_CancelTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_ResetTasksIterator(struct soap*, const char*, const char*, long, bool, struct kltsk_component_id, wchar_t *, bool, struct kltsk_ResetTasksIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetNextTask(struct soap*, const char*, const char*, wchar_t *, struct kltsk_GetNextTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetTaskByID(struct soap*, const char*, const char*, long, struct kltsk_GetTaskByIDResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetTaskStatistics(struct soap*, const char*, const char*, long, struct kltsk_GetTaskStatisticsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_AddTask(struct soap*, const char*, const char*, long, bool, param__params, struct kltsk_AddTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_UpdateTask(struct soap*, const char*, const char*, long, param__params, struct kltsk_UpdateTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_DeleteTask(struct soap*, const char*, const char*, long, struct kltsk_DeleteTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_SetTaskStartEvent(struct soap*, const char*, const char*, long, struct kltsk_component_id, wchar_t *, param__params, struct kltsk_SetTaskStartEventResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetTaskStartEvent(struct soap*, const char*, const char*, long, struct kltsk_GetTaskStartEventResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_ResetHostIteratorForTaskStatus(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, kltsk_wstring_array, long, long, struct kltsk_ResetHostIteratorForTaskStatusResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetNextHostStatus(struct soap*, const char*, const char*, wchar_t *, long, struct kltsk_GetNextHostStatusResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_ResetHostIteratorForTaskStatusEx(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, kltsk_wstring_array, kltsk_field_order_array, long, long, struct kltsk_ResetHostIteratorForTaskStatusExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetHostStatusRecordsCount(struct soap*, const char*, const char*, wchar_t *, struct kltsk_GetHostStatusRecordsCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetHostStatusRecordRange(struct soap*, const char*, const char*, wchar_t *, long, long, struct kltsk_GetHostStatusRecordRangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetAllTasksOfHost(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct kltsk_GetAllTasksOfHostResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltsk_GetTaskGroup(struct soap*, const char*, const char*, long, struct kltsk_GetTaskGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetPackages(struct soap*, const char*, const char*, void *, struct klpkg_GetPackagesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_RenamePackage(struct soap*, const char*, const char*, long, wchar_t *, struct klpkg_RenamePackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetIntranetFolderForNewPackage(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct klpkg_GetIntranetFolderForNewPackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_RecordNewPackage(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klpkg_RecordNewPackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_RemovePackage(struct soap*, const char*, const char*, long, struct klpkg_RemovePackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetIntranetFolderForPackage(struct soap*, const char*, const char*, long, struct klpkg_GetIntranetFolderForPackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_SS_Read(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, struct klpkg_SS_ReadResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_SS_Write(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, param__params, long, long, struct klpkg_SS_WriteResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_SS_SectionOpearation(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, long, long, struct klpkg_SS_SectionOpearationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_SS_GetNames(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, long, struct klpkg_SS_GetNamesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_RemovePackage2(struct soap*, const char*, const char*, long, struct klpkg_RemovePackage2Response &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetLoginScript(struct soap*, const char*, const char*, long, wchar_t *, struct klpkg_GetLoginScriptResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_SetRebootOptions(struct soap*, const char*, const char*, long, bool, bool, long, long, wchar_t *, struct klpkg_SetRebootOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetRebootOptions(struct soap*, const char*, const char*, long, struct klpkg_GetRebootOptionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_RecordNewPackage2(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klpkg_RecordNewPackage2Response &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetLicenseKey(struct soap*, const char*, const char*, long, struct klpkg_GetLicenseKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_SetLicenseKey(struct soap*, const char*, const char*, long, wchar_t *, xsd__hexBinary, bool, struct klpkg_SetLicenseKeyResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_ReadPkgCfgFile(struct soap*, const char*, const char*, long, wchar_t *, struct klpkg_ReadPkgCfgFileResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_WritePkgCfgFile(struct soap*, const char*, const char*, long, wchar_t *, xsd__hexBinary, struct klpkg_WritePkgCfgFileResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_ReadKpdFile(struct soap*, const char*, const char*, long, struct klpkg_ReadKpdFileResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetKpdProfileString(struct soap*, const char*, const char*, long, wchar_t *, wchar_t *, wchar_t *, struct klpkg_GetKpdProfileStringResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_WriteKpdProfileString(struct soap*, const char*, const char*, long, wchar_t *, wchar_t *, wchar_t *, struct klpkg_WriteKpdProfileStringResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_SetRebootOptionsEx(struct soap*, const char*, const char*, long, bool, bool, long, long, wchar_t *, bool, param__params, struct klpkg_SetRebootOptionsExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetRebootOptionsEx(struct soap*, const char*, const char*, long, struct klpkg_GetRebootOptionsExResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_RecordNewPackageAsync(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, struct klpkg_RecordNewPackageAsyncResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetPackageInfo(struct soap*, const char*, const char*, long, struct klpkg_GetPackageInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_GetIncompatibleAppsInfo(struct soap*, const char*, const char*, long, struct klpkg_GetIncompatibleAppsInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klpkg_SetRemoveIncompatibleApps(struct soap*, const char*, const char*, long, bool, struct klpkg_SetRemoveIncompatibleAppsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetReportTypes(struct soap*, const char*, const char*, void *, struct klrpt_GetReportTypesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetReportTypeDetailedData(struct soap*, const char*, const char*, long, struct klrpt_GetReportTypeDetailedDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetReportIds(struct soap*, const char*, const char*, void *, struct klrpt_GetReportIdsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetReports(struct soap*, const char*, const char*, void *, struct klrpt_GetReportsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetReportCommonData(struct soap*, const char*, const char*, long, struct klrpt_GetReportCommonDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetReportDetailedData(struct soap*, const char*, const char*, long, struct klrpt_GetReportDetailedDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_AddReport(struct soap*, const char*, const char*, struct klrpt_common, struct klrpt_details, struct klrpt_AddReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_UpdateReport(struct soap*, const char*, const char*, struct klrpt_common, struct klrpt_details, struct klrpt_UpdateReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_DeleteReport(struct soap*, const char*, const char*, long, struct klrpt_DeleteReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ExecuteReport(struct soap*, const char*, const char*, long, struct klrpt_input, struct klrpt_ExecuteReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetConstantOutputForReportType(struct soap*, const char*, const char*, long, long, struct klrpt_GetConstantOutputForReportTypeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_CreateDefaultReportData(struct soap*, const char*, const char*, long, struct klrpt_CreateDefaultReportDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ExecuteReportAsync(struct soap*, const char*, const char*, long, wchar_t *, struct klrpt_input, struct klrpt_ExecuteReportAsyncResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ExecuteReportAsyncCancel(struct soap*, const char*, const char*, wchar_t *, struct klrpt_ExecuteReportAsyncCancelResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ExecuteReportAsyncGetData(struct soap*, const char*, const char*, wchar_t *, long, struct klrpt_ExecuteReportAsyncGetDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ExecuteSlaveReportAsync(struct soap*, const char*, const char*, struct klrpt_common, struct klrpt_details, param__params, wchar_t *, long, struct klrpt_ExecuteSlaveReportAsyncResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ExecuteSlaveReportAsyncCancel(struct soap*, const char*, const char*, wchar_t *, struct klrpt_ExecuteSlaveReportAsyncCancelResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ExecuteSlaveReportAsyncGetData(struct soap*, const char*, const char*, wchar_t *, long, struct klrpt_ExecuteSlaveReportAsyncGetDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_RequestStatisticsData(struct soap*, const char*, const char*, param__params, wchar_t *, struct klrpt_RequestStatisticsDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_CancelStatisticsRequest(struct soap*, const char*, const char*, wchar_t *, struct klrpt_CancelStatisticsRequestResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetStatisticsData(struct soap*, const char*, const char*, wchar_t *, struct klrpt_GetStatisticsDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_GetFilterSettings(struct soap*, const char*, const char*, long, struct klrpt_GetFilterSettingsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ExecuteReportAsyncCancelWaitingForSlaves(struct soap*, const char*, const char*, wchar_t *, struct klrpt_ExecuteReportAsyncCancelWaitingForSlavesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klrpt_ResetStatisticsData(struct soap*, const char*, const char*, param__params, struct klrpt_ResetStatisticsDataResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_GetChildServers(struct soap*, const char*, const char*, long, struct klsrvh_GetChildServersResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_GetServerInfo(struct soap*, const char*, const char*, long, klsrvh_wstrings, struct klsrvh_GetServerInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_RegisterServer(struct soap*, const char*, const char*, param__params, param__params, struct klsrvh_RegisterServerResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_DelServer(struct soap*, const char*, const char*, long, struct klsrvh_DelServerResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_UpdateServer(struct soap*, const char*, const char*, long, param__params, struct klsrvh_UpdateServerResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_InitialPingMaster(struct soap*, const char*, const char*, param__params, struct klsrvh_InitialPingMasterResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_PingMaster(struct soap*, const char*, const char*, param__params, struct klsrvh_PingMasterResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_PingSlave(struct soap*, const char*, const char*, param__params, struct klsrvh_PingSlaveResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_ForceRetranslateUpdates(struct soap*, const char*, const char*, param__params, struct klsrvh_ForceRetranslateUpdatesResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_DeliverReport(struct soap*, const char*, const char*, wchar_t *, long, long, wchar_t *, param__params, param__params, struct klsrvh_DeliverReportResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_RecreateInstallationPackage(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *, bool, struct klsrvh_RecreateInstallationPackageResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_StartTask(struct soap*, const char*, const char*, wchar_t *, wchar_t *, param__params, struct klsrvh_StartTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_StartRemoteInstallation(struct soap*, const char*, const char*, param__params, param__params, struct klsrvh_StartRemoteInstallationResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_ReportRemoteInstallationResult(struct soap*, const char*, const char*, wchar_t *, param__params, struct klsrvh_ReportRemoteInstallationResultResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_NotifyOnReportResult(struct soap*, const char*, const char*, wchar_t *, long, param__params, struct klsrvh_NotifyOnReportResultResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvh_FindSlaveServers(struct soap*, const char*, const char*, wchar_t *, klgrp_wstrings, klgrp_field_order_array, param__params, long, wchar_t *, struct klsrvh_FindSlaveServersResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvs_GetSharedFolder(struct soap*, const char*, const char*, void *, struct klsrvs_GetSharedFolderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsrvs_ChangeSharedFolder(struct soap*, const char*, const char*, wchar_t *, struct klsrvs_ChangeSharedFolderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnlst_ResetIterator(struct soap*, const char*, const char*, wchar_t *, param__params, klnlst_wstring_array, klnlst_field_order_array, long, struct klnlst_ResetIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnlst_GetRecordCount(struct soap*, const char*, const char*, wchar_t *, struct klnlst_GetRecordCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnlst_GetRecordRange(struct soap*, const char*, const char*, wchar_t *, long, long, struct klnlst_GetRecordRangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnlst_ReleaseIterator(struct soap*, const char*, const char*, wchar_t *, struct klnlst_ReleaseIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnlst_UpdateHostNetworkList(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, klnlst_network_list_item_array, struct klnlst_UpdateHostNetworkListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnlst_AddListItemTask(struct soap*, const char*, const char*, long, param__params, wchar_t *, struct klnlst_AddListItemTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnlst_AddTaskForListItems(struct soap*, const char*, const char*, klnlst_long_array, param__params, wchar_t *, struct klnlst_AddTaskForListItemsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnlst_GetItemInfo(struct soap*, const char*, const char*, long, struct klnlst_GetItemInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnagnlst_CallNetworkListTask(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, param__params, struct klnagnlst_CallNetworkListTaskResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnagnlst_GetItemFileInfo(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct klnagnlst_GetItemFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnagnlst_GetItemFileChunk(struct soap*, const char*, const char*, wchar_t *, wchar_t *, ULONG64, ULONG64, struct klnagnlst_GetItemFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_GetNextFileChunk(struct soap*, const char*, const char*, wchar_t *, wchar_t *, wchar_t *, ULONG64, ULONG64, bool, bool, struct klft_GetNextFileChunkOptions *, struct klft_GetNextFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_GetServerFilesList(struct soap*, const char*, const char*, wchar_t *, struct klft_GetServerFilesListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_GetUpdaterFolderFileInfo(struct soap*, const char*, const char*, wchar_t *, struct klft_GetUpdaterFolderFileInfoOptions *, struct klft_GetUpdaterFolderFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_GetFullFileInfo(struct soap*, const char*, const char*, wchar_t *, struct klft_GetFullFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_GetHostUpdateAgentInfo(struct soap*, const char*, const char*, wchar_t *, struct klft_GetHostUpdateAgentInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klft_SendToClientFullSyncArchive(struct soap*, const char*, const char*, wchar_t *, wchar_t *, bool, struct SOAPFilesInfoList *, struct SOAPSyncFolderOptions *, struct klft_SendToClientFullSyncArchiveResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klfts_RegisterUpdateAgent(struct soap*, const char*, const char*, klfts_update_agent_info, bool, struct klfts_RegisterUpdateAgentResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klfts_ModifyUpdateAgent(struct soap*, const char*, const char*, klfts_update_agent_info, struct klfts_ModifyUpdateAgentResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klfts_UnregisterUpdateAgent(struct soap*, const char*, const char*, wchar_t *, struct klfts_UnregisterUpdateAgentResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klfts_GetDefaultUpdateAgentRegistrationInfo(struct soap*, const char*, const char*, int, struct klfts_GetDefaultUpdateAgentRegistrationInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klfts_GetUpdateAgentsForGroup(struct soap*, const char*, const char*, int, struct klfts_GetUpdateAgentsForGroupResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klfts_GetUpdateAgentInfo(struct soap*, const char*, const char*, wchar_t *, struct klfts_GetUpdateAgentInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klfts_UseUAForSyncFolder(struct soap*, const char*, const char*, wchar_t *, wchar_t *, bool, struct klfts_UseUAForSyncFolderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klfts_GetUseUAForSyncFolder(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct klfts_GetUseUAForSyncFolderResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klcmptrsft_GetCompetitorSoftwareList(struct soap*, const char*, const char*, struct klcmptrsft_GetCompetitorSoftwareLisResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klcmptrsft_GetHostCompetitorSoftwareList(struct soap*, const char*, const char*, long, struct klcmptrsft_GetHostCompetitorSoftwareListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_aklwngt__SessionBegin(struct soap*, const char*, const char*, char *, char *, int, struct aklwngt__SessionBeginResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_aklwngt__SessionEnd(struct soap*, const char*, const char*, char *, struct aklwngt__SessionEndResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_aklwngt__Heartbeat(struct soap*, const char*, const char*, char *, struct aklwngt__sync_info *, struct aklwngt__HeartbeatResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_aklwngt__PutResult(struct soap*, const char*, const char*, char *, struct aklwngt__command *, struct aklwngt__PutResultResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_aklwngt__PutEvents(struct soap*, const char*, const char*, char *, struct aklwngt__event_info_array *, struct aklwngt__PutEventsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_aklwngt__klft_GetFileInfo(struct soap*, const char*, const char*, char *, wchar_t *, struct aklwngt__klft_GetFileInfoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_aklwngt__klft_GetNextFileChunk(struct soap*, const char*, const char*, char *, wchar_t *, ULONG64, ULONG64, struct aklwngt__klft_GetNextFileChunkResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klptch_get_nagent_latest_patch_info(struct soap*, const char*, const char*, param__params, struct klptch_get_nagent_latest_patch_infoResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_GetInvProductsList(struct soap*, const char*, const char*, struct klinv_GetInvProductsListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_GetInvPatchesList(struct soap*, const char*, const char*, struct klinv_GetInvPatchesListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_GetHostInvProductsList(struct soap*, const char*, const char*, long, struct klinv_GetHostInvProductsListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_GetHostInvPatchesList(struct soap*, const char*, const char*, long, struct klinv_GetHostInvPatchesListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_GetSrvCompetitorIniFileInfoList(struct soap*, const char*, const char*, wchar_t *, struct klinv_GetSrvCompetitorIniFileInfoListResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_ResetIterator(struct soap*, const char*, const char*, wchar_t *, klinv_wstring_array, klinv_field_order_array, long, struct klinv_ResetIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_GetRecordCount(struct soap*, const char*, const char*, wchar_t *, struct klinv_GetRecordCountResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_GetRecordRange(struct soap*, const char*, const char*, wchar_t *, long, long, struct klinv_GetRecordRangeResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klinv_ReleaseIterator(struct soap*, const char*, const char*, wchar_t *, struct klinv_ReleaseIteratorResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltrf_ReplaceRestriction(struct soap*, const char*, const char*, kltrf_Restriction, struct kltrf_ReplaceRestrictionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltrf_DeleteRestriction(struct soap*, const char*, const char*, LONG64, struct kltrf_DeleteRestrictionResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_kltrf_GetRestrictions(struct soap*, const char*, const char*, struct kltrf_GetRestrictionsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klnag_SendWakeOnLanOnSubnetsHosts(struct soap*, const char*, const char*, param__params, struct klnag_SendWakeOnLanOnSubnetsHostsResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsnmpagt_PutServerEvent(struct soap*, const char*, const char*, struct klsnmpagt_event, struct klsnmpagt_PutServerEventResponse &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_klsnmpagt_SetAgentConnection(struct soap*, const char*, const char*, wchar_t *, wchar_t *, struct klsnmpagt_SetAgentConnectionResponse &);

/* Skeletons */

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_InitiateRemoteConnection(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_CreateReverseConnection(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_ReverseConnectionReply(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_PingMethod(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_AuthenticationHandshake(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_CreateGatewayConnection(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_TestMethod(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_TestMethod1(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_tr_TrafficControlNotify(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ev_RemoteSubscribe(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ev_RemoteUnsubscribe(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ev_PublishEvent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klspl_GetPermissions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klspl_SetPermissions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_GetTasksParams(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_GetPingTimeout(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_GetState(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_GetStatistics(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_Stop(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_Suspend(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_Resume(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_RunTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_RunMethod(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_GetTasksList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_GetTaskName(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_TaskStop(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_TaskSuspend(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_TaskResume(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_TaskGetState(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_TaskGetCompletion(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprci_TaskReload(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_ResetSubscriptionsIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_ReleaseSubscriptionsIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_GetNextSubscription(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_AddSubscription(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_UpdateSubscription(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_PauseSubscription(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_ResumeSubscription(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_RemoveSubscription(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_ResetEventsIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_SetEventsIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_ResetEventsIteratorEx(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_SetEventsIteratorEx(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_MoveToEventWithIndex(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_GetEventsCount(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_GetNextEventsChunk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_ClearEventsList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_DeleteEvents(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_DeleteOneEventByID(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_DeleteRanges(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_RemoveExpiredEvents(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRES_GetEventStorageFileSize(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_ResetTasksIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_GetTaskByID(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_GetTaskByIDWithPolicyApplied(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_AddTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_UpdateTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_DeleteTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_SetTaskStartEvent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_GetTaskStartEvent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_UpdateTask2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_KLPRTS_ReplaceTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_Close(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_CreateSettingsStorage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_Read(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_Write(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_CreateSection(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_DeleteSection(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_SetTimeout(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_GetNames(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsssrv_AttrRead(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klagent_StartTaskStorageTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klagent_StartComponentEx(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klagent_GetStartedComponentsList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klagent_IsComponentStarted(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klagent_GetComponentStartParameters(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klagent_GetComponentPort(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevprop_ResetIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevprop_GetRecordCount(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevprop_GetRecordRange(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevprop_FindRecordByFirstChars(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevprop_DeleteProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevprop_InitiateDelete(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevprop_CancelDelete(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevprop_ReleaseIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevproc_Process(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_GetDefaultSettings(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_SetDefaultSettings(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_TestNotification(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_SetNotificationLimits(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_GetNotificationLimits(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_GetCommonProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_GetGroupProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_GetTaskProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_SetCommonProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_SetGroupProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klevpnp_SetTaskProperties(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_RemoveStores(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_StartNewIntegration(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_NotifySSChange(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_OnPing(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_WatchdogPing(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_GetRunTimeInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_GetStaticInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_GetStatistics(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_GetInstancePort(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_StartProduct(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_StopProduct(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_OnStartRemoteInstallTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_OnInstallerNotification(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_GetHostPublicKey(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_PutGlobalKeys(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_OnUserForceSyncRequest(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klftbridge_CreateReceiver(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klftbridge_Connect(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klftbridge_GetFileInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klftbridge_GetNextFileChunk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klftbridge_ReleaseReceiver(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_InitiateFileUpload(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_RegisterUpdateAgent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_InitiateServerFileUpload(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_CancelServerFileUpload(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_PutNextFileChunk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_GetSyncFolderDiff(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_GetSyncFolderFileInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_GetSyncFolderFileChunk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sync_putData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sync_Call(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_sync_start(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_UseKeepConnection(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_AddHosts(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_GetHostTasks(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_GetDomains(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_GetDomainHosts(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_GetHostInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_AddDomain(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_DelDomain(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_AddHost(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_DelHost(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_UpdateHost(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_GetHostProducts(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_SS_Read(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_SS_Write(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_SS_CreateSection(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_SS_DeleteSection(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_SS_GetNames(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_CallGetRunTimeInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_CallGetStaticInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_CallGetStatistics(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_CallGetInstancePort(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_NotifyTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klupdt_GetUpdatesInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klupdt_SetBundleOptions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klupdt_SetGeneralOptions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klupdt_GetGeneralOptions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klupdt_GetAvailableUpdatesInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klupdt_GetRequiedUpdatesInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kllicsrv_GetKeysInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kllicsrv_GetKeyInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kllicsrv_DeleteKeyInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kllicsrv_InstallKey(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kllicsrv_UninstallKey(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kllicsrv_GetKeyData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kllicsrv_AdjustFlexibleKey(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kllicsrv_EnumKeys(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_MoveRulesAddRule(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_MoveRulesUpdateRule(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_MoveRulesDeleteRule(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_MoveRulesSetRulesOrder(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_MoveRulesGetRule(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klhst_MoveRulesGetRules(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kldpns_AddDiapason(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kldpns_UpdateDiapason(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kldpns_RemoveDiapason(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kldpns_GetDiapasons(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kldpns_GetDiapason(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kldpns_NotifyDpnsTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_GetGroups(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_GetUnassignedGroupId(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_GetGroupInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_AddGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_DelGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_UpdateGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_SetGroupHosts(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_RemoveHosts(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_ResetGroupHostsIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_ReleaseGroupHostsIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_GetNextGroupHost(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_FindHosts(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_FindHostsCancel(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_FindHostsGetAccessor(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_GetSuperGroupId(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgrp_FindGroups(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_GetPolicyCommonData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_GetAllAcivePoliciesForGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_GetSinglePolicyCommonData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_AddPolicy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_UpdatePolicyCommonData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_DeletePolicy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_CopyPolicyEx(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_GetSSProxyID(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_ModifySettings(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_MakePolicyActive(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_MakePolicyRoaming(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_GetPoliciesForGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_CopyOrMovePolicy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_SetOutbreakPolicy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_GetOutbreakPolicy(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_SetOutbreakPolicy2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpol_GetOutbreakPolicy2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprssp_SS_Read(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprssp_SS_Write(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprssp_SS_SectionOperation(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprssp_SS_GetNames(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprssp_SS_ApplyChanges(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klprssp_ReleaseSS(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_adhst_GetChildComputers(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_adhst_GetChildOUs(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_adhst_GetOU(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_adhst_UpdateOU(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_GetNextItems(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_ReleaseIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_AddSyncObjG(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_AddSyncObjH(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_GetSyncInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_RemoveSyncObj(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_GetSyncHostsInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_FindHosts(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_GetSyncHostsInfo2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_FindHosts2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_GetItemsCount(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_GetItemsChunk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klgsyn_ReleaseChunkAccessor(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_ForbidTaskForGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_RunTaskNow(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_SuspendTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_ResumeTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_CancelTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_ResetTasksIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetNextTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetTaskByID(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetTaskStatistics(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_AddTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_UpdateTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_DeleteTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_SetTaskStartEvent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetTaskStartEvent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_ResetHostIteratorForTaskStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetNextHostStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_ResetHostIteratorForTaskStatusEx(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetHostStatusRecordsCount(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetHostStatusRecordRange(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetAllTasksOfHost(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltsk_GetTaskGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetPackages(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_RenamePackage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetIntranetFolderForNewPackage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_RecordNewPackage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_RemovePackage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetIntranetFolderForPackage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_SS_Read(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_SS_Write(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_SS_SectionOpearation(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_SS_GetNames(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_RemovePackage2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetLoginScript(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_SetRebootOptions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetRebootOptions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_RecordNewPackage2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetLicenseKey(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_SetLicenseKey(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_ReadPkgCfgFile(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_WritePkgCfgFile(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_ReadKpdFile(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetKpdProfileString(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_WriteKpdProfileString(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_SetRebootOptionsEx(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetRebootOptionsEx(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_RecordNewPackageAsync(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetPackageInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_GetIncompatibleAppsInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klpkg_SetRemoveIncompatibleApps(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetReportTypes(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetReportTypeDetailedData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetReportIds(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetReports(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetReportCommonData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetReportDetailedData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_AddReport(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_UpdateReport(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_DeleteReport(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ExecuteReport(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetConstantOutputForReportType(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_CreateDefaultReportData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ExecuteReportAsync(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ExecuteReportAsyncCancel(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ExecuteReportAsyncGetData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ExecuteSlaveReportAsync(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ExecuteSlaveReportAsyncCancel(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ExecuteSlaveReportAsyncGetData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_RequestStatisticsData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_CancelStatisticsRequest(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetStatisticsData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_GetFilterSettings(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ExecuteReportAsyncCancelWaitingForSlaves(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klrpt_ResetStatisticsData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_GetChildServers(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_GetServerInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_RegisterServer(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_DelServer(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_UpdateServer(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_InitialPingMaster(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_PingMaster(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_PingSlave(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_ForceRetranslateUpdates(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_DeliverReport(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_RecreateInstallationPackage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_StartTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_StartRemoteInstallation(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_ReportRemoteInstallationResult(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_NotifyOnReportResult(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvh_FindSlaveServers(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvs_GetSharedFolder(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsrvs_ChangeSharedFolder(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnlst_ResetIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnlst_GetRecordCount(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnlst_GetRecordRange(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnlst_ReleaseIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnlst_UpdateHostNetworkList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnlst_AddListItemTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnlst_AddTaskForListItems(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnlst_GetItemInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnagnlst_CallNetworkListTask(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnagnlst_GetItemFileInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnagnlst_GetItemFileChunk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_GetNextFileChunk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_GetServerFilesList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_GetUpdaterFolderFileInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_GetFullFileInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_GetHostUpdateAgentInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klft_SendToClientFullSyncArchive(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klfts_RegisterUpdateAgent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klfts_ModifyUpdateAgent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klfts_UnregisterUpdateAgent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klfts_GetDefaultUpdateAgentRegistrationInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klfts_GetUpdateAgentsForGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klfts_GetUpdateAgentInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klfts_UseUAForSyncFolder(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klfts_GetUseUAForSyncFolder(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klcmptrsft_GetCompetitorSoftwareList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klcmptrsft_GetHostCompetitorSoftwareList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_aklwngt__SessionBegin(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_aklwngt__SessionEnd(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_aklwngt__Heartbeat(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_aklwngt__PutResult(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_aklwngt__PutEvents(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_aklwngt__klft_GetFileInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_aklwngt__klft_GetNextFileChunk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klptch_get_nagent_latest_patch_info(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_GetInvProductsList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_GetInvPatchesList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_GetHostInvProductsList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_GetHostInvPatchesList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_GetSrvCompetitorIniFileInfoList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_ResetIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_GetRecordCount(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_GetRecordRange(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klinv_ReleaseIterator(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltrf_ReplaceRestriction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltrf_DeleteRestriction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_kltrf_GetRestrictions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klnag_SendWakeOnLanOnSubnetsHosts(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsnmpagt_PutServerEvent(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_klsnmpagt_SetAgentConnection(struct soap*);

SOAP_END_NAMESPACE(soap)

#endif

/* end of soapStub.h */
