/*!
 * (C) "Kaspersky Lab"
 *
 * \file aginstsoapstub.h
 * \author Generated by createsoapheader.pl
 * \brief SOAP stub declaration and registration code
 */

#include "soapH.h"

#include "std/gsoap/stubrouter.h"

/* Declaration of functions */

int klagent_StartTaskStorageTaskStub(  struct soap *soap, 
							xsd__wstring	idTask,
							xsd__wstring	luid,
							xsd__int		lTimeout,
							struct klagent_StartTaskStorageTaskResponse
							 &r);

int klagent_StartComponentExStub(  struct soap *soap, 
				SOAPComponentId		componentId,
				param__params		startParams,
				xsd__wstring		asyncId,
				xsd__int			flags,
				xsd__int			asyncTimeout,
				xsd__int			timeoutStop,
				xsd__int			logonType,
				xsd__wstring		user,
				xsd__wstring		domain,
				xsd__wstring		password,
				param__params		extraInParams,
				struct klagent_StartComponentExResponse &r);

int klagent_GetStartedComponentsListStub(  struct soap *soap,  SOAPComponentId filter, 
							struct klagent_GetStartedComponentsListResponse &r );

int klagent_IsComponentStartedStub(  struct soap *soap,  SOAPComponentId componentId, 
						  struct klagent_IsComponentStartedResponse &r );

int klagent_GetComponentStartParametersStub(  struct soap *soap,  SOAPComponentId componentId, 
						struct klagent_GetComponentStartParametersResponse &r );

int klagent_GetComponentPortStub(  struct soap *soap, 	SOAPComponentId componentId, 
									struct klagent_GetComponentPortResponse &r );

namespace KLAGINST
{

	struct KLSTRT::SOAPStubFunc aginst_funcs_ptrs[7]=
	{
		{ L"klagent_StartTaskStorageTask",		 (void*)klagent_StartTaskStorageTaskStub },
		{ L"klagent_StartComponentEx",		 (void*)klagent_StartComponentExStub },
		{ L"klagent_GetStartedComponentsList",		 (void*)klagent_GetStartedComponentsListStub },
		{ L"klagent_IsComponentStarted",		 (void*)klagent_IsComponentStartedStub },
		{ L"klagent_GetComponentStartParameters",		 (void*)klagent_GetComponentStartParametersStub },
		{ L"klagent_GetComponentPort",		 (void*)klagent_GetComponentPortStub },
		{ L"", NULL },
	};

	void RegisterGSOAPStubFunctions()
	{
		KLSTRT::RegisterGSOAPStubFunctions( aginst_funcs_ptrs, (sizeof(aginst_funcs_ptrs)/sizeof(aginst_funcs_ptrs[0])) );
	}

	void UnregisterGSOAPStubFunctions()
	{
		KLSTRT::UnregisterGSOAPStubFunctions( aginst_funcs_ptrs, (sizeof(aginst_funcs_ptrs)/sizeof(aginst_funcs_ptrs[0])) );
	}

} // end namespace KLAGINST
