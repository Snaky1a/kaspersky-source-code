/*!
 * (C) "Kaspersky Lab"
 *
 * \file naginstsoapstub.h
 * \author Generated by createsoapheader.pl
 * \brief SOAP stub declaration and registration code
 */

#include "soapH.h"

#include "std/gsoap/stubrouter.h"

/* Declaration of functions */

int klnag_RemoveStoresStub(  struct soap *soap, 
                    struct klnag_StoresList stores,
					struct klnag_RemoveStoresResponse&r);

int klnag_StartNewIntegrationStub(  struct soap *soap, 
                    xsd__wstring    hostid,
					struct klnag_StartNewIntegrationResponse&r);

int klnag_NotifySSChangeStub(  struct soap *soap, 
					xsd__wstring	product,
					xsd__wstring	version,
                    xsd__wstring	section,
                    xsd__int        ss_type,
					struct klnag_NotifySSChangeResponse&r);

int klnag_OnPingStub(  struct soap *soap, 
					param__params info,
					struct klnag_OnPingResponse&r);

int klnag_WatchdogPingStub(  struct soap *soap, 
				  struct klnag_WatchdogPingResponse&r);

int klnag_GetRunTimeInfoStub(  struct soap *soap, 
					param__params filter,
					struct klnag_GetRunTimeInfoResponse&r);

int klnag_GetStaticInfoStub(  struct soap *soap, 
					param__params filter,
					struct klnag_GetStaticInfoResponse&r);

int klnag_GetStatisticsStub(  struct soap *soap, 
					param__params filter,
					struct klnag_GetStatisticsResponse&r);

int klnag_GetInstancePortStub(  struct soap *soap, 
					xsd__wstring	product,
					xsd__wstring	version,
					xsd__wstring	component,
					xsd__wstring	instance,
					struct klnag_GetInstancePortResponse&r);

int klnag_StartProductStub(  struct soap *soap, 
                        xsd__wstring productname,
                        xsd__wstring productversion,
                        param__params extraparams,
                        struct klnag_StartProductResponse &r);

int klnag_StopProductStub(  struct soap *soap, 
                        xsd__wstring productname,
                        xsd__wstring productversion,
                        param__params extraparams,
                        struct klnag_StopProductResponse &r);

int klnag_OnStartRemoteInstallTaskStub(  struct soap *soap, 
						xsd__int		taskId,
                        struct klnag_OnStartRemoteInstallTaskResponse &r);

int klnag_OnInstallerNotificationStub(  struct soap *soap, 
                        param__params info, 
                        struct klnag_OnInstallerNotificationResponse& r);

int klnag_GetHostPublicKeyStub(  struct soap *soap, 
                        struct klnag_GetHostPublicKeyResponse& r);

int klnag_PutGlobalKeysStub(  struct soap *soap, 
                        xsd__base64Binary   key1,
                        xsd__base64Binary   key2, 
                        struct klnag_PutGlobalKeysResponse& r);

int klnag_OnUserForceSyncRequestStub(  struct soap *soap, 
                        param__params info,
                        struct klnag_OnUserForceSyncRequestResponse& r);

namespace KLNAGINST
{

	struct KLSTRT::SOAPStubFunc naginst_funcs_ptrs[17]=
	{
		{ L"klnag_RemoveStores",		 (void*)klnag_RemoveStoresStub },
		{ L"klnag_StartNewIntegration",		 (void*)klnag_StartNewIntegrationStub },
		{ L"klnag_NotifySSChange",		 (void*)klnag_NotifySSChangeStub },
		{ L"klnag_OnPing",		 (void*)klnag_OnPingStub },
		{ L"klnag_WatchdogPing",		 (void*)klnag_WatchdogPingStub },
		{ L"klnag_GetRunTimeInfo",		 (void*)klnag_GetRunTimeInfoStub },
		{ L"klnag_GetStaticInfo",		 (void*)klnag_GetStaticInfoStub },
		{ L"klnag_GetStatistics",		 (void*)klnag_GetStatisticsStub },
		{ L"klnag_GetInstancePort",		 (void*)klnag_GetInstancePortStub },
		{ L"klnag_StartProduct",		 (void*)klnag_StartProductStub },
		{ L"klnag_StopProduct",		 (void*)klnag_StopProductStub },
		{ L"klnag_OnStartRemoteInstallTask",		 (void*)klnag_OnStartRemoteInstallTaskStub },
		{ L"klnag_OnInstallerNotification",		 (void*)klnag_OnInstallerNotificationStub },
		{ L"klnag_GetHostPublicKey",		 (void*)klnag_GetHostPublicKeyStub },
		{ L"klnag_PutGlobalKeys",		 (void*)klnag_PutGlobalKeysStub },
		{ L"klnag_OnUserForceSyncRequest",		 (void*)klnag_OnUserForceSyncRequestStub },
		{ L"", NULL },
	};

	void RegisterGSOAPStubFunctions()
	{
		KLSTRT::RegisterGSOAPStubFunctions( naginst_funcs_ptrs, (sizeof(naginst_funcs_ptrs)/sizeof(naginst_funcs_ptrs[0])) );
	}

	void UnregisterGSOAPStubFunctions()
	{
		KLSTRT::UnregisterGSOAPStubFunctions( naginst_funcs_ptrs, (sizeof(naginst_funcs_ptrs)/sizeof(naginst_funcs_ptrs[0])) );
	}

} // end namespace KLNAGINST
