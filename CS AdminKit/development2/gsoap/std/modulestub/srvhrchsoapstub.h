/*!
 * (C) "Kaspersky Lab"
 *
 * \file srvhrchsoapstub.h
 * \author Generated by createsoapheader.pl
 * \brief SOAP stub declaration and registration code
 */

#include "soapH.h"

#include "std/gsoap/stubrouter.h"

/* Declaration of functions */

int klsrvh_GetChildServersStub(  struct soap *soap, 
	xsd__int nGroupId,
	struct klsrvh_GetChildServersResponse&r);

int klsrvh_GetServerInfoStub(  struct soap *soap, 
	xsd__int nId,
	klsrvh_wstrings	fields,
	struct klsrvh_GetServerInfoResponse&r);

int klsrvh_RegisterServerStub(  struct soap *soap, 
	param__params	baseInfo,
	param__params	addInfo,
	struct klsrvh_RegisterServerResponse&r);

int klsrvh_DelServerStub(  struct soap *soap, 
	xsd__int	nId,
	struct klsrvh_DelServerResponse&r);

int klsrvh_UpdateServerStub(  struct soap *soap, 
	  xsd__int		nId,
	  param__params	info,
	  struct klsrvh_UpdateServerResponse&r);

int klsrvh_InitialPingMasterStub(  struct soap *soap, 
	param__params	info,
	struct klsrvh_InitialPingMasterResponse&r);

int klsrvh_PingMasterStub(  struct soap *soap, 
	param__params	info,
	struct klsrvh_PingMasterResponse&r);

int klsrvh_PingSlaveStub(  struct soap *soap, 
	param__params	info,
	struct klsrvh_PingSlaveResponse&r);

int klsrvh_ForceRetranslateUpdatesStub(  struct soap *soap, 
	param__params	info,
	struct klsrvh_ForceRetranslateUpdatesResponse&r);

int klsrvh_DeliverReportStub(  struct soap *soap, 
	xsd__wstring wstrRequestId,
	xsd__int nRecipientDeliverLevel,
	xsd__int nSenderDeliverLevel,
	xsd__wstring wstrSenderInstanceId,
	param__params parDeliveryParams,
	param__params parReportResult,
	struct klsrvh_DeliverReportResponse&r);

int klsrvh_RecreateInstallationPackageStub(  struct soap *soap, 						
	xsd__wstring wstrPackageGUID,
	xsd__wstring wstrNewPackageName,
	xsd__wstring wstrFileId,
	xsd__wstring wstrProductName,
	xsd__wstring wstrProductVersion,
	xsd__wstring wstrProductDisplName,
	xsd__wstring wstrProductDisplVersion,
	xsd__boolean bReplaceExisting,
	struct klsrvh_RecreateInstallationPackageResponse&r);

int klsrvh_StartTaskStub(  struct soap *soap, 
	xsd__wstring wstrTaskTsId,
	xsd__wstring wstrTaskTypeName,
	param__params	parParams,
	struct klsrvh_StartTaskResponse&r);

int klsrvh_StartRemoteInstallationStub(  struct soap *soap, 						
	param__params parTaskInfo,
	param__params parTaskParams,
	struct klsrvh_StartRemoteInstallationResponse&r);

int klsrvh_ReportRemoteInstallationResultStub(  struct soap *soap, 						
	xsd__wstring wstrTaskTsId,
	param__params parResultTaskStateEvent,
	struct klsrvh_ReportRemoteInstallationResultResponse&r);

int klsrvh_NotifyOnReportResultStub(  struct soap *soap, 
    xsd__wstring	wstrRequestId,
	xsd__int		nResultCode,
	param__params	paramParams,
    struct klsrvh_NotifyOnReportResultResponse&r );

int klsrvh_FindSlaveServersStub(  struct soap *soap, 
                    xsd__wstring	            wstrFilter,
					klgrp_wstrings	            arrFields,
					klgrp_field_order_array     arrFieldsToOrder,
					param__params				params,
					xsd__int		            lTimeout,
                    xsd__wstring	            wstrRequestId,
					struct klsrvh_FindSlaveServersResponse& r);

namespace KLSRVHRCH
{

	struct KLSTRT::SOAPStubFunc srvhrch_funcs_ptrs[17]=
	{
		{ L"klsrvh_GetChildServers",		 (void*)klsrvh_GetChildServersStub },
		{ L"klsrvh_GetServerInfo",		 (void*)klsrvh_GetServerInfoStub },
		{ L"klsrvh_RegisterServer",		 (void*)klsrvh_RegisterServerStub },
		{ L"klsrvh_DelServer",		 (void*)klsrvh_DelServerStub },
		{ L"klsrvh_UpdateServer",		 (void*)klsrvh_UpdateServerStub },
		{ L"klsrvh_InitialPingMaster",		 (void*)klsrvh_InitialPingMasterStub },
		{ L"klsrvh_PingMaster",		 (void*)klsrvh_PingMasterStub },
		{ L"klsrvh_PingSlave",		 (void*)klsrvh_PingSlaveStub },
		{ L"klsrvh_ForceRetranslateUpdates",		 (void*)klsrvh_ForceRetranslateUpdatesStub },
		{ L"klsrvh_DeliverReport",		 (void*)klsrvh_DeliverReportStub },
		{ L"klsrvh_RecreateInstallationPackage",		 (void*)klsrvh_RecreateInstallationPackageStub },
		{ L"klsrvh_StartTask",		 (void*)klsrvh_StartTaskStub },
		{ L"klsrvh_StartRemoteInstallation",		 (void*)klsrvh_StartRemoteInstallationStub },
		{ L"klsrvh_ReportRemoteInstallationResult",		 (void*)klsrvh_ReportRemoteInstallationResultStub },
		{ L"klsrvh_NotifyOnReportResult",		 (void*)klsrvh_NotifyOnReportResultStub },
		{ L"klsrvh_FindSlaveServers",		 (void*)klsrvh_FindSlaveServersStub },
		{ L"", NULL },
	};

	void RegisterGSOAPStubFunctions()
	{
		KLSTRT::RegisterGSOAPStubFunctions( srvhrch_funcs_ptrs, (sizeof(srvhrch_funcs_ptrs)/sizeof(srvhrch_funcs_ptrs[0])) );
	}

	void UnregisterGSOAPStubFunctions()
	{
		KLSTRT::UnregisterGSOAPStubFunctions( srvhrch_funcs_ptrs, (sizeof(srvhrch_funcs_ptrs)/sizeof(srvhrch_funcs_ptrs[0])) );
	}

} // end namespace KLSRVHRCH
