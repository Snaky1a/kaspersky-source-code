/*!
 * (C) "Kaspersky Lab"
 *
 * \file prtssoapstub.h
 * \author Generated by createsoapheader.pl
 * \brief SOAP stub declaration and registration code
 */

#include "soapH.h"

#include "std/gsoap/stubrouter.h"

/* Declaration of functions */

int KLPRTS_ResetTasksIteratorStub(  struct soap *soap, xsd__wstring sServerObjectID,
							  SOAPComponentId cidFilter, 
							  xsd__wstring sTaskNameFilter,
							  struct KLPRTS_RESET_TASKS_ITERATOR_RESPONSE &rc);

int KLPRTS_GetTaskByIDStub(  struct soap *soap, xsd__wstring sServerObjectID,
					   xsd__wstring TaskID, 
					   struct KLPRTS_GET_TASK_BY_ID_RESPONSE &rc);

int KLPRTS_GetTaskByIDWithPolicyAppliedStub(  struct soap *soap, xsd__wstring sServerObjectID,
					   xsd__wstring TaskID, 
					   struct KLPRTS_GET_TASK_BY_ID_WPA_RESPONSE &rc);

int KLPRTS_AddTaskStub(  struct soap *soap, xsd__wstring sServerObjectID,
				   param__params parTaskParams, 
				   struct KLPRTS_ADD_TASK_RESPONSE &rc);

int KLPRTS_UpdateTaskStub(  struct soap *soap, xsd__wstring sServerObjectID,
					  xsd__wstring TaskID, 
					  param__params parTaskParams, 
					  struct param_error& rc);

int KLPRTS_DeleteTaskStub(  struct soap *soap, xsd__wstring sServerObjectID, 
					  xsd__wstring TaskID, 
					  struct param_error& rc);

int KLPRTS_SetTaskStartEventStub(  struct soap *soap, xsd__wstring sServerObjectID,
							 xsd__wstring TaskID, 
							 SOAPComponentId cidEventFilter, 
							 xsd__wstring sEventType, 
							 param__params parBodyFilter, 
							 struct param_error& rc);

int KLPRTS_GetTaskStartEventStub(  struct soap *soap, xsd__wstring sServerObjectID,
							 xsd__wstring TaskID, 
							 struct KLPRTS_GET_TASK_START_EVENT_RESPONSE  &rc);

int KLPRTS_UpdateTask2Stub(  struct soap *soap, xsd__wstring sServerObjectID,
					   xsd__wstring TaskID, 
					   param__params parTaskParams, 
					   struct param_error& rc);

int KLPRTS_ReplaceTaskStub(  struct soap *soap, xsd__wstring sServerObjectID,
					   xsd__wstring TaskID, 
					   param__params parTaskParams, 
					   struct param_error& rc);

namespace KLPRTS
{

	struct KLSTRT::SOAPStubFunc prts_funcs_ptrs[11]=
	{
		{ L"KLPRTS_ResetTasksIterator",		 (void*)KLPRTS_ResetTasksIteratorStub },
		{ L"KLPRTS_GetTaskByID",		 (void*)KLPRTS_GetTaskByIDStub },
		{ L"KLPRTS_GetTaskByIDWithPolicyApplied",		 (void*)KLPRTS_GetTaskByIDWithPolicyAppliedStub },
		{ L"KLPRTS_AddTask",		 (void*)KLPRTS_AddTaskStub },
		{ L"KLPRTS_UpdateTask",		 (void*)KLPRTS_UpdateTaskStub },
		{ L"KLPRTS_DeleteTask",		 (void*)KLPRTS_DeleteTaskStub },
		{ L"KLPRTS_SetTaskStartEvent",		 (void*)KLPRTS_SetTaskStartEventStub },
		{ L"KLPRTS_GetTaskStartEvent",		 (void*)KLPRTS_GetTaskStartEventStub },
		{ L"KLPRTS_UpdateTask2",		 (void*)KLPRTS_UpdateTask2Stub },
		{ L"KLPRTS_ReplaceTask",		 (void*)KLPRTS_ReplaceTaskStub },
		{ L"", NULL },
	};

	void RegisterGSOAPStubFunctions()
	{
		KLSTRT::RegisterGSOAPStubFunctions( prts_funcs_ptrs, (sizeof(prts_funcs_ptrs)/sizeof(prts_funcs_ptrs[0])) );
	}

	void UnregisterGSOAPStubFunctions()
	{
		KLSTRT::UnregisterGSOAPStubFunctions( prts_funcs_ptrs, (sizeof(prts_funcs_ptrs)/sizeof(prts_funcs_ptrs[0])) );
	}

} // end namespace KLPRTS
