/*!
 * (C) "Kaspersky Lab"
 *
 * \file prcisoapstub.h
 * \author Generated by createsoapheader.pl
 * \brief SOAP stub declaration and registration code
 */

#include "soapH.h"

#include "std/gsoap/stubrouter.h"

/* Declaration of functions */

int klprci_GetTasksParamsStub(  struct soap *soap, 
						xsd__wstring	ID,
						xsd__int		idtask,
						param__params	filter,
						struct klprci_GetTasksParamsResponse
							&r);

int klprci_GetPingTimeoutStub(  struct soap *soap, xsd__wstring ID,
							 struct klprci_GetPingTimeoutResponse &r);

int klprci_GetStateStub(  struct soap *soap, xsd__wstring ID,
							 struct klprci_GetStateResponse &r);

int klprci_GetStatisticsStub(  struct soap *soap, xsd__wstring ID,
							 param__params	statisticsIn,
							 struct klprci_GetStatisticsResponse &r);

int klprci_StopStub(  struct soap *soap, xsd__wstring ID,
							 struct klprci_StopResponse &r);

int klprci_SuspendStub(  struct soap *soap, xsd__wstring ID,
							 struct klprci_SuspendResponse &r);

int klprci_ResumeStub(  struct soap *soap, xsd__wstring ID,
							 struct klprci_ResumeResponse &r);

int klprci_RunTaskStub(  struct soap *soap, xsd__wstring ID,
							 xsd__wstring name,
							 param__params settings,
							 xsd__wstring asyncID,
							 xsd__int timeout,
							 struct klprci_RunTaskResponse &r);

int klprci_RunMethodStub(  struct soap *soap,         xsd__wstring ID,
                             xsd__wstring name,
							 param__params settings,
							 xsd__int timeout,
							 struct klprci_RunMethodResponse &r);

int klprci_GetTasksListStub(  struct soap *soap, xsd__wstring ID,
							 struct klprci_GetTasksListResponse &r);

int klprci_GetTaskNameStub(  struct soap *soap, xsd__wstring ID,
							 xsd__int idTask,
							struct klprci_GetTaskNameResponse
							 &r);

int klprci_TaskStopStub(  struct soap *soap, xsd__wstring ID,
							 xsd__int idTask,
							 struct klprci_TaskStopResponse &r);

int klprci_TaskSuspendStub(  struct soap *soap, xsd__wstring ID,
							 xsd__int idTask,
							 struct klprci_TaskSuspendResponse &r);

int klprci_TaskResumeStub(  struct soap *soap, xsd__wstring ID,
							 xsd__int idTask,
							 struct klprci_TaskResumeResponse &r);

int klprci_TaskGetStateStub(  struct soap *soap, xsd__wstring ID,
							 xsd__int idTask,
							 struct klprci_GetTaskStateResponse& r);

int klprci_TaskGetCompletionStub(  struct soap *soap, xsd__wstring ID,
							 xsd__int idTask,
							 struct klprci_GetTaskCompletionResponse& r);

int klprci_TaskReloadStub(  struct soap *soap, 
                        xsd__wstring    ID,
						xsd__int        idTask,
                        param__params   settings,
						struct klprci_TaskReloadResponse& r);

namespace KLPRCI
{

	struct KLSTRT::SOAPStubFunc prci_funcs_ptrs[18]=
	{
		{ L"klprci_GetTasksParams",		 (void*)klprci_GetTasksParamsStub },
		{ L"klprci_GetPingTimeout",		 (void*)klprci_GetPingTimeoutStub },
		{ L"klprci_GetState",		 (void*)klprci_GetStateStub },
		{ L"klprci_GetStatistics",		 (void*)klprci_GetStatisticsStub },
		{ L"klprci_Stop",		 (void*)klprci_StopStub },
		{ L"klprci_Suspend",		 (void*)klprci_SuspendStub },
		{ L"klprci_Resume",		 (void*)klprci_ResumeStub },
		{ L"klprci_RunTask",		 (void*)klprci_RunTaskStub },
		{ L"klprci_RunMethod",		 (void*)klprci_RunMethodStub },
		{ L"klprci_GetTasksList",		 (void*)klprci_GetTasksListStub },
		{ L"klprci_GetTaskName",		 (void*)klprci_GetTaskNameStub },
		{ L"klprci_TaskStop",		 (void*)klprci_TaskStopStub },
		{ L"klprci_TaskSuspend",		 (void*)klprci_TaskSuspendStub },
		{ L"klprci_TaskResume",		 (void*)klprci_TaskResumeStub },
		{ L"klprci_TaskGetState",		 (void*)klprci_TaskGetStateStub },
		{ L"klprci_TaskGetCompletion",		 (void*)klprci_TaskGetCompletionStub },
		{ L"klprci_TaskReload",		 (void*)klprci_TaskReloadStub },
		{ L"", NULL },
	};

	void RegisterGSOAPStubFunctions()
	{
		KLSTRT::RegisterGSOAPStubFunctions( prci_funcs_ptrs, (sizeof(prci_funcs_ptrs)/sizeof(prci_funcs_ptrs[0])) );
	}

	void UnregisterGSOAPStubFunctions()
	{
		KLSTRT::UnregisterGSOAPStubFunctions( prci_funcs_ptrs, (sizeof(prci_funcs_ptrs)/sizeof(prci_funcs_ptrs[0])) );
	}

} // end namespace KLPRCI
