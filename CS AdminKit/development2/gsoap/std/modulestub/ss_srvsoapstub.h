/*!
 * (C) "Kaspersky Lab"
 *
 * \file ss_srvsoapstub.h
 * \author Generated by createsoapheader.pl
 * \brief SOAP stub declaration and registration code
 */

#include "soapH.h"

#include "std/gsoap/stubrouter.h"

/* Declaration of functions */

int klsssrv_CloseStub(  struct soap *soap, 
                    xsd__wstring    wstrIdSSS,
                    xsd__wstring    wstrProxyId,
                    struct klsssrv_CloseResponse
                    & r);

int klsssrv_CreateSettingsStorageStub(  struct soap *soap, 
                    xsd__wstring    wstrIdSSS,
                    xsd__wstring    wstrLocation,
					xsd__int        nCreationFlags,
					xsd__int        nAccessFlags,
                    param__params   options,
                    struct klsssrv_CreateSettingsStorageResponse
                    & r);

int klsssrv_ReadStub(  struct soap *soap, 
                    xsd__wstring   wstrIdSSS,
                    xsd__wstring   wstrProxyId,
                    xsd__wstring   wstrName,
                    xsd__wstring   wstrVersion,
                    xsd__wstring   wstrSection,
                    param__params  extra,
                    struct klsssrv_ReadResponse
                    & r);

int klsssrv_WriteStub(  struct soap *soap, 
                    xsd__wstring   wstrIdSSS,
                    xsd__wstring   wstrProxyId,
                    xsd__wstring   wstrName,
                    xsd__wstring   wstrVersion,
                    xsd__wstring   wstrSection,
                    xsd__int       nFlags,
                    param__params  data,
                    struct klsssrv_WriteResponse
                    & r);

int klsssrv_CreateSectionStub(  struct soap *soap, 
                    xsd__wstring   wstrIdSSS,
                    xsd__wstring   wstrProxyId,
                    xsd__wstring   wstrName,
                    xsd__wstring   wstrVersion,
                    xsd__wstring   wstrSection,
                    struct klsssrv_CreateSectionResponse
                    & r);

int klsssrv_DeleteSectionStub(  struct soap *soap, 
                    xsd__wstring   wstrIdSSS,
                    xsd__wstring   wstrProxyId,
                    xsd__wstring   wstrName,
                    xsd__wstring   wstrVersion,
                    xsd__wstring   wstrSection,
                    struct klsssrv_DeleteSectionResponse
                    & r);

int klsssrv_SetTimeoutStub(  struct soap *soap, 
                    xsd__wstring    wstrIdSSS,
                    xsd__wstring    wstrProxyId,
                    xsd__int        lTimeout,
                    struct klsssrv_SetTimeoutResponse
                    & r);

int klsssrv_GetNamesStub(  struct soap *soap, 
                    xsd__wstring   wstrIdSSS,
                    xsd__wstring   wstrProxyId,
                    xsd__wstring   wstrName,
                    xsd__wstring   wstrVersion,
                    struct klsssrv_GetNamesResponse
                    & r);

int klsssrv_AttrReadStub(  struct soap *soap, 
                    xsd__wstring   wstrIdSSS,
                    xsd__wstring   wstrProxyId,
                    xsd__wstring   wstrName,
                    xsd__wstring   wstrVersion,
                    xsd__wstring   wstrSection,
                    xsd__wstring   wstrAttr,
                    struct klsssrv_AttrReadResponse
                    & r);

namespace KLSS_SRV
{

	struct KLSTRT::SOAPStubFunc ss_srv_funcs_ptrs[10]=
	{
		{ L"klsssrv_Close",		 (void*)klsssrv_CloseStub },
		{ L"klsssrv_CreateSettingsStorage",		 (void*)klsssrv_CreateSettingsStorageStub },
		{ L"klsssrv_Read",		 (void*)klsssrv_ReadStub },
		{ L"klsssrv_Write",		 (void*)klsssrv_WriteStub },
		{ L"klsssrv_CreateSection",		 (void*)klsssrv_CreateSectionStub },
		{ L"klsssrv_DeleteSection",		 (void*)klsssrv_DeleteSectionStub },
		{ L"klsssrv_SetTimeout",		 (void*)klsssrv_SetTimeoutStub },
		{ L"klsssrv_GetNames",		 (void*)klsssrv_GetNamesStub },
		{ L"klsssrv_AttrRead",		 (void*)klsssrv_AttrReadStub },
		{ L"", NULL },
	};

	void RegisterGSOAPStubFunctions()
	{
		KLSTRT::RegisterGSOAPStubFunctions( ss_srv_funcs_ptrs, (sizeof(ss_srv_funcs_ptrs)/sizeof(ss_srv_funcs_ptrs[0])) );
	}

	void UnregisterGSOAPStubFunctions()
	{
		KLSTRT::UnregisterGSOAPStubFunctions( ss_srv_funcs_ptrs, (sizeof(ss_srv_funcs_ptrs)/sizeof(ss_srv_funcs_ptrs[0])) );
	}

} // end namespace KLSS_SRV
