/*!
 * (C) "Kaspersky Lab"
 *
 * \file trsoapstub.h
 * \author Generated by createsoapheader.pl
 * \brief SOAP stub declaration and registration code
 */

#include "soapH.h"

#include "std/gsoap/stubrouter.h"

/* Declaration of functions */

int tr_InitiateRemoteConnectionStub(  struct soap *soap,  char *remoteName, char *localName, int *result );

int tr_CreateReverseConnectionStub(  struct soap *soap,  char *remoteClientConnName, char *connName,
			char *remoteClientLoc, char *authClientName, int gatewayConnFlag,
			int connPingTimeout, int connPriority, 
			SOAPPermissions *permissions, SOAPConnectionOptions *options,
			int *result );

int tr_ReverseConnectionReplyStub(  struct soap *soap,  char *remoteServerConnName, 
			char *clientConnName, int pingTimeout, 
			SOAPPermissions *permissions, SOAPConnectionOptions *options,
			int *result );

int tr_PingMethodStub(  struct soap *soap,  char *remoteClientConnName, int *result );

int tr_AuthenticationHandshakeStub(  struct soap *soap,  xsd__wstring inClientIdentity, xsd__hexBinary inString, 
							   int connPriority,
							   struct tr_AuthHandshakeResult &r );

int tr_CreateGatewayConnectionStub(  struct soap *soap,  xsd__wstring localName, struct TransportLocList *processNamesList, 
							   int nextProcessPos, int connectTimeout, int *result );

int tr_TestMethodStub(  struct soap *soap, int num, char *str, int *result);

int tr_TestMethod1Stub(  struct soap *soap, int num, char *str, struct tr_TestMethod1Result &r);

int tr_TrafficControlNotifyStub(  struct soap *soap, int error, int *result);

namespace KLTR
{

	struct KLSTRT::SOAPStubFunc tr_funcs_ptrs[10]=
	{
		{ L"tr_InitiateRemoteConnection",		 (void*)tr_InitiateRemoteConnectionStub },
		{ L"tr_CreateReverseConnection",		 (void*)tr_CreateReverseConnectionStub },
		{ L"tr_ReverseConnectionReply",		 (void*)tr_ReverseConnectionReplyStub },
		{ L"tr_PingMethod",		 (void*)tr_PingMethodStub },
		{ L"tr_AuthenticationHandshake",		 (void*)tr_AuthenticationHandshakeStub },
		{ L"tr_CreateGatewayConnection",		 (void*)tr_CreateGatewayConnectionStub },
		{ L"tr_TestMethod",		 (void*)tr_TestMethodStub },
		{ L"tr_TestMethod1",		 (void*)tr_TestMethod1Stub },
		{ L"tr_TrafficControlNotify",		 (void*)tr_TrafficControlNotifyStub },
		{ L"", NULL },
	};

	void RegisterGSOAPStubFunctions()
	{
		KLSTRT::RegisterGSOAPStubFunctions( tr_funcs_ptrs, (sizeof(tr_funcs_ptrs)/sizeof(tr_funcs_ptrs[0])) );
	}

	void UnregisterGSOAPStubFunctions()
	{
		KLSTRT::UnregisterGSOAPStubFunctions( tr_funcs_ptrs, (sizeof(tr_funcs_ptrs)/sizeof(tr_funcs_ptrs[0])) );
	}

} // end namespace KLTR
