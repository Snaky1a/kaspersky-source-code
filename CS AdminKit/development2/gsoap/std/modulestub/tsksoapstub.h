/*!
 * (C) "Kaspersky Lab"
 *
 * \file tsksoapstub.h
 * \author Generated by createsoapheader.pl
 * \brief SOAP stub declaration and registration code
 */

#include "soapH.h"

#include "std/gsoap/stubrouter.h"

/* Declaration of functions */

int kltsk_ForbidTaskForGroupStub(  struct soap *soap, 
    xsd__int            nGroupId,
    xsd__int            nTaskId,
    struct kltsk_ForbidTaskForGroupResponse&r );

int kltsk_RunTaskNowStub(  struct soap *soap, 
    xsd__int nTaskId,
    xsd__wstring wstrDomainName,
    xsd__wstring wstrHostName,
    xsd__boolean bEvenIfAlreadySucceeded,
    struct kltsk_RunTaskNowResponse&r );

int kltsk_SuspendTaskStub(  struct soap *soap, 
    xsd__int nTaskId,
    struct kltsk_SuspendTaskResponse&r );

int kltsk_ResumeTaskStub(  struct soap *soap, 
    xsd__int nTaskId,
    struct kltsk_ResumeTaskResponse&r );

int kltsk_CancelTaskStub(  struct soap *soap, 
    xsd__int nTaskId,
    struct kltsk_CancelTaskResponse&r );

int kltsk_ResetTasksIteratorStub(  struct soap *soap, 
    xsd__int            nGroupId,
    xsd__boolean        bGroupIdSignificant,
    struct kltsk_component_id  compIdFilter,
    xsd__wstring        taskName,
    xsd__boolean        bIncludeSupergroups,
    struct kltsk_ResetTasksIteratorResponse&r );

int kltsk_GetNextTaskStub(  struct soap *soap, 
    xsd__wstring	iteratorId,
    struct kltsk_GetNextTaskResponse&r );

int kltsk_GetTaskByIDStub(  struct soap *soap, 
    xsd__int    nTaskId,
    struct kltsk_GetTaskByIDResponse&r );

int kltsk_GetTaskStatisticsStub(  struct soap *soap, 
    xsd__int    nTaskId,
    struct kltsk_GetTaskStatisticsResponse&r );

int kltsk_AddTaskStub(  struct soap *soap, 
    xsd__int            nGroupId,
    xsd__boolean        bGroupIdSignificant,
    param__params       parTaskData,
    struct kltsk_AddTaskResponse&r );

int kltsk_UpdateTaskStub(  struct soap *soap, 
    xsd__int            nTaskId,
    param__params       parTaskData,
    struct kltsk_UpdateTaskResponse&r );

int kltsk_DeleteTaskStub(  struct soap *soap, 
    xsd__int            nTaskId,
    struct kltsk_DeleteTaskResponse&r );

int kltsk_SetTaskStartEventStub(  struct soap *soap, 
    xsd__int            nTaskId,
    struct kltsk_component_id  compIdFilter,
    xsd__wstring        eventType,
    param__params       bodyFilter,
    struct kltsk_SetTaskStartEventResponse&r );

int kltsk_GetTaskStartEventStub(  struct soap *soap, 
    xsd__int            nTaskId,
    struct kltsk_GetTaskStartEventResponse&r );

int kltsk_ResetHostIteratorForTaskStatusStub(  struct soap *soap, 
    xsd__wstring            wstrTaskId,
    xsd__wstring            wstrDomainName,
    xsd__wstring            wstrHostName,
    kltsk_wstring_array     arrFields,
    xsd__int                hsHostStateMask,
    xsd__int                nLifetime,
    struct kltsk_ResetHostIteratorForTaskStatusResponse&r );

int kltsk_GetNextHostStatusStub(  struct soap *soap, 
	xsd__wstring	iteratorId,
	xsd__int		nCount,
    struct kltsk_GetNextHostStatusResponse&r );

int kltsk_ResetHostIteratorForTaskStatusExStub(  struct soap *soap, 
    xsd__wstring            wstrTaskId,
    xsd__wstring            wstrDomainName,
    xsd__wstring            wstrHostName,
    kltsk_wstring_array     arrFields,
	kltsk_field_order_array	arrFiledsToOrder,
    xsd__int                hsHostStateMask,
    xsd__int                nLifetime,
    struct kltsk_ResetHostIteratorForTaskStatusExResponse&r );

int kltsk_GetHostStatusRecordsCountStub(  struct soap *soap, 
	xsd__wstring	iteratorId,
    struct kltsk_GetHostStatusRecordsCountResponse&r );

int kltsk_GetHostStatusRecordRangeStub(  struct soap *soap, 
	xsd__wstring	iteratorId,
	xsd__int		nStart,
	xsd__int		nEnd,
    struct kltsk_GetHostStatusRecordRangeResponse&r );

int kltsk_GetAllTasksOfHostStub(  struct soap *soap, 
	xsd__wstring	wstrDomainName,
    xsd__wstring	wstrHostName,
    struct kltsk_GetAllTasksOfHostResponse&r );

int kltsk_GetTaskGroupStub(  struct soap *soap, 
    xsd__int    nTaskId,
    struct kltsk_GetTaskGroupResponse&r );

namespace KLTSK
{

	struct KLSTRT::SOAPStubFunc tsk_funcs_ptrs[22]=
	{
		{ L"kltsk_ForbidTaskForGroup",		 (void*)kltsk_ForbidTaskForGroupStub },
		{ L"kltsk_RunTaskNow",		 (void*)kltsk_RunTaskNowStub },
		{ L"kltsk_SuspendTask",		 (void*)kltsk_SuspendTaskStub },
		{ L"kltsk_ResumeTask",		 (void*)kltsk_ResumeTaskStub },
		{ L"kltsk_CancelTask",		 (void*)kltsk_CancelTaskStub },
		{ L"kltsk_ResetTasksIterator",		 (void*)kltsk_ResetTasksIteratorStub },
		{ L"kltsk_GetNextTask",		 (void*)kltsk_GetNextTaskStub },
		{ L"kltsk_GetTaskByID",		 (void*)kltsk_GetTaskByIDStub },
		{ L"kltsk_GetTaskStatistics",		 (void*)kltsk_GetTaskStatisticsStub },
		{ L"kltsk_AddTask",		 (void*)kltsk_AddTaskStub },
		{ L"kltsk_UpdateTask",		 (void*)kltsk_UpdateTaskStub },
		{ L"kltsk_DeleteTask",		 (void*)kltsk_DeleteTaskStub },
		{ L"kltsk_SetTaskStartEvent",		 (void*)kltsk_SetTaskStartEventStub },
		{ L"kltsk_GetTaskStartEvent",		 (void*)kltsk_GetTaskStartEventStub },
		{ L"kltsk_ResetHostIteratorForTaskStatus",		 (void*)kltsk_ResetHostIteratorForTaskStatusStub },
		{ L"kltsk_GetNextHostStatus",		 (void*)kltsk_GetNextHostStatusStub },
		{ L"kltsk_ResetHostIteratorForTaskStatusEx",		 (void*)kltsk_ResetHostIteratorForTaskStatusExStub },
		{ L"kltsk_GetHostStatusRecordsCount",		 (void*)kltsk_GetHostStatusRecordsCountStub },
		{ L"kltsk_GetHostStatusRecordRange",		 (void*)kltsk_GetHostStatusRecordRangeStub },
		{ L"kltsk_GetAllTasksOfHost",		 (void*)kltsk_GetAllTasksOfHostStub },
		{ L"kltsk_GetTaskGroup",		 (void*)kltsk_GetTaskGroupStub },
		{ L"", NULL },
	};

	void RegisterGSOAPStubFunctions()
	{
		KLSTRT::RegisterGSOAPStubFunctions( tsk_funcs_ptrs, (sizeof(tsk_funcs_ptrs)/sizeof(tsk_funcs_ptrs[0])) );
	}

	void UnregisterGSOAPStubFunctions()
	{
		KLSTRT::UnregisterGSOAPStubFunctions( tsk_funcs_ptrs, (sizeof(tsk_funcs_ptrs)/sizeof(tsk_funcs_ptrs[0])) );
	}

} // end namespace KLTSK
