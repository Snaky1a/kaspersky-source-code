/* soapStub.h
   Generated by gSOAP 2.7.0d from soapheader.h
   Copyright (C) 2001-2004 Genivia, Inc. All Rights Reserved.
   This software is released under one of the following three licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
   See README.txt for further details.
*/
#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

SOAP_BEGIN_NAMESPACE(soap)

/* Enumerations */

/* Classes and Structs */

/* xsd:anyType: */
class SOAP_CMAC xsd__anyType
{
public:
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 6; } /* = unique id SOAP_TYPE_xsd__anyType */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* xsd:anySimpleType: */
class SOAP_CMAC xsd__anySimpleType : public xsd__anyType
{
public:
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_xsd__anySimpleType */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:anyURI schema type: */
class SOAP_CMAC xsd__anyURI_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_xsd__anyURI_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:boolean schema type: */
class SOAP_CMAC xsd__boolean_ : public xsd__anySimpleType
{
public:
	bool __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_xsd__boolean_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:date schema type: */
class SOAP_CMAC xsd__date_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_xsd__date_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:dateTime schema type: */
class SOAP_CMAC xsd__dateTime_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_xsd__dateTime_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:double schema type: */
class SOAP_CMAC xsd__double_ : public xsd__anySimpleType
{
public:
	double __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_xsd__double_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:duration schema type: */
class SOAP_CMAC xsd__duration_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_xsd__duration_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:float schema type: */
class SOAP_CMAC xsd__float_ : public xsd__anySimpleType
{
public:
	float __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_xsd__float_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:time schema type: */
class SOAP_CMAC xsd__time_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_xsd__time_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:decimal schema type: */
class SOAP_CMAC xsd__decimal_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_xsd__decimal_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:integer schema type: */
class SOAP_CMAC xsd__integer_ : public xsd__decimal_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_xsd__integer_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:long schema type: */
class SOAP_CMAC xsd__long_ : public xsd__integer_
{
public:
	LONG64 __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_xsd__long_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:int schema type: */
class SOAP_CMAC xsd__int_ : public xsd__long_
{
public:
	long __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_xsd__int_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:short schema type: */
class SOAP_CMAC xsd__short_ : public xsd__int_
{
public:
	short __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_xsd__short_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:byte schema type: */
class SOAP_CMAC xsd__byte_ : public xsd__short_
{
public:
	char __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_xsd__byte_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:nonPositiveInteger schema type: */
class SOAP_CMAC xsd__nonPositiveInteger_ : public xsd__integer_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_xsd__nonPositiveInteger_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:negativeInteger schema type: */
class SOAP_CMAC xsd__negativeInteger_ : public xsd__nonPositiveInteger_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_xsd__negativeInteger_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:nonNegativeInteger schema type: */
class SOAP_CMAC xsd__nonNegativeInteger_ : public xsd__integer_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE_xsd__nonNegativeInteger_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:positiveInteger schema type: */
class SOAP_CMAC xsd__positiveInteger_ : public xsd__nonNegativeInteger_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE_xsd__positiveInteger_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:unsignedLong schema type: */
class SOAP_CMAC xsd__unsignedLong_ : public xsd__nonNegativeInteger_
{
public:
	ULONG64 __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE_xsd__unsignedLong_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:unsignedInt schema type: */
class SOAP_CMAC xsd__unsignedInt_ : public xsd__unsignedLong_
{
public:
	unsigned long __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE_xsd__unsignedInt_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:unsignedShort schema type: */
class SOAP_CMAC xsd__unsignedShort_ : public xsd__unsignedInt_
{
public:
	unsigned short __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE_xsd__unsignedShort_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:unsignedByte schema type: */
class SOAP_CMAC xsd__unsignedByte_ : public xsd__unsignedShort_
{
public:
	unsigned char __item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE_xsd__unsignedByte_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:wstring schema type: */
class SOAP_CMAC xsd__wstring_ : public xsd__anySimpleType
{
public:
	wchar_t *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE_xsd__wstring_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:string schema type: */
class SOAP_CMAC xsd__string_ : public xsd__anySimpleType
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE_xsd__string_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:normalizedString schema type: */
class SOAP_CMAC xsd__normalizedString_ : public xsd__string_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE_xsd__normalizedString_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Primitive xsd:token schema type: */
class SOAP_CMAC xsd__token_ : public xsd__normalizedString_
{
public:
	char *__item;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE_xsd__token_ */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary : public xsd__anySimpleType
{
public:
	unsigned char *__ptr;
	int __size;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* hexBinary schema type: */
class SOAP_CMAC xsd__hexBinary : public xsd__anySimpleType
{
public:
	unsigned char *__ptr;
	int __size;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE_xsd__hexBinary */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAPComponentId: */
class SOAP_CMAC SOAPComponentId
{
public:
	SOAPComponentId();	/* required element */
	wchar_t *productName;	/* optional element */
	wchar_t *version;	/* optional element */
	wchar_t *componentName;	/* optional element */
	wchar_t *instanceId;	/* optional element */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE_SOAPComponentId */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP encoded array of SOAPComponentId schema type: */
struct SOAPComponentIdsList
{
	SOAPComponentId *__ptr;
	int __size;
};

/* SOAP encoded array of xsd:wstring schema type: */
class SOAP_CMAC param_error_loc_args
{
public:
	wchar_t **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE_param_error_loc_args */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* param-error-loc: */
class SOAP_CMAC param_error_loc
{
public:
	long format_id;	/* required element */
	wchar_t *format;	/* optional element */
	wchar_t *locmodule;	/* optional element */
	param_error_loc_args args;	/* required element */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE_param_error_loc */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* param-error: */
struct param_error
{
	long code;	/* required element */
	wchar_t *module;	/* optional element */
	char *file;	/* optional element */
	long line;	/* required element */
	wchar_t *message;	/* optional element */
	param_error_loc *locdata;	/* optional element */
};

/* param:value: */
class SOAP_CMAC param__value
{
public:
	xsd__anyType *data;	/* optional element */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE_param__value */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* param:entry: */
class SOAP_CMAC param__entry
{
public:
	wchar_t *name;	/* optional element */
	param__value value;	/* required element */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE_param__entry */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Sequence of param:node schema type: */
class SOAP_CMAC param__node
{
public:
	param__entry *__ptr;
	int __size;
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE_param__node */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* param:params: */
class SOAP_CMAC param__params : public xsd__anyType
{
public:
	param__node *node;	/* optional element */
	virtual int getType();	/* required element */
	long checksum;	/* required element */
	xsd__base64Binary binfmt;	/* required element */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE_param__params */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* Sequence of param:arrayvalue schema type: */
class SOAP_CMAC param__arrayvalue : public xsd__anyType
{
public:
	param__value *__ptr;
	int __size;
	virtual int getType();	/* required element */
public:
	virtual int soap_type() const { return 126; } /* = unique id SOAP_TYPE_param__arrayvalue */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* transient type: */
struct message_desc_t
{
	long requestFlag;	/* transient */
	long messageId;	/* transient */
};

/* SOAP Header: */
struct SOAP_ENV__Header
{
	struct message_desc_t messDesc;	/* external */
};

/* SOAPPermissions: */
class SOAP_CMAC SOAPPermissions
{
public:
	ULONG64 Allow;	/* required element */
	ULONG64 Deny;	/* required element */
	wchar_t *UserAccountName;	/* optional element */
public:
	virtual int soap_type() const { return 134; } /* = unique id SOAP_TYPE_SOAPPermissions */
	virtual void soap_default(struct soap*); 
	virtual void soap_serialize(struct soap*) const;
	virtual void soap_mark(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*); 
};

/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element */
	char *SOAP_ENV__Node;	/* optional element */
	char *SOAP_ENV__Role;	/* optional element */
};

/* SOAP-ENV:Detail: */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};

/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element */
	char *faultstring;	/* optional element */
	char *faultactor;	/* optional element */
	struct SOAP_ENV__Detail *detail;	/* optional element */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element */
	char *SOAP_ENV__Reason;	/* optional element */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element */
};

/* Types With Custom (De)serializers: */
typedef struct message_desc_t message_desc;

/* Typedefs */
typedef char *_XML;
typedef char *_QName;
typedef char *xsd__anyURI;
typedef bool xsd__boolean;
typedef char *xsd__date;
typedef char *xsd__dateTime;
typedef double xsd__double;
typedef char *xsd__duration;
typedef float xsd__float;
typedef char *xsd__time;
typedef char *xsd__decimal;
typedef char *xsd__integer;
typedef LONG64 xsd__long;
typedef long xsd__int;
typedef short xsd__short;
typedef char xsd__byte;
typedef char *xsd__nonPositiveInteger;
typedef char *xsd__negativeInteger;
typedef char *xsd__nonNegativeInteger;
typedef char *xsd__positiveInteger;
typedef ULONG64 xsd__unsignedLong;
typedef unsigned long xsd__unsignedInt;
typedef unsigned short xsd__unsignedShort;
typedef unsigned char xsd__unsignedByte;
typedef wchar_t *xsd__wstring;
typedef char *xsd__string;
typedef char *xsd__normalizedString;
typedef char *xsd__token;
typedef bool param__null;

/* Extern */

/* Remote Methods */

/* Stubs */

/* Skeletons */

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_END_NAMESPACE(soap)

#endif

/* end of soapStub.h */
