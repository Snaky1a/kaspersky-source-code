# Makefile.in generated by automake 1.8.2 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





SOURCES = $(libmscabd_la_SOURCES) $(libmschmd_la_SOURCES) $(libmspack_la_SOURCES) $(test_cabd_md5_SOURCES) $(test_cabd_test_SOURCES) $(test_cabextract_md5_SOURCES) $(test_cabrip_SOURCES) $(test_chmd_md5_SOURCES) $(test_chminfo_SOURCES) $(test_chmx_SOURCES)

srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/libmspack
pkglibdir = $(libdir)/libmspack
pkgincludedir = $(includedir)/libmspack
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
noinst_PROGRAMS = test/cabd_md5$(EXEEXT) test/cabd_test$(EXEEXT) \
	test/cabextract_md5$(EXEEXT) test/cabrip$(EXEEXT) \
	test/chmd_md5$(EXEEXT) test/chmx$(EXEEXT) \
	test/chminfo$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/configure AUTHORS \
	COPYING.LIB ChangeLog INSTALL NEWS TODO config.guess \
	config.sub depcomp install-sh ltmain.sh missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(mkdir_p)
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = $(DESTDIR)$(libdir) $(DESTDIR)$(includedir)
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libmscabd_la_LIBADD =
am_libmscabd_la_OBJECTS = system.lo cabd.lo lzxd.lo mszipd.lo qtmd.lo
libmscabd_la_OBJECTS = $(am_libmscabd_la_OBJECTS)
libmschmd_la_LIBADD =
am_libmschmd_la_OBJECTS = system.lo chmd.lo lzxd.lo
libmschmd_la_OBJECTS = $(am_libmschmd_la_OBJECTS)
libmspack_la_LIBADD =
am_libmspack_la_OBJECTS = system.lo cabc.lo cabd.lo chmc.lo chmd.lo \
	hlpc.lo hlpd.lo litc.lo litd.lo kwajc.lo kwajd.lo szddc.lo \
	szddd.lo lzxc.lo lzxd.lo mszipc.lo mszipd.lo qtmd.lo
libmspack_la_OBJECTS = $(am_libmspack_la_OBJECTS)
PROGRAMS = $(noinst_PROGRAMS)
am_test_cabd_md5_OBJECTS = cabd_md5.$(OBJEXT) md5.$(OBJEXT)
test_cabd_md5_OBJECTS = $(am_test_cabd_md5_OBJECTS)
test_cabd_md5_DEPENDENCIES = libmscabd.la
am__dirstamp = $(am__leading_dot)dirstamp
am_test_cabd_test_OBJECTS = cabd_test.$(OBJEXT)
test_cabd_test_OBJECTS = $(am_test_cabd_test_OBJECTS)
test_cabd_test_DEPENDENCIES = libmscabd.la
am_test_cabextract_md5_OBJECTS = cabextract_md5.$(OBJEXT) \
	md5.$(OBJEXT)
test_cabextract_md5_OBJECTS = $(am_test_cabextract_md5_OBJECTS)
test_cabextract_md5_LDADD = $(LDADD)
am_test_cabrip_OBJECTS = cabrip.$(OBJEXT)
test_cabrip_OBJECTS = $(am_test_cabrip_OBJECTS)
test_cabrip_DEPENDENCIES = libmscabd.la
am_test_chmd_md5_OBJECTS = chmd_md5.$(OBJEXT) md5.$(OBJEXT)
test_chmd_md5_OBJECTS = $(am_test_chmd_md5_OBJECTS)
test_chmd_md5_DEPENDENCIES = libmschmd.la
am_test_chminfo_OBJECTS = chminfo.$(OBJEXT)
test_chminfo_OBJECTS = $(am_test_chminfo_OBJECTS)
test_chminfo_DEPENDENCIES = libmschmd.la
am_test_chmx_OBJECTS = chmx.$(OBJEXT)
test_chmx_OBJECTS = $(am_test_chmx_OBJECTS)
test_chmx_DEPENDENCIES = libmschmd.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/cabc.Plo ./$(DEPDIR)/cabd.Plo \
	./$(DEPDIR)/cabd_md5.Po ./$(DEPDIR)/cabd_test.Po \
	./$(DEPDIR)/cabextract_md5.Po \
	./$(DEPDIR)/cabrip.Po ./$(DEPDIR)/chmc.Plo \
	./$(DEPDIR)/chmd.Plo ./$(DEPDIR)/chmd_md5.Po \
	./$(DEPDIR)/chminfo.Po ./$(DEPDIR)/chmx.Po \
	./$(DEPDIR)/hlpc.Plo ./$(DEPDIR)/hlpd.Plo \
	./$(DEPDIR)/kwajc.Plo ./$(DEPDIR)/kwajd.Plo \
	./$(DEPDIR)/litc.Plo ./$(DEPDIR)/litd.Plo \
	./$(DEPDIR)/lzxc.Plo ./$(DEPDIR)/lzxd.Plo \
	./$(DEPDIR)/md5.Po ./$(DEPDIR)/mszipc.Plo \
	./$(DEPDIR)/mszipd.Plo ./$(DEPDIR)/qtmd.Plo \
	./$(DEPDIR)/system.Plo ./$(DEPDIR)/szddc.Plo \
	./$(DEPDIR)/szddd.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libmscabd_la_SOURCES) $(libmschmd_la_SOURCES) \
	$(libmspack_la_SOURCES) $(test_cabd_md5_SOURCES) \
	$(test_cabd_test_SOURCES) $(test_cabextract_md5_SOURCES) \
	$(test_cabrip_SOURCES) $(test_chmd_md5_SOURCES) \
	$(test_chminfo_SOURCES) $(test_chmx_SOURCES)
DIST_SOURCES = $(libmscabd_la_SOURCES) $(libmschmd_la_SOURCES) \
	$(libmspack_la_SOURCES) $(test_cabd_md5_SOURCES) \
	$(test_cabd_test_SOURCES) $(test_cabextract_md5_SOURCES) \
	$(test_cabrip_SOURCES) $(test_chmd_md5_SOURCES) \
	$(test_chminfo_SOURCES) $(test_chmx_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = aclocal-1.8
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.8
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = makeinfo
OBJEXT = o
PACKAGE = libmspack
PACKAGE_BUGREPORT = kyzer@4u.net
PACKAGE_NAME = libmspack
PACKAGE_STRING = libmspack 0.0.20040308alpha
PACKAGE_TARNAME = libmspack
PACKAGE_VERSION = 0.0.20040308alpha
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.0.20040308alpha
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/shiyafetdinov/cs adminkit/cablib/libmspack-0.0.20040308alpha/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

# add "-DDEBUG" to enable debug output
# add "-DMSPACK_NO_DEFAULT_SYSTEM" to remove default mspack_system
MSPACK_FLAGS = 
EXTRA_DIST = debian doc test/test_files
AM_CPPFLAGS = -I$(srcdir)/mspack
AM_CFLAGS = -std=c99 -Wall -Wsign-compare -Wconversion -pedantic \
			$(MSPACK_FLAGS)

lib_LTLIBRARIES = libmspack.la
include_HEADERS = mspack/mspack.h
noinst_LTLIBRARIES = libmscabd.la libmschmd.la
libmspack_la_SOURCES = mspack/mspack.h \
			mspack/system.h mspack/system.c \
			mspack/cab.h mspack/cabc.c mspack/cabd.c \
			mspack/chm.h mspack/chmc.c mspack/chmd.c \
			mspack/hlp.h mspack/hlpc.c mspack/hlpd.c \
			mspack/lit.h mspack/litc.c mspack/litd.c \
			mspack/kwaj.h mspack/kwajc.c mspack/kwajd.c \
			mspack/szdd.h mspack/szddc.c mspack/szddd.c \
			mspack/lzx.h mspack/lzxc.c mspack/lzxd.c \
			mspack/mszip.h mspack/mszipc.c mspack/mszipd.c \
			mspack/qtm.h mspack/qtmd.c \
			mspack/lzss.h mspack/des.h mspack/sha.h

libmspack_la_LDFLAGS = -export-symbols-regex '^mspack_' -version-info 1:0:1
libmscabd_la_SOURCES = mspack/mspack.h \
			mspack/system.h mspack/system.c \
			mspack/cab.h mspack/cabd.c \
			mspack/lzx.h mspack/lzxd.c \
			mspack/mszip.h mspack/mszipd.c \
			mspack/qtm.h mspack/qtmd.c

libmscabd_la_LDFLAGS = -export-symbols-regex '^mspack_'
libmschmd_la_SOURCES = mspack/mspack.h \
			mspack/system.h mspack/system.c \
			mspack/chm.h mspack/chmd.c \
			mspack/lzx.h mspack/lzxd.c

libmschmd_la_LDFLAGS = -export-symbols-regex '^mspack_'
test_chmx_SOURCES = test/chmx.c libmschmd.la
test_chmx_LDADD = libmschmd.la
test_chmd_md5_SOURCES = test/chmd_md5.c test/md5.c test/md5.h libmschmd.la
test_chmd_md5_LDADD = libmschmd.la
test_cabd_md5_SOURCES = test/cabd_md5.c test/md5.c test/md5.h libmspack.la
test_cabd_md5_LDADD = libmscabd.la
test_cabextract_md5_SOURCES = test/cabextract_md5.c test/md5.c test/md5.h
test_cabd_test_SOURCES = test/cabd_test.c libmspack.la
test_cabd_test_LDADD = libmscabd.la
test_cabrip_SOURCES = test/cabrip.c libmspack.la
test_cabrip_LDADD = libmscabd.la
test_chminfo_SOURCES = test/chminfo.c libmschmd.la
test_chminfo_LDADD = libmschmd.la
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkdir_p) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmscabd.la: $(libmscabd_la_OBJECTS) $(libmscabd_la_DEPENDENCIES) 
	$(LINK)  $(libmscabd_la_LDFLAGS) $(libmscabd_la_OBJECTS) $(libmscabd_la_LIBADD) $(LIBS)
libmschmd.la: $(libmschmd_la_OBJECTS) $(libmschmd_la_DEPENDENCIES) 
	$(LINK)  $(libmschmd_la_LDFLAGS) $(libmschmd_la_OBJECTS) $(libmschmd_la_LIBADD) $(LIBS)
libmspack.la: $(libmspack_la_OBJECTS) $(libmspack_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libmspack_la_LDFLAGS) $(libmspack_la_OBJECTS) $(libmspack_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
test/$(am__dirstamp):
	@$(mkdir_p) test
	@: > test/$(am__dirstamp)
test/cabd_md5$(EXEEXT): $(test_cabd_md5_OBJECTS) $(test_cabd_md5_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/cabd_md5$(EXEEXT)
	$(LINK) $(test_cabd_md5_LDFLAGS) $(test_cabd_md5_OBJECTS) $(test_cabd_md5_LDADD) $(LIBS)
test/cabd_test$(EXEEXT): $(test_cabd_test_OBJECTS) $(test_cabd_test_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/cabd_test$(EXEEXT)
	$(LINK) $(test_cabd_test_LDFLAGS) $(test_cabd_test_OBJECTS) $(test_cabd_test_LDADD) $(LIBS)
test/cabextract_md5$(EXEEXT): $(test_cabextract_md5_OBJECTS) $(test_cabextract_md5_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/cabextract_md5$(EXEEXT)
	$(LINK) $(test_cabextract_md5_LDFLAGS) $(test_cabextract_md5_OBJECTS) $(test_cabextract_md5_LDADD) $(LIBS)
test/cabrip$(EXEEXT): $(test_cabrip_OBJECTS) $(test_cabrip_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/cabrip$(EXEEXT)
	$(LINK) $(test_cabrip_LDFLAGS) $(test_cabrip_OBJECTS) $(test_cabrip_LDADD) $(LIBS)
test/chmd_md5$(EXEEXT): $(test_chmd_md5_OBJECTS) $(test_chmd_md5_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/chmd_md5$(EXEEXT)
	$(LINK) $(test_chmd_md5_LDFLAGS) $(test_chmd_md5_OBJECTS) $(test_chmd_md5_LDADD) $(LIBS)
test/chminfo$(EXEEXT): $(test_chminfo_OBJECTS) $(test_chminfo_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/chminfo$(EXEEXT)
	$(LINK) $(test_chminfo_LDFLAGS) $(test_chminfo_OBJECTS) $(test_chminfo_LDADD) $(LIBS)
test/chmx$(EXEEXT): $(test_chmx_OBJECTS) $(test_chmx_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/chmx$(EXEEXT)
	$(LINK) $(test_chmx_LDFLAGS) $(test_chmx_OBJECTS) $(test_chmx_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cabc.Plo
include ./$(DEPDIR)/cabd.Plo
include ./$(DEPDIR)/cabd_md5.Po
include ./$(DEPDIR)/cabd_test.Po
include ./$(DEPDIR)/cabextract_md5.Po
include ./$(DEPDIR)/cabrip.Po
include ./$(DEPDIR)/chmc.Plo
include ./$(DEPDIR)/chmd.Plo
include ./$(DEPDIR)/chmd_md5.Po
include ./$(DEPDIR)/chminfo.Po
include ./$(DEPDIR)/chmx.Po
include ./$(DEPDIR)/hlpc.Plo
include ./$(DEPDIR)/hlpd.Plo
include ./$(DEPDIR)/kwajc.Plo
include ./$(DEPDIR)/kwajd.Plo
include ./$(DEPDIR)/litc.Plo
include ./$(DEPDIR)/litd.Plo
include ./$(DEPDIR)/lzxc.Plo
include ./$(DEPDIR)/lzxd.Plo
include ./$(DEPDIR)/md5.Po
include ./$(DEPDIR)/mszipc.Plo
include ./$(DEPDIR)/mszipd.Plo
include ./$(DEPDIR)/qtmd.Plo
include ./$(DEPDIR)/system.Plo
include ./$(DEPDIR)/szddc.Plo
include ./$(DEPDIR)/szddd.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

system.o: mspack/system.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT system.o -MD -MP -MF "$(DEPDIR)/system.Tpo" -c -o system.o `test -f 'mspack/system.c' || echo '$(srcdir)/'`mspack/system.c; \
	then mv -f "$(DEPDIR)/system.Tpo" "$(DEPDIR)/system.Po"; else rm -f "$(DEPDIR)/system.Tpo"; exit 1; fi
#	source='mspack/system.c' object='system.o' libtool=no \
#	depfile='$(DEPDIR)/system.Po' tmpdepfile='$(DEPDIR)/system.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o system.o `test -f 'mspack/system.c' || echo '$(srcdir)/'`mspack/system.c

system.obj: mspack/system.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT system.obj -MD -MP -MF "$(DEPDIR)/system.Tpo" -c -o system.obj `if test -f 'mspack/system.c'; then $(CYGPATH_W) 'mspack/system.c'; else $(CYGPATH_W) '$(srcdir)/mspack/system.c'; fi`; \
	then mv -f "$(DEPDIR)/system.Tpo" "$(DEPDIR)/system.Po"; else rm -f "$(DEPDIR)/system.Tpo"; exit 1; fi
#	source='mspack/system.c' object='system.obj' libtool=no \
#	depfile='$(DEPDIR)/system.Po' tmpdepfile='$(DEPDIR)/system.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o system.obj `if test -f 'mspack/system.c'; then $(CYGPATH_W) 'mspack/system.c'; else $(CYGPATH_W) '$(srcdir)/mspack/system.c'; fi`

system.lo: mspack/system.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT system.lo -MD -MP -MF "$(DEPDIR)/system.Tpo" -c -o system.lo `test -f 'mspack/system.c' || echo '$(srcdir)/'`mspack/system.c; \
	then mv -f "$(DEPDIR)/system.Tpo" "$(DEPDIR)/system.Plo"; else rm -f "$(DEPDIR)/system.Tpo"; exit 1; fi
#	source='mspack/system.c' object='system.lo' libtool=yes \
#	depfile='$(DEPDIR)/system.Plo' tmpdepfile='$(DEPDIR)/system.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o system.lo `test -f 'mspack/system.c' || echo '$(srcdir)/'`mspack/system.c

cabd.o: mspack/cabd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd.o -MD -MP -MF "$(DEPDIR)/cabd.Tpo" -c -o cabd.o `test -f 'mspack/cabd.c' || echo '$(srcdir)/'`mspack/cabd.c; \
	then mv -f "$(DEPDIR)/cabd.Tpo" "$(DEPDIR)/cabd.Po"; else rm -f "$(DEPDIR)/cabd.Tpo"; exit 1; fi
#	source='mspack/cabd.c' object='cabd.o' libtool=no \
#	depfile='$(DEPDIR)/cabd.Po' tmpdepfile='$(DEPDIR)/cabd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd.o `test -f 'mspack/cabd.c' || echo '$(srcdir)/'`mspack/cabd.c

cabd.obj: mspack/cabd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd.obj -MD -MP -MF "$(DEPDIR)/cabd.Tpo" -c -o cabd.obj `if test -f 'mspack/cabd.c'; then $(CYGPATH_W) 'mspack/cabd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/cabd.c'; fi`; \
	then mv -f "$(DEPDIR)/cabd.Tpo" "$(DEPDIR)/cabd.Po"; else rm -f "$(DEPDIR)/cabd.Tpo"; exit 1; fi
#	source='mspack/cabd.c' object='cabd.obj' libtool=no \
#	depfile='$(DEPDIR)/cabd.Po' tmpdepfile='$(DEPDIR)/cabd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd.obj `if test -f 'mspack/cabd.c'; then $(CYGPATH_W) 'mspack/cabd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/cabd.c'; fi`

cabd.lo: mspack/cabd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd.lo -MD -MP -MF "$(DEPDIR)/cabd.Tpo" -c -o cabd.lo `test -f 'mspack/cabd.c' || echo '$(srcdir)/'`mspack/cabd.c; \
	then mv -f "$(DEPDIR)/cabd.Tpo" "$(DEPDIR)/cabd.Plo"; else rm -f "$(DEPDIR)/cabd.Tpo"; exit 1; fi
#	source='mspack/cabd.c' object='cabd.lo' libtool=yes \
#	depfile='$(DEPDIR)/cabd.Plo' tmpdepfile='$(DEPDIR)/cabd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd.lo `test -f 'mspack/cabd.c' || echo '$(srcdir)/'`mspack/cabd.c

lzxd.o: mspack/lzxd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lzxd.o -MD -MP -MF "$(DEPDIR)/lzxd.Tpo" -c -o lzxd.o `test -f 'mspack/lzxd.c' || echo '$(srcdir)/'`mspack/lzxd.c; \
	then mv -f "$(DEPDIR)/lzxd.Tpo" "$(DEPDIR)/lzxd.Po"; else rm -f "$(DEPDIR)/lzxd.Tpo"; exit 1; fi
#	source='mspack/lzxd.c' object='lzxd.o' libtool=no \
#	depfile='$(DEPDIR)/lzxd.Po' tmpdepfile='$(DEPDIR)/lzxd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lzxd.o `test -f 'mspack/lzxd.c' || echo '$(srcdir)/'`mspack/lzxd.c

lzxd.obj: mspack/lzxd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lzxd.obj -MD -MP -MF "$(DEPDIR)/lzxd.Tpo" -c -o lzxd.obj `if test -f 'mspack/lzxd.c'; then $(CYGPATH_W) 'mspack/lzxd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/lzxd.c'; fi`; \
	then mv -f "$(DEPDIR)/lzxd.Tpo" "$(DEPDIR)/lzxd.Po"; else rm -f "$(DEPDIR)/lzxd.Tpo"; exit 1; fi
#	source='mspack/lzxd.c' object='lzxd.obj' libtool=no \
#	depfile='$(DEPDIR)/lzxd.Po' tmpdepfile='$(DEPDIR)/lzxd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lzxd.obj `if test -f 'mspack/lzxd.c'; then $(CYGPATH_W) 'mspack/lzxd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/lzxd.c'; fi`

lzxd.lo: mspack/lzxd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lzxd.lo -MD -MP -MF "$(DEPDIR)/lzxd.Tpo" -c -o lzxd.lo `test -f 'mspack/lzxd.c' || echo '$(srcdir)/'`mspack/lzxd.c; \
	then mv -f "$(DEPDIR)/lzxd.Tpo" "$(DEPDIR)/lzxd.Plo"; else rm -f "$(DEPDIR)/lzxd.Tpo"; exit 1; fi
#	source='mspack/lzxd.c' object='lzxd.lo' libtool=yes \
#	depfile='$(DEPDIR)/lzxd.Plo' tmpdepfile='$(DEPDIR)/lzxd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lzxd.lo `test -f 'mspack/lzxd.c' || echo '$(srcdir)/'`mspack/lzxd.c

mszipd.o: mspack/mszipd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mszipd.o -MD -MP -MF "$(DEPDIR)/mszipd.Tpo" -c -o mszipd.o `test -f 'mspack/mszipd.c' || echo '$(srcdir)/'`mspack/mszipd.c; \
	then mv -f "$(DEPDIR)/mszipd.Tpo" "$(DEPDIR)/mszipd.Po"; else rm -f "$(DEPDIR)/mszipd.Tpo"; exit 1; fi
#	source='mspack/mszipd.c' object='mszipd.o' libtool=no \
#	depfile='$(DEPDIR)/mszipd.Po' tmpdepfile='$(DEPDIR)/mszipd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mszipd.o `test -f 'mspack/mszipd.c' || echo '$(srcdir)/'`mspack/mszipd.c

mszipd.obj: mspack/mszipd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mszipd.obj -MD -MP -MF "$(DEPDIR)/mszipd.Tpo" -c -o mszipd.obj `if test -f 'mspack/mszipd.c'; then $(CYGPATH_W) 'mspack/mszipd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/mszipd.c'; fi`; \
	then mv -f "$(DEPDIR)/mszipd.Tpo" "$(DEPDIR)/mszipd.Po"; else rm -f "$(DEPDIR)/mszipd.Tpo"; exit 1; fi
#	source='mspack/mszipd.c' object='mszipd.obj' libtool=no \
#	depfile='$(DEPDIR)/mszipd.Po' tmpdepfile='$(DEPDIR)/mszipd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mszipd.obj `if test -f 'mspack/mszipd.c'; then $(CYGPATH_W) 'mspack/mszipd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/mszipd.c'; fi`

mszipd.lo: mspack/mszipd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mszipd.lo -MD -MP -MF "$(DEPDIR)/mszipd.Tpo" -c -o mszipd.lo `test -f 'mspack/mszipd.c' || echo '$(srcdir)/'`mspack/mszipd.c; \
	then mv -f "$(DEPDIR)/mszipd.Tpo" "$(DEPDIR)/mszipd.Plo"; else rm -f "$(DEPDIR)/mszipd.Tpo"; exit 1; fi
#	source='mspack/mszipd.c' object='mszipd.lo' libtool=yes \
#	depfile='$(DEPDIR)/mszipd.Plo' tmpdepfile='$(DEPDIR)/mszipd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mszipd.lo `test -f 'mspack/mszipd.c' || echo '$(srcdir)/'`mspack/mszipd.c

qtmd.o: mspack/qtmd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qtmd.o -MD -MP -MF "$(DEPDIR)/qtmd.Tpo" -c -o qtmd.o `test -f 'mspack/qtmd.c' || echo '$(srcdir)/'`mspack/qtmd.c; \
	then mv -f "$(DEPDIR)/qtmd.Tpo" "$(DEPDIR)/qtmd.Po"; else rm -f "$(DEPDIR)/qtmd.Tpo"; exit 1; fi
#	source='mspack/qtmd.c' object='qtmd.o' libtool=no \
#	depfile='$(DEPDIR)/qtmd.Po' tmpdepfile='$(DEPDIR)/qtmd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qtmd.o `test -f 'mspack/qtmd.c' || echo '$(srcdir)/'`mspack/qtmd.c

qtmd.obj: mspack/qtmd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qtmd.obj -MD -MP -MF "$(DEPDIR)/qtmd.Tpo" -c -o qtmd.obj `if test -f 'mspack/qtmd.c'; then $(CYGPATH_W) 'mspack/qtmd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/qtmd.c'; fi`; \
	then mv -f "$(DEPDIR)/qtmd.Tpo" "$(DEPDIR)/qtmd.Po"; else rm -f "$(DEPDIR)/qtmd.Tpo"; exit 1; fi
#	source='mspack/qtmd.c' object='qtmd.obj' libtool=no \
#	depfile='$(DEPDIR)/qtmd.Po' tmpdepfile='$(DEPDIR)/qtmd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qtmd.obj `if test -f 'mspack/qtmd.c'; then $(CYGPATH_W) 'mspack/qtmd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/qtmd.c'; fi`

qtmd.lo: mspack/qtmd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qtmd.lo -MD -MP -MF "$(DEPDIR)/qtmd.Tpo" -c -o qtmd.lo `test -f 'mspack/qtmd.c' || echo '$(srcdir)/'`mspack/qtmd.c; \
	then mv -f "$(DEPDIR)/qtmd.Tpo" "$(DEPDIR)/qtmd.Plo"; else rm -f "$(DEPDIR)/qtmd.Tpo"; exit 1; fi
#	source='mspack/qtmd.c' object='qtmd.lo' libtool=yes \
#	depfile='$(DEPDIR)/qtmd.Plo' tmpdepfile='$(DEPDIR)/qtmd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qtmd.lo `test -f 'mspack/qtmd.c' || echo '$(srcdir)/'`mspack/qtmd.c

chmd.o: mspack/chmd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmd.o -MD -MP -MF "$(DEPDIR)/chmd.Tpo" -c -o chmd.o `test -f 'mspack/chmd.c' || echo '$(srcdir)/'`mspack/chmd.c; \
	then mv -f "$(DEPDIR)/chmd.Tpo" "$(DEPDIR)/chmd.Po"; else rm -f "$(DEPDIR)/chmd.Tpo"; exit 1; fi
#	source='mspack/chmd.c' object='chmd.o' libtool=no \
#	depfile='$(DEPDIR)/chmd.Po' tmpdepfile='$(DEPDIR)/chmd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmd.o `test -f 'mspack/chmd.c' || echo '$(srcdir)/'`mspack/chmd.c

chmd.obj: mspack/chmd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmd.obj -MD -MP -MF "$(DEPDIR)/chmd.Tpo" -c -o chmd.obj `if test -f 'mspack/chmd.c'; then $(CYGPATH_W) 'mspack/chmd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/chmd.c'; fi`; \
	then mv -f "$(DEPDIR)/chmd.Tpo" "$(DEPDIR)/chmd.Po"; else rm -f "$(DEPDIR)/chmd.Tpo"; exit 1; fi
#	source='mspack/chmd.c' object='chmd.obj' libtool=no \
#	depfile='$(DEPDIR)/chmd.Po' tmpdepfile='$(DEPDIR)/chmd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmd.obj `if test -f 'mspack/chmd.c'; then $(CYGPATH_W) 'mspack/chmd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/chmd.c'; fi`

chmd.lo: mspack/chmd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmd.lo -MD -MP -MF "$(DEPDIR)/chmd.Tpo" -c -o chmd.lo `test -f 'mspack/chmd.c' || echo '$(srcdir)/'`mspack/chmd.c; \
	then mv -f "$(DEPDIR)/chmd.Tpo" "$(DEPDIR)/chmd.Plo"; else rm -f "$(DEPDIR)/chmd.Tpo"; exit 1; fi
#	source='mspack/chmd.c' object='chmd.lo' libtool=yes \
#	depfile='$(DEPDIR)/chmd.Plo' tmpdepfile='$(DEPDIR)/chmd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmd.lo `test -f 'mspack/chmd.c' || echo '$(srcdir)/'`mspack/chmd.c

cabc.o: mspack/cabc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabc.o -MD -MP -MF "$(DEPDIR)/cabc.Tpo" -c -o cabc.o `test -f 'mspack/cabc.c' || echo '$(srcdir)/'`mspack/cabc.c; \
	then mv -f "$(DEPDIR)/cabc.Tpo" "$(DEPDIR)/cabc.Po"; else rm -f "$(DEPDIR)/cabc.Tpo"; exit 1; fi
#	source='mspack/cabc.c' object='cabc.o' libtool=no \
#	depfile='$(DEPDIR)/cabc.Po' tmpdepfile='$(DEPDIR)/cabc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabc.o `test -f 'mspack/cabc.c' || echo '$(srcdir)/'`mspack/cabc.c

cabc.obj: mspack/cabc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabc.obj -MD -MP -MF "$(DEPDIR)/cabc.Tpo" -c -o cabc.obj `if test -f 'mspack/cabc.c'; then $(CYGPATH_W) 'mspack/cabc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/cabc.c'; fi`; \
	then mv -f "$(DEPDIR)/cabc.Tpo" "$(DEPDIR)/cabc.Po"; else rm -f "$(DEPDIR)/cabc.Tpo"; exit 1; fi
#	source='mspack/cabc.c' object='cabc.obj' libtool=no \
#	depfile='$(DEPDIR)/cabc.Po' tmpdepfile='$(DEPDIR)/cabc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabc.obj `if test -f 'mspack/cabc.c'; then $(CYGPATH_W) 'mspack/cabc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/cabc.c'; fi`

cabc.lo: mspack/cabc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabc.lo -MD -MP -MF "$(DEPDIR)/cabc.Tpo" -c -o cabc.lo `test -f 'mspack/cabc.c' || echo '$(srcdir)/'`mspack/cabc.c; \
	then mv -f "$(DEPDIR)/cabc.Tpo" "$(DEPDIR)/cabc.Plo"; else rm -f "$(DEPDIR)/cabc.Tpo"; exit 1; fi
#	source='mspack/cabc.c' object='cabc.lo' libtool=yes \
#	depfile='$(DEPDIR)/cabc.Plo' tmpdepfile='$(DEPDIR)/cabc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabc.lo `test -f 'mspack/cabc.c' || echo '$(srcdir)/'`mspack/cabc.c

chmc.o: mspack/chmc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmc.o -MD -MP -MF "$(DEPDIR)/chmc.Tpo" -c -o chmc.o `test -f 'mspack/chmc.c' || echo '$(srcdir)/'`mspack/chmc.c; \
	then mv -f "$(DEPDIR)/chmc.Tpo" "$(DEPDIR)/chmc.Po"; else rm -f "$(DEPDIR)/chmc.Tpo"; exit 1; fi
#	source='mspack/chmc.c' object='chmc.o' libtool=no \
#	depfile='$(DEPDIR)/chmc.Po' tmpdepfile='$(DEPDIR)/chmc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmc.o `test -f 'mspack/chmc.c' || echo '$(srcdir)/'`mspack/chmc.c

chmc.obj: mspack/chmc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmc.obj -MD -MP -MF "$(DEPDIR)/chmc.Tpo" -c -o chmc.obj `if test -f 'mspack/chmc.c'; then $(CYGPATH_W) 'mspack/chmc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/chmc.c'; fi`; \
	then mv -f "$(DEPDIR)/chmc.Tpo" "$(DEPDIR)/chmc.Po"; else rm -f "$(DEPDIR)/chmc.Tpo"; exit 1; fi
#	source='mspack/chmc.c' object='chmc.obj' libtool=no \
#	depfile='$(DEPDIR)/chmc.Po' tmpdepfile='$(DEPDIR)/chmc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmc.obj `if test -f 'mspack/chmc.c'; then $(CYGPATH_W) 'mspack/chmc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/chmc.c'; fi`

chmc.lo: mspack/chmc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmc.lo -MD -MP -MF "$(DEPDIR)/chmc.Tpo" -c -o chmc.lo `test -f 'mspack/chmc.c' || echo '$(srcdir)/'`mspack/chmc.c; \
	then mv -f "$(DEPDIR)/chmc.Tpo" "$(DEPDIR)/chmc.Plo"; else rm -f "$(DEPDIR)/chmc.Tpo"; exit 1; fi
#	source='mspack/chmc.c' object='chmc.lo' libtool=yes \
#	depfile='$(DEPDIR)/chmc.Plo' tmpdepfile='$(DEPDIR)/chmc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmc.lo `test -f 'mspack/chmc.c' || echo '$(srcdir)/'`mspack/chmc.c

hlpc.o: mspack/hlpc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hlpc.o -MD -MP -MF "$(DEPDIR)/hlpc.Tpo" -c -o hlpc.o `test -f 'mspack/hlpc.c' || echo '$(srcdir)/'`mspack/hlpc.c; \
	then mv -f "$(DEPDIR)/hlpc.Tpo" "$(DEPDIR)/hlpc.Po"; else rm -f "$(DEPDIR)/hlpc.Tpo"; exit 1; fi
#	source='mspack/hlpc.c' object='hlpc.o' libtool=no \
#	depfile='$(DEPDIR)/hlpc.Po' tmpdepfile='$(DEPDIR)/hlpc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hlpc.o `test -f 'mspack/hlpc.c' || echo '$(srcdir)/'`mspack/hlpc.c

hlpc.obj: mspack/hlpc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hlpc.obj -MD -MP -MF "$(DEPDIR)/hlpc.Tpo" -c -o hlpc.obj `if test -f 'mspack/hlpc.c'; then $(CYGPATH_W) 'mspack/hlpc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/hlpc.c'; fi`; \
	then mv -f "$(DEPDIR)/hlpc.Tpo" "$(DEPDIR)/hlpc.Po"; else rm -f "$(DEPDIR)/hlpc.Tpo"; exit 1; fi
#	source='mspack/hlpc.c' object='hlpc.obj' libtool=no \
#	depfile='$(DEPDIR)/hlpc.Po' tmpdepfile='$(DEPDIR)/hlpc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hlpc.obj `if test -f 'mspack/hlpc.c'; then $(CYGPATH_W) 'mspack/hlpc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/hlpc.c'; fi`

hlpc.lo: mspack/hlpc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hlpc.lo -MD -MP -MF "$(DEPDIR)/hlpc.Tpo" -c -o hlpc.lo `test -f 'mspack/hlpc.c' || echo '$(srcdir)/'`mspack/hlpc.c; \
	then mv -f "$(DEPDIR)/hlpc.Tpo" "$(DEPDIR)/hlpc.Plo"; else rm -f "$(DEPDIR)/hlpc.Tpo"; exit 1; fi
#	source='mspack/hlpc.c' object='hlpc.lo' libtool=yes \
#	depfile='$(DEPDIR)/hlpc.Plo' tmpdepfile='$(DEPDIR)/hlpc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hlpc.lo `test -f 'mspack/hlpc.c' || echo '$(srcdir)/'`mspack/hlpc.c

hlpd.o: mspack/hlpd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hlpd.o -MD -MP -MF "$(DEPDIR)/hlpd.Tpo" -c -o hlpd.o `test -f 'mspack/hlpd.c' || echo '$(srcdir)/'`mspack/hlpd.c; \
	then mv -f "$(DEPDIR)/hlpd.Tpo" "$(DEPDIR)/hlpd.Po"; else rm -f "$(DEPDIR)/hlpd.Tpo"; exit 1; fi
#	source='mspack/hlpd.c' object='hlpd.o' libtool=no \
#	depfile='$(DEPDIR)/hlpd.Po' tmpdepfile='$(DEPDIR)/hlpd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hlpd.o `test -f 'mspack/hlpd.c' || echo '$(srcdir)/'`mspack/hlpd.c

hlpd.obj: mspack/hlpd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hlpd.obj -MD -MP -MF "$(DEPDIR)/hlpd.Tpo" -c -o hlpd.obj `if test -f 'mspack/hlpd.c'; then $(CYGPATH_W) 'mspack/hlpd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/hlpd.c'; fi`; \
	then mv -f "$(DEPDIR)/hlpd.Tpo" "$(DEPDIR)/hlpd.Po"; else rm -f "$(DEPDIR)/hlpd.Tpo"; exit 1; fi
#	source='mspack/hlpd.c' object='hlpd.obj' libtool=no \
#	depfile='$(DEPDIR)/hlpd.Po' tmpdepfile='$(DEPDIR)/hlpd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hlpd.obj `if test -f 'mspack/hlpd.c'; then $(CYGPATH_W) 'mspack/hlpd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/hlpd.c'; fi`

hlpd.lo: mspack/hlpd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hlpd.lo -MD -MP -MF "$(DEPDIR)/hlpd.Tpo" -c -o hlpd.lo `test -f 'mspack/hlpd.c' || echo '$(srcdir)/'`mspack/hlpd.c; \
	then mv -f "$(DEPDIR)/hlpd.Tpo" "$(DEPDIR)/hlpd.Plo"; else rm -f "$(DEPDIR)/hlpd.Tpo"; exit 1; fi
#	source='mspack/hlpd.c' object='hlpd.lo' libtool=yes \
#	depfile='$(DEPDIR)/hlpd.Plo' tmpdepfile='$(DEPDIR)/hlpd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hlpd.lo `test -f 'mspack/hlpd.c' || echo '$(srcdir)/'`mspack/hlpd.c

litc.o: mspack/litc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT litc.o -MD -MP -MF "$(DEPDIR)/litc.Tpo" -c -o litc.o `test -f 'mspack/litc.c' || echo '$(srcdir)/'`mspack/litc.c; \
	then mv -f "$(DEPDIR)/litc.Tpo" "$(DEPDIR)/litc.Po"; else rm -f "$(DEPDIR)/litc.Tpo"; exit 1; fi
#	source='mspack/litc.c' object='litc.o' libtool=no \
#	depfile='$(DEPDIR)/litc.Po' tmpdepfile='$(DEPDIR)/litc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o litc.o `test -f 'mspack/litc.c' || echo '$(srcdir)/'`mspack/litc.c

litc.obj: mspack/litc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT litc.obj -MD -MP -MF "$(DEPDIR)/litc.Tpo" -c -o litc.obj `if test -f 'mspack/litc.c'; then $(CYGPATH_W) 'mspack/litc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/litc.c'; fi`; \
	then mv -f "$(DEPDIR)/litc.Tpo" "$(DEPDIR)/litc.Po"; else rm -f "$(DEPDIR)/litc.Tpo"; exit 1; fi
#	source='mspack/litc.c' object='litc.obj' libtool=no \
#	depfile='$(DEPDIR)/litc.Po' tmpdepfile='$(DEPDIR)/litc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o litc.obj `if test -f 'mspack/litc.c'; then $(CYGPATH_W) 'mspack/litc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/litc.c'; fi`

litc.lo: mspack/litc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT litc.lo -MD -MP -MF "$(DEPDIR)/litc.Tpo" -c -o litc.lo `test -f 'mspack/litc.c' || echo '$(srcdir)/'`mspack/litc.c; \
	then mv -f "$(DEPDIR)/litc.Tpo" "$(DEPDIR)/litc.Plo"; else rm -f "$(DEPDIR)/litc.Tpo"; exit 1; fi
#	source='mspack/litc.c' object='litc.lo' libtool=yes \
#	depfile='$(DEPDIR)/litc.Plo' tmpdepfile='$(DEPDIR)/litc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o litc.lo `test -f 'mspack/litc.c' || echo '$(srcdir)/'`mspack/litc.c

litd.o: mspack/litd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT litd.o -MD -MP -MF "$(DEPDIR)/litd.Tpo" -c -o litd.o `test -f 'mspack/litd.c' || echo '$(srcdir)/'`mspack/litd.c; \
	then mv -f "$(DEPDIR)/litd.Tpo" "$(DEPDIR)/litd.Po"; else rm -f "$(DEPDIR)/litd.Tpo"; exit 1; fi
#	source='mspack/litd.c' object='litd.o' libtool=no \
#	depfile='$(DEPDIR)/litd.Po' tmpdepfile='$(DEPDIR)/litd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o litd.o `test -f 'mspack/litd.c' || echo '$(srcdir)/'`mspack/litd.c

litd.obj: mspack/litd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT litd.obj -MD -MP -MF "$(DEPDIR)/litd.Tpo" -c -o litd.obj `if test -f 'mspack/litd.c'; then $(CYGPATH_W) 'mspack/litd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/litd.c'; fi`; \
	then mv -f "$(DEPDIR)/litd.Tpo" "$(DEPDIR)/litd.Po"; else rm -f "$(DEPDIR)/litd.Tpo"; exit 1; fi
#	source='mspack/litd.c' object='litd.obj' libtool=no \
#	depfile='$(DEPDIR)/litd.Po' tmpdepfile='$(DEPDIR)/litd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o litd.obj `if test -f 'mspack/litd.c'; then $(CYGPATH_W) 'mspack/litd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/litd.c'; fi`

litd.lo: mspack/litd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT litd.lo -MD -MP -MF "$(DEPDIR)/litd.Tpo" -c -o litd.lo `test -f 'mspack/litd.c' || echo '$(srcdir)/'`mspack/litd.c; \
	then mv -f "$(DEPDIR)/litd.Tpo" "$(DEPDIR)/litd.Plo"; else rm -f "$(DEPDIR)/litd.Tpo"; exit 1; fi
#	source='mspack/litd.c' object='litd.lo' libtool=yes \
#	depfile='$(DEPDIR)/litd.Plo' tmpdepfile='$(DEPDIR)/litd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o litd.lo `test -f 'mspack/litd.c' || echo '$(srcdir)/'`mspack/litd.c

kwajc.o: mspack/kwajc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kwajc.o -MD -MP -MF "$(DEPDIR)/kwajc.Tpo" -c -o kwajc.o `test -f 'mspack/kwajc.c' || echo '$(srcdir)/'`mspack/kwajc.c; \
	then mv -f "$(DEPDIR)/kwajc.Tpo" "$(DEPDIR)/kwajc.Po"; else rm -f "$(DEPDIR)/kwajc.Tpo"; exit 1; fi
#	source='mspack/kwajc.c' object='kwajc.o' libtool=no \
#	depfile='$(DEPDIR)/kwajc.Po' tmpdepfile='$(DEPDIR)/kwajc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kwajc.o `test -f 'mspack/kwajc.c' || echo '$(srcdir)/'`mspack/kwajc.c

kwajc.obj: mspack/kwajc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kwajc.obj -MD -MP -MF "$(DEPDIR)/kwajc.Tpo" -c -o kwajc.obj `if test -f 'mspack/kwajc.c'; then $(CYGPATH_W) 'mspack/kwajc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/kwajc.c'; fi`; \
	then mv -f "$(DEPDIR)/kwajc.Tpo" "$(DEPDIR)/kwajc.Po"; else rm -f "$(DEPDIR)/kwajc.Tpo"; exit 1; fi
#	source='mspack/kwajc.c' object='kwajc.obj' libtool=no \
#	depfile='$(DEPDIR)/kwajc.Po' tmpdepfile='$(DEPDIR)/kwajc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kwajc.obj `if test -f 'mspack/kwajc.c'; then $(CYGPATH_W) 'mspack/kwajc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/kwajc.c'; fi`

kwajc.lo: mspack/kwajc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kwajc.lo -MD -MP -MF "$(DEPDIR)/kwajc.Tpo" -c -o kwajc.lo `test -f 'mspack/kwajc.c' || echo '$(srcdir)/'`mspack/kwajc.c; \
	then mv -f "$(DEPDIR)/kwajc.Tpo" "$(DEPDIR)/kwajc.Plo"; else rm -f "$(DEPDIR)/kwajc.Tpo"; exit 1; fi
#	source='mspack/kwajc.c' object='kwajc.lo' libtool=yes \
#	depfile='$(DEPDIR)/kwajc.Plo' tmpdepfile='$(DEPDIR)/kwajc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kwajc.lo `test -f 'mspack/kwajc.c' || echo '$(srcdir)/'`mspack/kwajc.c

kwajd.o: mspack/kwajd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kwajd.o -MD -MP -MF "$(DEPDIR)/kwajd.Tpo" -c -o kwajd.o `test -f 'mspack/kwajd.c' || echo '$(srcdir)/'`mspack/kwajd.c; \
	then mv -f "$(DEPDIR)/kwajd.Tpo" "$(DEPDIR)/kwajd.Po"; else rm -f "$(DEPDIR)/kwajd.Tpo"; exit 1; fi
#	source='mspack/kwajd.c' object='kwajd.o' libtool=no \
#	depfile='$(DEPDIR)/kwajd.Po' tmpdepfile='$(DEPDIR)/kwajd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kwajd.o `test -f 'mspack/kwajd.c' || echo '$(srcdir)/'`mspack/kwajd.c

kwajd.obj: mspack/kwajd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kwajd.obj -MD -MP -MF "$(DEPDIR)/kwajd.Tpo" -c -o kwajd.obj `if test -f 'mspack/kwajd.c'; then $(CYGPATH_W) 'mspack/kwajd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/kwajd.c'; fi`; \
	then mv -f "$(DEPDIR)/kwajd.Tpo" "$(DEPDIR)/kwajd.Po"; else rm -f "$(DEPDIR)/kwajd.Tpo"; exit 1; fi
#	source='mspack/kwajd.c' object='kwajd.obj' libtool=no \
#	depfile='$(DEPDIR)/kwajd.Po' tmpdepfile='$(DEPDIR)/kwajd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kwajd.obj `if test -f 'mspack/kwajd.c'; then $(CYGPATH_W) 'mspack/kwajd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/kwajd.c'; fi`

kwajd.lo: mspack/kwajd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kwajd.lo -MD -MP -MF "$(DEPDIR)/kwajd.Tpo" -c -o kwajd.lo `test -f 'mspack/kwajd.c' || echo '$(srcdir)/'`mspack/kwajd.c; \
	then mv -f "$(DEPDIR)/kwajd.Tpo" "$(DEPDIR)/kwajd.Plo"; else rm -f "$(DEPDIR)/kwajd.Tpo"; exit 1; fi
#	source='mspack/kwajd.c' object='kwajd.lo' libtool=yes \
#	depfile='$(DEPDIR)/kwajd.Plo' tmpdepfile='$(DEPDIR)/kwajd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kwajd.lo `test -f 'mspack/kwajd.c' || echo '$(srcdir)/'`mspack/kwajd.c

szddc.o: mspack/szddc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT szddc.o -MD -MP -MF "$(DEPDIR)/szddc.Tpo" -c -o szddc.o `test -f 'mspack/szddc.c' || echo '$(srcdir)/'`mspack/szddc.c; \
	then mv -f "$(DEPDIR)/szddc.Tpo" "$(DEPDIR)/szddc.Po"; else rm -f "$(DEPDIR)/szddc.Tpo"; exit 1; fi
#	source='mspack/szddc.c' object='szddc.o' libtool=no \
#	depfile='$(DEPDIR)/szddc.Po' tmpdepfile='$(DEPDIR)/szddc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o szddc.o `test -f 'mspack/szddc.c' || echo '$(srcdir)/'`mspack/szddc.c

szddc.obj: mspack/szddc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT szddc.obj -MD -MP -MF "$(DEPDIR)/szddc.Tpo" -c -o szddc.obj `if test -f 'mspack/szddc.c'; then $(CYGPATH_W) 'mspack/szddc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/szddc.c'; fi`; \
	then mv -f "$(DEPDIR)/szddc.Tpo" "$(DEPDIR)/szddc.Po"; else rm -f "$(DEPDIR)/szddc.Tpo"; exit 1; fi
#	source='mspack/szddc.c' object='szddc.obj' libtool=no \
#	depfile='$(DEPDIR)/szddc.Po' tmpdepfile='$(DEPDIR)/szddc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o szddc.obj `if test -f 'mspack/szddc.c'; then $(CYGPATH_W) 'mspack/szddc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/szddc.c'; fi`

szddc.lo: mspack/szddc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT szddc.lo -MD -MP -MF "$(DEPDIR)/szddc.Tpo" -c -o szddc.lo `test -f 'mspack/szddc.c' || echo '$(srcdir)/'`mspack/szddc.c; \
	then mv -f "$(DEPDIR)/szddc.Tpo" "$(DEPDIR)/szddc.Plo"; else rm -f "$(DEPDIR)/szddc.Tpo"; exit 1; fi
#	source='mspack/szddc.c' object='szddc.lo' libtool=yes \
#	depfile='$(DEPDIR)/szddc.Plo' tmpdepfile='$(DEPDIR)/szddc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o szddc.lo `test -f 'mspack/szddc.c' || echo '$(srcdir)/'`mspack/szddc.c

szddd.o: mspack/szddd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT szddd.o -MD -MP -MF "$(DEPDIR)/szddd.Tpo" -c -o szddd.o `test -f 'mspack/szddd.c' || echo '$(srcdir)/'`mspack/szddd.c; \
	then mv -f "$(DEPDIR)/szddd.Tpo" "$(DEPDIR)/szddd.Po"; else rm -f "$(DEPDIR)/szddd.Tpo"; exit 1; fi
#	source='mspack/szddd.c' object='szddd.o' libtool=no \
#	depfile='$(DEPDIR)/szddd.Po' tmpdepfile='$(DEPDIR)/szddd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o szddd.o `test -f 'mspack/szddd.c' || echo '$(srcdir)/'`mspack/szddd.c

szddd.obj: mspack/szddd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT szddd.obj -MD -MP -MF "$(DEPDIR)/szddd.Tpo" -c -o szddd.obj `if test -f 'mspack/szddd.c'; then $(CYGPATH_W) 'mspack/szddd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/szddd.c'; fi`; \
	then mv -f "$(DEPDIR)/szddd.Tpo" "$(DEPDIR)/szddd.Po"; else rm -f "$(DEPDIR)/szddd.Tpo"; exit 1; fi
#	source='mspack/szddd.c' object='szddd.obj' libtool=no \
#	depfile='$(DEPDIR)/szddd.Po' tmpdepfile='$(DEPDIR)/szddd.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o szddd.obj `if test -f 'mspack/szddd.c'; then $(CYGPATH_W) 'mspack/szddd.c'; else $(CYGPATH_W) '$(srcdir)/mspack/szddd.c'; fi`

szddd.lo: mspack/szddd.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT szddd.lo -MD -MP -MF "$(DEPDIR)/szddd.Tpo" -c -o szddd.lo `test -f 'mspack/szddd.c' || echo '$(srcdir)/'`mspack/szddd.c; \
	then mv -f "$(DEPDIR)/szddd.Tpo" "$(DEPDIR)/szddd.Plo"; else rm -f "$(DEPDIR)/szddd.Tpo"; exit 1; fi
#	source='mspack/szddd.c' object='szddd.lo' libtool=yes \
#	depfile='$(DEPDIR)/szddd.Plo' tmpdepfile='$(DEPDIR)/szddd.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o szddd.lo `test -f 'mspack/szddd.c' || echo '$(srcdir)/'`mspack/szddd.c

lzxc.o: mspack/lzxc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lzxc.o -MD -MP -MF "$(DEPDIR)/lzxc.Tpo" -c -o lzxc.o `test -f 'mspack/lzxc.c' || echo '$(srcdir)/'`mspack/lzxc.c; \
	then mv -f "$(DEPDIR)/lzxc.Tpo" "$(DEPDIR)/lzxc.Po"; else rm -f "$(DEPDIR)/lzxc.Tpo"; exit 1; fi
#	source='mspack/lzxc.c' object='lzxc.o' libtool=no \
#	depfile='$(DEPDIR)/lzxc.Po' tmpdepfile='$(DEPDIR)/lzxc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lzxc.o `test -f 'mspack/lzxc.c' || echo '$(srcdir)/'`mspack/lzxc.c

lzxc.obj: mspack/lzxc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lzxc.obj -MD -MP -MF "$(DEPDIR)/lzxc.Tpo" -c -o lzxc.obj `if test -f 'mspack/lzxc.c'; then $(CYGPATH_W) 'mspack/lzxc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/lzxc.c'; fi`; \
	then mv -f "$(DEPDIR)/lzxc.Tpo" "$(DEPDIR)/lzxc.Po"; else rm -f "$(DEPDIR)/lzxc.Tpo"; exit 1; fi
#	source='mspack/lzxc.c' object='lzxc.obj' libtool=no \
#	depfile='$(DEPDIR)/lzxc.Po' tmpdepfile='$(DEPDIR)/lzxc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lzxc.obj `if test -f 'mspack/lzxc.c'; then $(CYGPATH_W) 'mspack/lzxc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/lzxc.c'; fi`

lzxc.lo: mspack/lzxc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lzxc.lo -MD -MP -MF "$(DEPDIR)/lzxc.Tpo" -c -o lzxc.lo `test -f 'mspack/lzxc.c' || echo '$(srcdir)/'`mspack/lzxc.c; \
	then mv -f "$(DEPDIR)/lzxc.Tpo" "$(DEPDIR)/lzxc.Plo"; else rm -f "$(DEPDIR)/lzxc.Tpo"; exit 1; fi
#	source='mspack/lzxc.c' object='lzxc.lo' libtool=yes \
#	depfile='$(DEPDIR)/lzxc.Plo' tmpdepfile='$(DEPDIR)/lzxc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lzxc.lo `test -f 'mspack/lzxc.c' || echo '$(srcdir)/'`mspack/lzxc.c

mszipc.o: mspack/mszipc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mszipc.o -MD -MP -MF "$(DEPDIR)/mszipc.Tpo" -c -o mszipc.o `test -f 'mspack/mszipc.c' || echo '$(srcdir)/'`mspack/mszipc.c; \
	then mv -f "$(DEPDIR)/mszipc.Tpo" "$(DEPDIR)/mszipc.Po"; else rm -f "$(DEPDIR)/mszipc.Tpo"; exit 1; fi
#	source='mspack/mszipc.c' object='mszipc.o' libtool=no \
#	depfile='$(DEPDIR)/mszipc.Po' tmpdepfile='$(DEPDIR)/mszipc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mszipc.o `test -f 'mspack/mszipc.c' || echo '$(srcdir)/'`mspack/mszipc.c

mszipc.obj: mspack/mszipc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mszipc.obj -MD -MP -MF "$(DEPDIR)/mszipc.Tpo" -c -o mszipc.obj `if test -f 'mspack/mszipc.c'; then $(CYGPATH_W) 'mspack/mszipc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/mszipc.c'; fi`; \
	then mv -f "$(DEPDIR)/mszipc.Tpo" "$(DEPDIR)/mszipc.Po"; else rm -f "$(DEPDIR)/mszipc.Tpo"; exit 1; fi
#	source='mspack/mszipc.c' object='mszipc.obj' libtool=no \
#	depfile='$(DEPDIR)/mszipc.Po' tmpdepfile='$(DEPDIR)/mszipc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mszipc.obj `if test -f 'mspack/mszipc.c'; then $(CYGPATH_W) 'mspack/mszipc.c'; else $(CYGPATH_W) '$(srcdir)/mspack/mszipc.c'; fi`

mszipc.lo: mspack/mszipc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mszipc.lo -MD -MP -MF "$(DEPDIR)/mszipc.Tpo" -c -o mszipc.lo `test -f 'mspack/mszipc.c' || echo '$(srcdir)/'`mspack/mszipc.c; \
	then mv -f "$(DEPDIR)/mszipc.Tpo" "$(DEPDIR)/mszipc.Plo"; else rm -f "$(DEPDIR)/mszipc.Tpo"; exit 1; fi
#	source='mspack/mszipc.c' object='mszipc.lo' libtool=yes \
#	depfile='$(DEPDIR)/mszipc.Plo' tmpdepfile='$(DEPDIR)/mszipc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mszipc.lo `test -f 'mspack/mszipc.c' || echo '$(srcdir)/'`mspack/mszipc.c

cabd_md5.o: test/cabd_md5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd_md5.o -MD -MP -MF "$(DEPDIR)/cabd_md5.Tpo" -c -o cabd_md5.o `test -f 'test/cabd_md5.c' || echo '$(srcdir)/'`test/cabd_md5.c; \
	then mv -f "$(DEPDIR)/cabd_md5.Tpo" "$(DEPDIR)/cabd_md5.Po"; else rm -f "$(DEPDIR)/cabd_md5.Tpo"; exit 1; fi
#	source='test/cabd_md5.c' object='cabd_md5.o' libtool=no \
#	depfile='$(DEPDIR)/cabd_md5.Po' tmpdepfile='$(DEPDIR)/cabd_md5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd_md5.o `test -f 'test/cabd_md5.c' || echo '$(srcdir)/'`test/cabd_md5.c

cabd_md5.obj: test/cabd_md5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd_md5.obj -MD -MP -MF "$(DEPDIR)/cabd_md5.Tpo" -c -o cabd_md5.obj `if test -f 'test/cabd_md5.c'; then $(CYGPATH_W) 'test/cabd_md5.c'; else $(CYGPATH_W) '$(srcdir)/test/cabd_md5.c'; fi`; \
	then mv -f "$(DEPDIR)/cabd_md5.Tpo" "$(DEPDIR)/cabd_md5.Po"; else rm -f "$(DEPDIR)/cabd_md5.Tpo"; exit 1; fi
#	source='test/cabd_md5.c' object='cabd_md5.obj' libtool=no \
#	depfile='$(DEPDIR)/cabd_md5.Po' tmpdepfile='$(DEPDIR)/cabd_md5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd_md5.obj `if test -f 'test/cabd_md5.c'; then $(CYGPATH_W) 'test/cabd_md5.c'; else $(CYGPATH_W) '$(srcdir)/test/cabd_md5.c'; fi`

cabd_md5.lo: test/cabd_md5.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd_md5.lo -MD -MP -MF "$(DEPDIR)/cabd_md5.Tpo" -c -o cabd_md5.lo `test -f 'test/cabd_md5.c' || echo '$(srcdir)/'`test/cabd_md5.c; \
	then mv -f "$(DEPDIR)/cabd_md5.Tpo" "$(DEPDIR)/cabd_md5.Plo"; else rm -f "$(DEPDIR)/cabd_md5.Tpo"; exit 1; fi
#	source='test/cabd_md5.c' object='cabd_md5.lo' libtool=yes \
#	depfile='$(DEPDIR)/cabd_md5.Plo' tmpdepfile='$(DEPDIR)/cabd_md5.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd_md5.lo `test -f 'test/cabd_md5.c' || echo '$(srcdir)/'`test/cabd_md5.c

md5.o: test/md5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT md5.o -MD -MP -MF "$(DEPDIR)/md5.Tpo" -c -o md5.o `test -f 'test/md5.c' || echo '$(srcdir)/'`test/md5.c; \
	then mv -f "$(DEPDIR)/md5.Tpo" "$(DEPDIR)/md5.Po"; else rm -f "$(DEPDIR)/md5.Tpo"; exit 1; fi
#	source='test/md5.c' object='md5.o' libtool=no \
#	depfile='$(DEPDIR)/md5.Po' tmpdepfile='$(DEPDIR)/md5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o md5.o `test -f 'test/md5.c' || echo '$(srcdir)/'`test/md5.c

md5.obj: test/md5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT md5.obj -MD -MP -MF "$(DEPDIR)/md5.Tpo" -c -o md5.obj `if test -f 'test/md5.c'; then $(CYGPATH_W) 'test/md5.c'; else $(CYGPATH_W) '$(srcdir)/test/md5.c'; fi`; \
	then mv -f "$(DEPDIR)/md5.Tpo" "$(DEPDIR)/md5.Po"; else rm -f "$(DEPDIR)/md5.Tpo"; exit 1; fi
#	source='test/md5.c' object='md5.obj' libtool=no \
#	depfile='$(DEPDIR)/md5.Po' tmpdepfile='$(DEPDIR)/md5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o md5.obj `if test -f 'test/md5.c'; then $(CYGPATH_W) 'test/md5.c'; else $(CYGPATH_W) '$(srcdir)/test/md5.c'; fi`

md5.lo: test/md5.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT md5.lo -MD -MP -MF "$(DEPDIR)/md5.Tpo" -c -o md5.lo `test -f 'test/md5.c' || echo '$(srcdir)/'`test/md5.c; \
	then mv -f "$(DEPDIR)/md5.Tpo" "$(DEPDIR)/md5.Plo"; else rm -f "$(DEPDIR)/md5.Tpo"; exit 1; fi
#	source='test/md5.c' object='md5.lo' libtool=yes \
#	depfile='$(DEPDIR)/md5.Plo' tmpdepfile='$(DEPDIR)/md5.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o md5.lo `test -f 'test/md5.c' || echo '$(srcdir)/'`test/md5.c

cabd_test.o: test/cabd_test.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd_test.o -MD -MP -MF "$(DEPDIR)/cabd_test.Tpo" -c -o cabd_test.o `test -f 'test/cabd_test.c' || echo '$(srcdir)/'`test/cabd_test.c; \
	then mv -f "$(DEPDIR)/cabd_test.Tpo" "$(DEPDIR)/cabd_test.Po"; else rm -f "$(DEPDIR)/cabd_test.Tpo"; exit 1; fi
#	source='test/cabd_test.c' object='cabd_test.o' libtool=no \
#	depfile='$(DEPDIR)/cabd_test.Po' tmpdepfile='$(DEPDIR)/cabd_test.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd_test.o `test -f 'test/cabd_test.c' || echo '$(srcdir)/'`test/cabd_test.c

cabd_test.obj: test/cabd_test.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd_test.obj -MD -MP -MF "$(DEPDIR)/cabd_test.Tpo" -c -o cabd_test.obj `if test -f 'test/cabd_test.c'; then $(CYGPATH_W) 'test/cabd_test.c'; else $(CYGPATH_W) '$(srcdir)/test/cabd_test.c'; fi`; \
	then mv -f "$(DEPDIR)/cabd_test.Tpo" "$(DEPDIR)/cabd_test.Po"; else rm -f "$(DEPDIR)/cabd_test.Tpo"; exit 1; fi
#	source='test/cabd_test.c' object='cabd_test.obj' libtool=no \
#	depfile='$(DEPDIR)/cabd_test.Po' tmpdepfile='$(DEPDIR)/cabd_test.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd_test.obj `if test -f 'test/cabd_test.c'; then $(CYGPATH_W) 'test/cabd_test.c'; else $(CYGPATH_W) '$(srcdir)/test/cabd_test.c'; fi`

cabd_test.lo: test/cabd_test.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabd_test.lo -MD -MP -MF "$(DEPDIR)/cabd_test.Tpo" -c -o cabd_test.lo `test -f 'test/cabd_test.c' || echo '$(srcdir)/'`test/cabd_test.c; \
	then mv -f "$(DEPDIR)/cabd_test.Tpo" "$(DEPDIR)/cabd_test.Plo"; else rm -f "$(DEPDIR)/cabd_test.Tpo"; exit 1; fi
#	source='test/cabd_test.c' object='cabd_test.lo' libtool=yes \
#	depfile='$(DEPDIR)/cabd_test.Plo' tmpdepfile='$(DEPDIR)/cabd_test.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabd_test.lo `test -f 'test/cabd_test.c' || echo '$(srcdir)/'`test/cabd_test.c

cabextract_md5.o: test/cabextract_md5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabextract_md5.o -MD -MP -MF "$(DEPDIR)/cabextract_md5.Tpo" -c -o cabextract_md5.o `test -f 'test/cabextract_md5.c' || echo '$(srcdir)/'`test/cabextract_md5.c; \
	then mv -f "$(DEPDIR)/cabextract_md5.Tpo" "$(DEPDIR)/cabextract_md5.Po"; else rm -f "$(DEPDIR)/cabextract_md5.Tpo"; exit 1; fi
#	source='test/cabextract_md5.c' object='cabextract_md5.o' libtool=no \
#	depfile='$(DEPDIR)/cabextract_md5.Po' tmpdepfile='$(DEPDIR)/cabextract_md5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabextract_md5.o `test -f 'test/cabextract_md5.c' || echo '$(srcdir)/'`test/cabextract_md5.c

cabextract_md5.obj: test/cabextract_md5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabextract_md5.obj -MD -MP -MF "$(DEPDIR)/cabextract_md5.Tpo" -c -o cabextract_md5.obj `if test -f 'test/cabextract_md5.c'; then $(CYGPATH_W) 'test/cabextract_md5.c'; else $(CYGPATH_W) '$(srcdir)/test/cabextract_md5.c'; fi`; \
	then mv -f "$(DEPDIR)/cabextract_md5.Tpo" "$(DEPDIR)/cabextract_md5.Po"; else rm -f "$(DEPDIR)/cabextract_md5.Tpo"; exit 1; fi
#	source='test/cabextract_md5.c' object='cabextract_md5.obj' libtool=no \
#	depfile='$(DEPDIR)/cabextract_md5.Po' tmpdepfile='$(DEPDIR)/cabextract_md5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabextract_md5.obj `if test -f 'test/cabextract_md5.c'; then $(CYGPATH_W) 'test/cabextract_md5.c'; else $(CYGPATH_W) '$(srcdir)/test/cabextract_md5.c'; fi`

cabextract_md5.lo: test/cabextract_md5.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabextract_md5.lo -MD -MP -MF "$(DEPDIR)/cabextract_md5.Tpo" -c -o cabextract_md5.lo `test -f 'test/cabextract_md5.c' || echo '$(srcdir)/'`test/cabextract_md5.c; \
	then mv -f "$(DEPDIR)/cabextract_md5.Tpo" "$(DEPDIR)/cabextract_md5.Plo"; else rm -f "$(DEPDIR)/cabextract_md5.Tpo"; exit 1; fi
#	source='test/cabextract_md5.c' object='cabextract_md5.lo' libtool=yes \
#	depfile='$(DEPDIR)/cabextract_md5.Plo' tmpdepfile='$(DEPDIR)/cabextract_md5.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabextract_md5.lo `test -f 'test/cabextract_md5.c' || echo '$(srcdir)/'`test/cabextract_md5.c

cabrip.o: test/cabrip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabrip.o -MD -MP -MF "$(DEPDIR)/cabrip.Tpo" -c -o cabrip.o `test -f 'test/cabrip.c' || echo '$(srcdir)/'`test/cabrip.c; \
	then mv -f "$(DEPDIR)/cabrip.Tpo" "$(DEPDIR)/cabrip.Po"; else rm -f "$(DEPDIR)/cabrip.Tpo"; exit 1; fi
#	source='test/cabrip.c' object='cabrip.o' libtool=no \
#	depfile='$(DEPDIR)/cabrip.Po' tmpdepfile='$(DEPDIR)/cabrip.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabrip.o `test -f 'test/cabrip.c' || echo '$(srcdir)/'`test/cabrip.c

cabrip.obj: test/cabrip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabrip.obj -MD -MP -MF "$(DEPDIR)/cabrip.Tpo" -c -o cabrip.obj `if test -f 'test/cabrip.c'; then $(CYGPATH_W) 'test/cabrip.c'; else $(CYGPATH_W) '$(srcdir)/test/cabrip.c'; fi`; \
	then mv -f "$(DEPDIR)/cabrip.Tpo" "$(DEPDIR)/cabrip.Po"; else rm -f "$(DEPDIR)/cabrip.Tpo"; exit 1; fi
#	source='test/cabrip.c' object='cabrip.obj' libtool=no \
#	depfile='$(DEPDIR)/cabrip.Po' tmpdepfile='$(DEPDIR)/cabrip.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabrip.obj `if test -f 'test/cabrip.c'; then $(CYGPATH_W) 'test/cabrip.c'; else $(CYGPATH_W) '$(srcdir)/test/cabrip.c'; fi`

cabrip.lo: test/cabrip.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cabrip.lo -MD -MP -MF "$(DEPDIR)/cabrip.Tpo" -c -o cabrip.lo `test -f 'test/cabrip.c' || echo '$(srcdir)/'`test/cabrip.c; \
	then mv -f "$(DEPDIR)/cabrip.Tpo" "$(DEPDIR)/cabrip.Plo"; else rm -f "$(DEPDIR)/cabrip.Tpo"; exit 1; fi
#	source='test/cabrip.c' object='cabrip.lo' libtool=yes \
#	depfile='$(DEPDIR)/cabrip.Plo' tmpdepfile='$(DEPDIR)/cabrip.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cabrip.lo `test -f 'test/cabrip.c' || echo '$(srcdir)/'`test/cabrip.c

chmd_md5.o: test/chmd_md5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmd_md5.o -MD -MP -MF "$(DEPDIR)/chmd_md5.Tpo" -c -o chmd_md5.o `test -f 'test/chmd_md5.c' || echo '$(srcdir)/'`test/chmd_md5.c; \
	then mv -f "$(DEPDIR)/chmd_md5.Tpo" "$(DEPDIR)/chmd_md5.Po"; else rm -f "$(DEPDIR)/chmd_md5.Tpo"; exit 1; fi
#	source='test/chmd_md5.c' object='chmd_md5.o' libtool=no \
#	depfile='$(DEPDIR)/chmd_md5.Po' tmpdepfile='$(DEPDIR)/chmd_md5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmd_md5.o `test -f 'test/chmd_md5.c' || echo '$(srcdir)/'`test/chmd_md5.c

chmd_md5.obj: test/chmd_md5.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmd_md5.obj -MD -MP -MF "$(DEPDIR)/chmd_md5.Tpo" -c -o chmd_md5.obj `if test -f 'test/chmd_md5.c'; then $(CYGPATH_W) 'test/chmd_md5.c'; else $(CYGPATH_W) '$(srcdir)/test/chmd_md5.c'; fi`; \
	then mv -f "$(DEPDIR)/chmd_md5.Tpo" "$(DEPDIR)/chmd_md5.Po"; else rm -f "$(DEPDIR)/chmd_md5.Tpo"; exit 1; fi
#	source='test/chmd_md5.c' object='chmd_md5.obj' libtool=no \
#	depfile='$(DEPDIR)/chmd_md5.Po' tmpdepfile='$(DEPDIR)/chmd_md5.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmd_md5.obj `if test -f 'test/chmd_md5.c'; then $(CYGPATH_W) 'test/chmd_md5.c'; else $(CYGPATH_W) '$(srcdir)/test/chmd_md5.c'; fi`

chmd_md5.lo: test/chmd_md5.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmd_md5.lo -MD -MP -MF "$(DEPDIR)/chmd_md5.Tpo" -c -o chmd_md5.lo `test -f 'test/chmd_md5.c' || echo '$(srcdir)/'`test/chmd_md5.c; \
	then mv -f "$(DEPDIR)/chmd_md5.Tpo" "$(DEPDIR)/chmd_md5.Plo"; else rm -f "$(DEPDIR)/chmd_md5.Tpo"; exit 1; fi
#	source='test/chmd_md5.c' object='chmd_md5.lo' libtool=yes \
#	depfile='$(DEPDIR)/chmd_md5.Plo' tmpdepfile='$(DEPDIR)/chmd_md5.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmd_md5.lo `test -f 'test/chmd_md5.c' || echo '$(srcdir)/'`test/chmd_md5.c

chminfo.o: test/chminfo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chminfo.o -MD -MP -MF "$(DEPDIR)/chminfo.Tpo" -c -o chminfo.o `test -f 'test/chminfo.c' || echo '$(srcdir)/'`test/chminfo.c; \
	then mv -f "$(DEPDIR)/chminfo.Tpo" "$(DEPDIR)/chminfo.Po"; else rm -f "$(DEPDIR)/chminfo.Tpo"; exit 1; fi
#	source='test/chminfo.c' object='chminfo.o' libtool=no \
#	depfile='$(DEPDIR)/chminfo.Po' tmpdepfile='$(DEPDIR)/chminfo.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chminfo.o `test -f 'test/chminfo.c' || echo '$(srcdir)/'`test/chminfo.c

chminfo.obj: test/chminfo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chminfo.obj -MD -MP -MF "$(DEPDIR)/chminfo.Tpo" -c -o chminfo.obj `if test -f 'test/chminfo.c'; then $(CYGPATH_W) 'test/chminfo.c'; else $(CYGPATH_W) '$(srcdir)/test/chminfo.c'; fi`; \
	then mv -f "$(DEPDIR)/chminfo.Tpo" "$(DEPDIR)/chminfo.Po"; else rm -f "$(DEPDIR)/chminfo.Tpo"; exit 1; fi
#	source='test/chminfo.c' object='chminfo.obj' libtool=no \
#	depfile='$(DEPDIR)/chminfo.Po' tmpdepfile='$(DEPDIR)/chminfo.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chminfo.obj `if test -f 'test/chminfo.c'; then $(CYGPATH_W) 'test/chminfo.c'; else $(CYGPATH_W) '$(srcdir)/test/chminfo.c'; fi`

chminfo.lo: test/chminfo.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chminfo.lo -MD -MP -MF "$(DEPDIR)/chminfo.Tpo" -c -o chminfo.lo `test -f 'test/chminfo.c' || echo '$(srcdir)/'`test/chminfo.c; \
	then mv -f "$(DEPDIR)/chminfo.Tpo" "$(DEPDIR)/chminfo.Plo"; else rm -f "$(DEPDIR)/chminfo.Tpo"; exit 1; fi
#	source='test/chminfo.c' object='chminfo.lo' libtool=yes \
#	depfile='$(DEPDIR)/chminfo.Plo' tmpdepfile='$(DEPDIR)/chminfo.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chminfo.lo `test -f 'test/chminfo.c' || echo '$(srcdir)/'`test/chminfo.c

chmx.o: test/chmx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmx.o -MD -MP -MF "$(DEPDIR)/chmx.Tpo" -c -o chmx.o `test -f 'test/chmx.c' || echo '$(srcdir)/'`test/chmx.c; \
	then mv -f "$(DEPDIR)/chmx.Tpo" "$(DEPDIR)/chmx.Po"; else rm -f "$(DEPDIR)/chmx.Tpo"; exit 1; fi
#	source='test/chmx.c' object='chmx.o' libtool=no \
#	depfile='$(DEPDIR)/chmx.Po' tmpdepfile='$(DEPDIR)/chmx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmx.o `test -f 'test/chmx.c' || echo '$(srcdir)/'`test/chmx.c

chmx.obj: test/chmx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmx.obj -MD -MP -MF "$(DEPDIR)/chmx.Tpo" -c -o chmx.obj `if test -f 'test/chmx.c'; then $(CYGPATH_W) 'test/chmx.c'; else $(CYGPATH_W) '$(srcdir)/test/chmx.c'; fi`; \
	then mv -f "$(DEPDIR)/chmx.Tpo" "$(DEPDIR)/chmx.Po"; else rm -f "$(DEPDIR)/chmx.Tpo"; exit 1; fi
#	source='test/chmx.c' object='chmx.obj' libtool=no \
#	depfile='$(DEPDIR)/chmx.Po' tmpdepfile='$(DEPDIR)/chmx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmx.obj `if test -f 'test/chmx.c'; then $(CYGPATH_W) 'test/chmx.c'; else $(CYGPATH_W) '$(srcdir)/test/chmx.c'; fi`

chmx.lo: test/chmx.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chmx.lo -MD -MP -MF "$(DEPDIR)/chmx.Tpo" -c -o chmx.lo `test -f 'test/chmx.c' || echo '$(srcdir)/'`test/chmx.c; \
	then mv -f "$(DEPDIR)/chmx.Tpo" "$(DEPDIR)/chmx.Plo"; else rm -f "$(DEPDIR)/chmx.Tpo"; exit 1; fi
#	source='test/chmx.c' object='chmx.lo' libtool=yes \
#	depfile='$(DEPDIR)/chmx.Plo' tmpdepfile='$(DEPDIR)/chmx.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chmx.lo `test -f 'test/chmx.c' || echo '$(srcdir)/'`test/chmx.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkdir_p) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/mspack $(distdir)/test
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	$(AMTAR) chof - $(distdir) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	$(AMTAR) chof - $(distdir) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf - ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(AMTAR) xf - ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(AMTAR) xf - ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && $(mkdir_p) "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) config.h
installdirs:
	$(mkdir_p) $(DESTDIR)$(libdir) $(DESTDIR)$(includedir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)
	-rm -f test/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS ctags dist \
	dist-all dist-bzip2 dist-gzip dist-shar dist-tarZ dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-includeHEADERS \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES

dist-hook:
	-rm -rf `find $(distdir) -name CVS`
	-rm -f $(distdir)/*.la
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
