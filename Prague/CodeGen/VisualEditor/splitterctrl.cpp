// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "splitterctrl.h"

/////////////////////////////////////////////////////////////////////////////
// CSplitterCtrl

IMPLEMENT_DYNCREATE(CSplitterCtrl, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CSplitterCtrl properties

BOOL CSplitterCtrl::GetAlignVert()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CSplitterCtrl::SetAlignVert(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

short CSplitterCtrl::GetTopLeftToRightPercent()
{
	short result;
	GetProperty(0x2, VT_I2, (void*)&result);
	return result;
}

void CSplitterCtrl::SetTopLeftToRightPercent(short propVal)
{
	SetProperty(0x2, VT_I2, propVal);
}

short CSplitterCtrl::GetBottomLeftToRightPercent()
{
	short result;
	GetProperty(0x3, VT_I2, (void*)&result);
	return result;
}

void CSplitterCtrl::SetBottomLeftToRightPercent(short propVal)
{
	SetProperty(0x3, VT_I2, propVal);
}

short CSplitterCtrl::GetLeftTopToBottomPercent()
{
	short result;
	GetProperty(0x4, VT_I2, (void*)&result);
	return result;
}

void CSplitterCtrl::SetLeftTopToBottomPercent(short propVal)
{
	SetProperty(0x4, VT_I2, propVal);
}

short CSplitterCtrl::GetRightTopToBottomPercent()
{
	short result;
	GetProperty(0x5, VT_I2, (void*)&result);
	return result;
}

void CSplitterCtrl::SetRightTopToBottomPercent(short propVal)
{
	SetProperty(0x5, VT_I2, propVal);
}

BOOL CSplitterCtrl::GetTopPositionLocked()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void CSplitterCtrl::SetTopPositionLocked(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

BOOL CSplitterCtrl::GetBottomPositionLocked()
{
	BOOL result;
	GetProperty(0x7, VT_BOOL, (void*)&result);
	return result;
}

void CSplitterCtrl::SetBottomPositionLocked(BOOL propVal)
{
	SetProperty(0x7, VT_BOOL, propVal);
}

BOOL CSplitterCtrl::GetLeftPositionLocked()
{
	BOOL result;
	GetProperty(0x8, VT_BOOL, (void*)&result);
	return result;
}

void CSplitterCtrl::SetLeftPositionLocked(BOOL propVal)
{
	SetProperty(0x8, VT_BOOL, propVal);
}

BOOL CSplitterCtrl::GetRightPositionLocked()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CSplitterCtrl::SetRightPositionLocked(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CSplitterCtrl operations

SCODE CSplitterCtrl::AttachInnerWindow(long nRowInd, long nColumnInd, long hInnerWnd)
{
	SCODE result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_ERROR, (void*)&result, parms,
		nRowInd, nColumnInd, hInnerWnd);
	return result;
}
