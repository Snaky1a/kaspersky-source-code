. ƒобавить фабрику ошибок
. —обрать все синтаксические ошибки в фабрику, а не в дерево разбора (?)

. —обрать все декларации
	. ƒобавить нужное количество классов с корнем в NameContextNode
	. Ќаписать соответствующий визитор, стро€щий стек контекстов
	. ќтработать ошибку "already defined" с игнорированием
	. ѕродумать механизм тестировани€
	
. —делать простой поиск имени в текущем стеке контекстов
	. —делать "пустой" визитор, основна€ задача которого обойти дерево с 
	  одновременным построением стека контекстов, на базе ранее собранных
	  деклараций
	. Ќаписать алгоритм поиска простых имен в стеке контекстов
	. »спользовать дл€ тестировани€ "пустой" визитор
	
. —делать резолвинг типов
	. ѕродумать ссылочный механизм между типами, так чтобы не возникало утечек
	. ѕродумать механизм св€зывани€ главного дерева разбора с деревом типов
	. —делать рекурсивный поиск имени
	. ќтработать ошибку "not defined" с заменой: типа на int, значени€ на значение типа int
	. Ќа этом этапе можно уже писать семантически содержательные тесты
	
. ѕроработать механизм обработки и сообщени€ об ошибках

. —делать вычисление констант
. ƒобавить поддержку параметрических типов
. ƒобавить поддержку перегруженных имен
. ƒобавить поиск циклов в определении типов
. ƒобавить поиск циклов в определении констант
. ƒобавить тип `метод'
