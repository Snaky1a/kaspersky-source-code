/*
OLD: static char lat_char[] = "dfghijqrstvwzDFGIJLNQRSUVWZ";
NEW: static char lat_char[] = "df hijq stvwzDFGIJLNQRSUVWZ";

static char rus_char[] = "‚„‰∏ÊÁËÈÍÎÏÌÔÚÙˆ˜¯˘˙˚¸˝˛ˇ¡√ƒ®∆»…Àœ‘÷◊ÿŸ⁄€‹›ﬁﬂ";

static char *rus2lat[2] = 
{ 
    "014‡ÂÓÒÛı¿¬≈ ÃÕŒ–—“”’",
    "OlAaeopcyxABEKMHOPCTYX"
};

static char *lat2rus[2] = 
{
OLD: "036abce k nop uxyABCEHKMOPTXY",
OLD: "Œ«·‡‹ÒÂ Í ÔÓ ËıÛ¿¬—≈Õ ÃŒ–“’”"

NEW: "036abcegkmnopruxyABCEHKMOPTXY",
NEW: "Œ«·‡‹ÒÂ‰ÍÚÔÓ„ËıÛ¿¬—≈Õ ÃŒ–“’”"
};
*/

#include <windows.h>
static const BYTE CRUS = 0x1;
static const BYTE CLAT = 0x2;

static const BYTE g_UniqueTab[256] = {
0,        // 0x00, 0x0000, NULL
0,        // 0x01, 0x0001, START OF HEADING
0,        // 0x02, 0x0002, START OF TEXT
0,        // 0x03, 0x0003, END OF TEXT
0,        // 0x04, 0x0004, END OF TRANSMISSION
0,        // 0x05, 0x0005, ENQUIRY
0,        // 0x06, 0x0006, ACKNOWLEDGE
0,        // 0x07, 0x0007, BELL
0,        // 0x08, 0x0008, BACKSPACE
0,        // 0x09, 0x0009, HORIZONTAL TABULATION
0,        // 0x0A, 0x000A, LINE FEED
0,        // 0x0B, 0x000B, VERTICAL TABULATION
0,        // 0x0C, 0x000C, FORM FEED
0,        // 0x0D, 0x000D, CARRIAGE RETURN
0,        // 0x0E, 0x000E, SHIFT OUT
0,        // 0x0F, 0x000F, SHIFT IN
0,        // 0x10, 0x0010, DATA LINK ESCAPE
0,        // 0x11, 0x0011, DEVICE CONTROL ONE
0,        // 0x12, 0x0012, DEVICE CONTROL TWO
0,        // 0x13, 0x0013, DEVICE CONTROL THREE
0,        // 0x14, 0x0014, DEVICE CONTROL FOUR
0,        // 0x15, 0x0015, NEGATIVE ACKNOWLEDGE
0,        // 0x16, 0x0016, SYNCHRONOUS IDLE
0,        // 0x17, 0x0017, END OF TRANSMISSION BLOCK
0,        // 0x18, 0x0018, CANCEL
0,        // 0x19, 0x0019, END OF MEDIUM
0,        // 0x1A, 0x001A, SUBSTITUTE
0,        // 0x1B, 0x001B, ESCAPE
0,        // 0x1C, 0x001C, FILE SEPARATOR
0,        // 0x1D, 0x001D, GROUP SEPARATOR
0,        // 0x1E, 0x001E, RECORD SEPARATOR
0,        // 0x1F, 0x001F, UNIT SEPARATOR

0,        // ' ', 0x20, 0x0020, SPACE
0,        // '!', 0x21, 0x0021, EXCLAMATION MARK
0,        // '"', 0x22, 0x0022, QUOTATION MARK
0,        // '#', 0x23, 0x0023, NUMBER SIGN
0,        // '$', 0x24, 0x0024, DOLLAR SIGN
0,        // '%', 0x25, 0x0025, PERCENT SIGN
0,        // '&', 0x26, 0x0026, AMPERSAND
0,        // ''', 0x27, 0x0027, APOSTROPHE
0,        // '(', 0x28, 0x0028, LEFT PARENTHESIS
0,        // ')', 0x29, 0x0029, RIGHT PARENTHESIS
0,        // '*', 0x2A, 0x002A, ASTERISK
0,        // '+', 0x2B, 0x002B, PLUS SIGN
0,        // ',', 0x2C, 0x002C, COMMA
0,        // '-', 0x2D, 0x002D, HYPHEN-MINUS
0,        // '.', 0x2E, 0x002E, FULL STOP
0,        // '/', 0x2F, 0x002F, SOLIDUS

0,        // '0', 0x30, 0x0030, DIGIT ZERO
0,        // '1', 0x31, 0x0031, DIGIT ONE
0,        // '2', 0x32, 0x0032, DIGIT TWO
0,        // '3', 0x33, 0x0033, DIGIT THREE
0,        // '4', 0x34, 0x0034, DIGIT FOUR
0,        // '5', 0x35, 0x0035, DIGIT FIVE
0,        // '6', 0x36, 0x0036, DIGIT SIX
0,        // '7', 0x37, 0x0037, DIGIT SEVEN
0,        // '8', 0x38, 0x0038, DIGIT EIGHT
0,        // '9', 0x39, 0x0039, DIGIT NINE

0,        // ':', 0x3A, 0x003A, COLON
0,        // ';', 0x3B, 0x003B, SEMICOLON
0,        // '<', 0x3C, 0x003C, LESS-THAN SIGN
0,        // '=', 0x3D, 0x003D, EQUALS SIGN
0,        // '>', 0x3E, 0x003E, GREATER-THAN SIGN
0,        // '?', 0x3F, 0x003F, QUESTION MARK
0,        // '@', 0x40, 0x0040, COMMERCIAL AT

0,        // 'A', 0x41, 0x0041, LATIN CAPITAL LETTER A
0,        // 'B', 0x42, 0x0042, LATIN CAPITAL LETTER B
0,        // 'C', 0x43, 0x0043, LATIN CAPITAL LETTER C
CLAT,     // 'D', 0x44, 0x0044, LATIN CAPITAL LETTER D
0,        // 'E', 0x45, 0x0045, LATIN CAPITAL LETTER E
CLAT,     // 'F', 0x46, 0x0046, LATIN CAPITAL LETTER F
CLAT,     // 'G', 0x47, 0x0047, LATIN CAPITAL LETTER G
0,        // 'H', 0x48, 0x0048, LATIN CAPITAL LETTER H
CLAT,     // 'I', 0x49, 0x0049, LATIN CAPITAL LETTER I
CLAT,     // 'J', 0x4A, 0x004A, LATIN CAPITAL LETTER J
0,        // 'K', 0x4B, 0x004B, LATIN CAPITAL LETTER K
CLAT,     // 'L', 0x4C, 0x004C, LATIN CAPITAL LETTER L
0,        // 'M', 0x4D, 0x004D, LATIN CAPITAL LETTER M
CLAT,     // 'N', 0x4E, 0x004E, LATIN CAPITAL LETTER N
0,        // 'O', 0x4F, 0x004F, LATIN CAPITAL LETTER O
0,        // 'P', 0x50, 0x0050, LATIN CAPITAL LETTER P
CLAT,     // 'Q', 0x51, 0x0051, LATIN CAPITAL LETTER Q
CLAT,     // 'R', 0x52, 0x0052, LATIN CAPITAL LETTER R
CLAT,     // 'S', 0x53, 0x0053, LATIN CAPITAL LETTER S
0,        // 'T', 0x54, 0x0054, LATIN CAPITAL LETTER T
CLAT,     // 'U', 0x55, 0x0055, LATIN CAPITAL LETTER U
CLAT,     // 'V', 0x56, 0x0056, LATIN CAPITAL LETTER V
CLAT,     // 'W', 0x57, 0x0057, LATIN CAPITAL LETTER W
0,        // 'X', 0x58, 0x0058, LATIN CAPITAL LETTER X
0,        // 'Y', 0x59, 0x0059, LATIN CAPITAL LETTER Y
CLAT,     // 'Z', 0x5A, 0x005A, LATIN CAPITAL LETTER Z

0,        // '[', 0x5B, 0x005B, LEFT SQUARE BRACKET
0,        // '\', 0x5C, 0x005C, REVERSE SOLIDUS
0,        // ']', 0x5D, 0x005D, RIGHT SQUARE BRACKET
0,        // '^', 0x5E, 0x005E, CIRCUMFLEX ACCENT
0,        // '_', 0x5F, 0x005F, LOW LINE
0,        // '`', 0x60, 0x0060, GRAVE ACCENT

0,        // 'a', 0x61, 0x0061, LATIN SMALL LETTER A
0,        // 'b', 0x62, 0x0062, LATIN SMALL LETTER B
0,        // 'c', 0x63, 0x0063, LATIN SMALL LETTER C
CLAT,     // 'd', 0x64, 0x0064, LATIN SMALL LETTER D
0,        // 'e', 0x65, 0x0065, LATIN SMALL LETTER E
CLAT,     // 'f', 0x66, 0x0066, LATIN SMALL LETTER F
0,        // 'g', 0x67, 0x0067, LATIN SMALL LETTER G
CLAT,     // 'h', 0x68, 0x0068, LATIN SMALL LETTER H
CLAT,     // 'i', 0x69, 0x0069, LATIN SMALL LETTER I
CLAT,     // 'j', 0x6A, 0x006A, LATIN SMALL LETTER J
0,        // 'k', 0x6B, 0x006B, LATIN SMALL LETTER K
0,        // 'l', 0x6C, 0x006C, LATIN SMALL LETTER L
0,        // 'm', 0x6D, 0x006D, LATIN SMALL LETTER M
0,        // 'n', 0x6E, 0x006E, LATIN SMALL LETTER N
0,        // 'o', 0x6F, 0x006F, LATIN SMALL LETTER O
0,        // 'p', 0x70, 0x0070, LATIN SMALL LETTER P
CLAT,     // 'q', 0x71, 0x0071, LATIN SMALL LETTER Q
0,        // 'r', 0x72, 0x0072, LATIN SMALL LETTER R
CLAT,     // 's', 0x73, 0x0073, LATIN SMALL LETTER S
CLAT,     // 't', 0x74, 0x0074, LATIN SMALL LETTER T
0,        // 'u', 0x75, 0x0075, LATIN SMALL LETTER U
CLAT,     // 'v', 0x76, 0x0076, LATIN SMALL LETTER V
CLAT,     // 'w', 0x77, 0x0077, LATIN SMALL LETTER W
0,        // 'x', 0x78, 0x0078, LATIN SMALL LETTER X
0,        // 'y', 0x79, 0x0079, LATIN SMALL LETTER Y
CLAT,     // 'z', 0x7A, 0x007A, LATIN SMALL LETTER Z

0,        // '{', 0x7B, 0x007B, LEFT CURLY BRACKET
0,        // '|', 0x7C, 0x007C, VERTICAL LINE
0,        // '}', 0x7D, 0x007D, RIGHT CURLY BRACKET
0,        // '~', 0x7E, 0x007E, TILDE
0,        //      0x7F, 0x007F, DELETE
0,        // 'Ä', 0x80, 0x0402, CYRILLIC CAPITAL LETTER DJE
0,        // 'Å', 0x81, 0x0403, CYRILLIC CAPITAL LETTER GJE
0,        // 'Ç', 0x82, 0x201A, SINGLE LOW-9 QUOTATION MARK
0,        // 'É', 0x83, 0x0453, CYRILLIC SMALL LETTER GJE
0,        // 'Ñ', 0x84, 0x201E, DOUBLE LOW-9 QUOTATION MARK
0,        // 'Ö', 0x85, 0x2026, HORIZONTAL ELLIPSIS
0,        // 'Ü', 0x86, 0x2020, DAGGER
0,        // 'á', 0x87, 0x2021, DOUBLE DAGGER
0,        //      0x88, 0x20AC, EURO SIGN
0,        // 'â', 0x89, 0x2030, PER MILLE SIGN
0,        // 'ä', 0x8A, 0x0409, CYRILLIC CAPITAL LETTER LJE
0,        // 'ã', 0x8B, 0x2039, SINGLE LEFT-POINTING ANGLE QUOTATION MARK
0,        // 'å', 0x8C, 0x040A, CYRILLIC CAPITAL LETTER NJE
0,        // 'ç', 0x8D, 0x040C, CYRILLIC CAPITAL LETTER KJE
0,        // 'é', 0x8E, 0x040B, CYRILLIC CAPITAL LETTER TSHE
0,        // 'è', 0x8F, 0x040F, CYRILLIC CAPITAL LETTER DZHE
0,        // 'ê', 0x90, 0x0452, CYRILLIC SMALL LETTER DJE
0,        // 'ë', 0x91, 0x2018, LEFT SINGLE QUOTATION MARK
0,        // 'í', 0x92, 0x2019, RIGHT SINGLE QUOTATION MARK
0,        // 'ì', 0x93, 0x201C, LEFT DOUBLE QUOTATION MARK
0,        // 'î', 0x94, 0x201D, RIGHT DOUBLE QUOTATION MARK
0,        // 'ï', 0x95, 0x2022, BULLET
0,        // 'ñ', 0x96, 0x2013, EN DASH
0,        // 'ó', 0x97, 0x2014, EM DASH
0,        //      0x98, 0xFFFF, UNDEFINED
0,        // 'ô', 0x99, 0x2122, TRADE MARK SIGN
0,        // 'ö', 0x9A, 0x0459, CYRILLIC SMALL LETTER LJE
0,        // 'õ', 0x9B, 0x203A, SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
0,        // 'ú', 0x9C, 0x045A, CYRILLIC SMALL LETTER NJE
0,        // 'ù', 0x9D, 0x045C, CYRILLIC SMALL LETTER KJE
0,        // 'û', 0x9E, 0x045B, CYRILLIC SMALL LETTER TSHE
0,        // 'ü', 0x9F, 0x045F, CYRILLIC SMALL LETTER DZHE
0,        //      0xA0, 0x00A0, NO-BREAK SPACE
0,        // '°', 0xA1, 0x040E, CYRILLIC CAPITAL LETTER SHORT U
0,        // '¢', 0xA2, 0x045E, CYRILLIC SMALL LETTER SHORT U
0,        // '£', 0xA3, 0x0408, CYRILLIC CAPITAL LETTER JE
0,        // '§', 0xA4, 0x00A4, CURRENCY SIGN
0,        // '•', 0xA5, 0x0490, CYRILLIC CAPITAL LETTER GHE WITH UPTURN
0,        // '¶', 0xA6, 0x00A6, BROKEN BAR
0,        // 'ß', 0xA7, 0x00A7, SECTION SIGN

CRUS,     // '®', 0xA8, 0x0401, CYRILLIC CAPITAL LETTER IO

0,        // '©', 0xA9, 0x00A9, COPYRIGHT SIGN
0,        // '™', 0xAA, 0x0404, CYRILLIC CAPITAL LETTER UKRAINIAN IE
0,        // '´', 0xAB, 0x00AB, LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
0,        // '¨', 0xAC, 0x00AC, NOT SIGN
0,        // '≠', 0xAD, 0x00AD, SOFT HYPHEN
0,        // 'Æ', 0xAE, 0x00AE, REGISTERED SIGN
0,        // 'Ø', 0xAF, 0x0407, CYRILLIC CAPITAL LETTER YI
0,        // '∞', 0xB0, 0x00B0, DEGREE SIGN
0,        // '±', 0xB1, 0x00B1, PLUS-MINUS SIGN
0,        // '≤', 0xB2, 0x0406, CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I
0,        // '≥', 0xB3, 0x0456, CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I
0,        // '¥', 0xB4, 0x0491, CYRILLIC SMALL LETTER GHE WITH UPTURN
0,        // 'µ', 0xB5, 0x00B5, MICRO SIGN
0,        // '∂', 0xB6, 0x00B6, PILCROW SIGN
0,        // '∑', 0xB7, 0x00B7, MIDDLE DOT

CRUS,     // '∏', 0xB8, 0x0451, CYRILLIC SMALL LETTER IO

0,        // 'π', 0xB9, 0x2116, NUMERO SIGN
0,        // '∫', 0xBA, 0x0454, CYRILLIC SMALL LETTER UKRAINIAN IE
0,        // 'ª', 0xBB, 0x00BB, RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
0,        // 'º', 0xBC, 0x0458, CYRILLIC SMALL LETTER JE
0,        // 'Ω', 0xBD, 0x0405, CYRILLIC CAPITAL LETTER DZE
0,        // 'æ', 0xBE, 0x0455, CYRILLIC SMALL LETTER DZE
0,        // 'ø', 0xBF, 0x0457, CYRILLIC SMALL LETTER YI

0,        // '¿', 0xC0, 0x0410, CYRILLIC CAPITAL LETTER A
CRUS,     // '¡', 0xC1, 0x0411, CYRILLIC CAPITAL LETTER BE
0,        // '¬', 0xC2, 0x0412, CYRILLIC CAPITAL LETTER VE
CRUS,     // '√', 0xC3, 0x0413, CYRILLIC CAPITAL LETTER GHE
CRUS,     // 'ƒ', 0xC4, 0x0414, CYRILLIC CAPITAL LETTER DE
0,        // '≈', 0xC5, 0x0415, CYRILLIC CAPITAL LETTER IE
CRUS,     // '∆', 0xC6, 0x0416, CYRILLIC CAPITAL LETTER ZHE
0,        // '«', 0xC7, 0x0417, CYRILLIC CAPITAL LETTER ZE
CRUS,     // '»', 0xC8, 0x0418, CYRILLIC CAPITAL LETTER I
CRUS,     // '…', 0xC9, 0x0419, CYRILLIC CAPITAL LETTER SHORT I
0,        // ' ', 0xCA, 0x041A, CYRILLIC CAPITAL LETTER KA
CRUS,     // 'À', 0xCB, 0x041B, CYRILLIC CAPITAL LETTER EL
0,        // 'Ã', 0xCC, 0x041C, CYRILLIC CAPITAL LETTER EM
0,        // 'Õ', 0xCD, 0x041D, CYRILLIC CAPITAL LETTER EN
0,        // 'Œ', 0xCE, 0x041E, CYRILLIC CAPITAL LETTER O
CRUS,     // 'œ', 0xCF, 0x041F, CYRILLIC CAPITAL LETTER PE
0,        // '–', 0xD0, 0x0420, CYRILLIC CAPITAL LETTER ER
0,        // '—', 0xD1, 0x0421, CYRILLIC CAPITAL LETTER ES
0,        // '“', 0xD2, 0x0422, CYRILLIC CAPITAL LETTER TE
0,        // '”', 0xD3, 0x0423, CYRILLIC CAPITAL LETTER U
CRUS,     // '‘', 0xD4, 0x0424, CYRILLIC CAPITAL LETTER EF
0,        // '’', 0xD5, 0x0425, CYRILLIC CAPITAL LETTER HA
CRUS,     // '÷', 0xD6, 0x0426, CYRILLIC CAPITAL LETTER TSE
CRUS,     // '◊', 0xD7, 0x0427, CYRILLIC CAPITAL LETTER CHE
CRUS,     // 'ÿ', 0xD8, 0x0428, CYRILLIC CAPITAL LETTER SHA
CRUS,     // 'Ÿ', 0xD9, 0x0429, CYRILLIC CAPITAL LETTER SHCHA
CRUS,     // '⁄', 0xDA, 0x042A, CYRILLIC CAPITAL LETTER HARD SIGN
CRUS,     // '€', 0xDB, 0x042B, CYRILLIC CAPITAL LETTER YERU
CRUS,     // '‹', 0xDC, 0x042C, CYRILLIC CAPITAL LETTER SOFT SIGN
CRUS,     // '›', 0xDD, 0x042D, CYRILLIC CAPITAL LETTER E
CRUS,     // 'ﬁ', 0xDE, 0x042E, CYRILLIC CAPITAL LETTER YU
CRUS,     // 'ﬂ', 0xDF, 0x042F, CYRILLIC CAPITAL LETTER YA

0,        // '‡', 0xE0, 0x0430, CYRILLIC SMALL LETTER A
0,        // '·', 0xE1, 0x0431, CYRILLIC SMALL LETTER BE
CRUS,     // '‚', 0xE2, 0x0432, CYRILLIC SMALL LETTER VE
CRUS,     // '„', 0xE3, 0x0433, CYRILLIC SMALL LETTER GHE
CRUS,     // '‰', 0xE4, 0x0434, CYRILLIC SMALL LETTER DE
0,        // 'Â', 0xE5, 0x0435, CYRILLIC SMALL LETTER IE
CRUS,     // 'Ê', 0xE6, 0x0436, CYRILLIC SMALL LETTER ZHE
CRUS,     // 'Á', 0xE7, 0x0437, CYRILLIC SMALL LETTER ZE
CRUS,     // 'Ë', 0xE8, 0x0438, CYRILLIC SMALL LETTER I
CRUS,     // 'È', 0xE9, 0x0439, CYRILLIC SMALL LETTER SHORT I
CRUS,     // 'Í', 0xEA, 0x043A, CYRILLIC SMALL LETTER KA
CRUS,     // 'Î', 0xEB, 0x043B, CYRILLIC SMALL LETTER EL
CRUS,     // 'Ï', 0xEC, 0x043C, CYRILLIC SMALL LETTER EM
CRUS,     // 'Ì', 0xED, 0x043D, CYRILLIC SMALL LETTER EN
0,        // 'Ó', 0xEE, 0x043E, CYRILLIC SMALL LETTER O
CRUS,     // 'Ô', 0xEF, 0x043F, CYRILLIC SMALL LETTER PE
0,        // '', 0xF0, 0x0440, CYRILLIC SMALL LETTER ER
0,        // 'Ò', 0xF1, 0x0441, CYRILLIC SMALL LETTER ES
CRUS,     // 'Ú', 0xF2, 0x0442, CYRILLIC SMALL LETTER TE
0,        // 'Û', 0xF3, 0x0443, CYRILLIC SMALL LETTER U
CRUS,     // 'Ù', 0xF4, 0x0444, CYRILLIC SMALL LETTER EF
0,        // 'ı', 0xF5, 0x0445, CYRILLIC SMALL LETTER HA
CRUS,     // 'ˆ', 0xF6, 0x0446, CYRILLIC SMALL LETTER TSE
CRUS,     // '˜', 0xF7, 0x0447, CYRILLIC SMALL LETTER CHE
CRUS,     // '¯', 0xF8, 0x0448, CYRILLIC SMALL LETTER SHA
CRUS,     // '˘', 0xF9, 0x0449, CYRILLIC SMALL LETTER SHCHA
CRUS,     // '˙', 0xFA, 0x044A, CYRILLIC SMALL LETTER HARD SIGN
CRUS,     // '˚', 0xFB, 0x044B, CYRILLIC SMALL LETTER YERU
CRUS,     // '¸', 0xFC, 0x044C, CYRILLIC SMALL LETTER SOFT SIGN
CRUS,     // '˝', 0xFD, 0x044D, CYRILLIC SMALL LETTER E
CRUS,     // '˛', 0xFE, 0x044E, CYRILLIC SMALL LETTER YU
CRUS      // 'ˇ', 0xFF, 0x044F  CYRILLIC SMALL LETTER YA
};

static const BYTE g_Rus2Lat[256] = {
0x00,        // 0x00, 0x0000, NULL
0x01,        // 0x01, 0x0001, START OF HEADING
0x02,        // 0x02, 0x0002, START OF TEXT
0x03,        // 0x03, 0x0003, END OF TEXT
0x04,        // 0x04, 0x0004, END OF TRANSMISSION
0x05,        // 0x05, 0x0005, ENQUIRY
0x06,        // 0x06, 0x0006, ACKNOWLEDGE
0x07,        // 0x07, 0x0007, BELL
0x08,        // 0x08, 0x0008, BACKSPACE
0x09,        // 0x09, 0x0009, HORIZONTAL TABULATION
0x0A,        // 0x0A, 0x000A, LINE FEED
0x0B,        // 0x0B, 0x000B, VERTICAL TABULATION
0x0C,        // 0x0C, 0x000C, FORM FEED
0x0D,        // 0x0D, 0x000D, CARRIAGE RETURN
0x0E,        // 0x0E, 0x000E, SHIFT OUT
0x0F,        // 0x0F, 0x000F, SHIFT IN
0x10,        // 0x10, 0x0010, DATA LINK ESCAPE
0x11,        // 0x11, 0x0011, DEVICE CONTROL ONE
0x12,        // 0x12, 0x0012, DEVICE CONTROL TWO
0x13,        // 0x13, 0x0013, DEVICE CONTROL THREE
0x14,        // 0x14, 0x0014, DEVICE CONTROL FOUR
0x15,        // 0x15, 0x0015, NEGATIVE ACKNOWLEDGE
0x16,        // 0x16, 0x0016, SYNCHRONOUS IDLE
0x17,        // 0x17, 0x0017, END OF TRANSMISSION BLOCK
0x18,        // 0x18, 0x0018, CANCEL
0x19,        // 0x19, 0x0019, END OF MEDIUM
0x1A,        // 0x1A, 0x001A, SUBSTITUTE
0x1B,        // 0x1B, 0x001B, ESCAPE
0x1C,        // 0x1C, 0x001C, FILE SEPARATOR
0x1D,        // 0x1D, 0x001D, GROUP SEPARATOR
0x1E,        // 0x1E, 0x001E, RECORD SEPARATOR
0x1F,        // 0x1F, 0x001F, UNIT SEPARATOR

0x20,        // ' ', 0x20, 0x0020, SPACE
0x21,        // '!', 0x21, 0x0021, EXCLAMATION MARK
0x22,        // '"', 0x22, 0x0022, QUOTATION MARK
0x23,        // '#', 0x23, 0x0023, NUMBER SIGN
0x24,        // '$', 0x24, 0x0024, DOLLAR SIGN
0x25,        // '%', 0x25, 0x0025, PERCENT SIGN
0x26,        // '&', 0x26, 0x0026, AMPERSAND
0x27,        // ''', 0x27, 0x0027, APOSTROPHE
0x28,        // '(', 0x28, 0x0028, LEFT PARENTHESIS
0x29,        // ')', 0x29, 0x0029, RIGHT PARENTHESIS
0x2A,        // '*', 0x2A, 0x002A, ASTERISK
0x2B,        // '+', 0x2B, 0x002B, PLUS SIGN
0x2C,        // ',', 0x2C, 0x002C, COMMA
0x2D,        // '-', 0x2D, 0x002D, HYPHEN-MINUS
0x2E,        // '.', 0x2E, 0x002E, FULL STOP
0x2F,        // '/', 0x2F, 0x002F, SOLIDUS

     0x4F,   // '0', 0x30, 0x0030, DIGIT ZERO -> BYTE('O')
     0x6C,   // '1', 0x31, 0x0031, DIGIT ONE  -> BYTE('l')
0x32,        // '2', 0x32, 0x0032, DIGIT TWO
0x33,        // '3', 0x33, 0x0033, DIGIT THREE
     0x41,   // '4', 0x34, 0x0034, DIGIT FOUR -> BYTE('A')
0x35,        // '5', 0x35, 0x0035, DIGIT FIVE
0x36,        // '6', 0x36, 0x0036, DIGIT SIX
0x37,        // '7', 0x37, 0x0037, DIGIT SEVEN
0x38,        // '8', 0x38, 0x0038, DIGIT EIGHT
0x39,        // '9', 0x39, 0x0039, DIGIT NINE

0x3A,        // ':', 0x3A, 0x003A, COLON
0x3B,        // ';', 0x3B, 0x003B, SEMICOLON
0x3C,        // '<', 0x3C, 0x003C, LESS-THAN SIGN
0x3D,        // '=', 0x3D, 0x003D, EQUALS SIGN
0x3E,        // '>', 0x3E, 0x003E, GREATER-THAN SIGN
0x3F,        // '?', 0x3F, 0x003F, QUESTION MARK
0x40,        // '@', 0x40, 0x0040, COMMERCIAL AT

0x41,        // 'A', 0x41, 0x0041, LATIN CAPITAL LETTER A
0x42,        // 'B', 0x42, 0x0042, LATIN CAPITAL LETTER B
0x43,        // 'C', 0x43, 0x0043, LATIN CAPITAL LETTER C
0x44,        // 'D', 0x44, 0x0044, LATIN CAPITAL LETTER D
0x45,        // 'E', 0x45, 0x0045, LATIN CAPITAL LETTER E
0x46,        // 'F', 0x46, 0x0046, LATIN CAPITAL LETTER F
0x47,        // 'G', 0x47, 0x0047, LATIN CAPITAL LETTER G
0x48,        // 'H', 0x48, 0x0048, LATIN CAPITAL LETTER H
0x49,        // 'I', 0x49, 0x0049, LATIN CAPITAL LETTER I
0x4A,        // 'J', 0x4A, 0x004A, LATIN CAPITAL LETTER J
0x4B,        // 'K', 0x4B, 0x004B, LATIN CAPITAL LETTER K
0x4C,        // 'L', 0x4C, 0x004C, LATIN CAPITAL LETTER L
0x4D,        // 'M', 0x4D, 0x004D, LATIN CAPITAL LETTER M
0x4E,        // 'N', 0x4E, 0x004E, LATIN CAPITAL LETTER N
0x4F,        // 'O', 0x4F, 0x004F, LATIN CAPITAL LETTER O
0x50,        // 'P', 0x50, 0x0050, LATIN CAPITAL LETTER P
0x51,        // 'Q', 0x51, 0x0051, LATIN CAPITAL LETTER Q
0x52,        // 'R', 0x52, 0x0052, LATIN CAPITAL LETTER R
0x53,        // 'S', 0x53, 0x0053, LATIN CAPITAL LETTER S
0x54,        // 'T', 0x54, 0x0054, LATIN CAPITAL LETTER T
0x55,        // 'U', 0x55, 0x0055, LATIN CAPITAL LETTER U
0x56,        // 'V', 0x56, 0x0056, LATIN CAPITAL LETTER V
0x57,        // 'W', 0x57, 0x0057, LATIN CAPITAL LETTER W
0x58,        // 'X', 0x58, 0x0058, LATIN CAPITAL LETTER X
0x59,        // 'Y', 0x59, 0x0059, LATIN CAPITAL LETTER Y
0x5A,        // 'Z', 0x5A, 0x005A, LATIN CAPITAL LETTER Z

0x5B,        // '[', 0x5B, 0x005B, LEFT SQUARE BRACKET
0x5C,        // '\', 0x5C, 0x005C, REVERSE SOLIDUS
0x5D,        // ']', 0x5D, 0x005D, RIGHT SQUARE BRACKET
0x5E,        // '^', 0x5E, 0x005E, CIRCUMFLEX ACCENT
0x5F,        // '_', 0x5F, 0x005F, LOW LINE
0x60,        // '`', 0x60, 0x0060, GRAVE ACCENT

0x61,        // 'a', 0x61, 0x0061, LATIN SMALL LETTER A
0x62,        // 'b', 0x62, 0x0062, LATIN SMALL LETTER B
0x63,        // 'c', 0x63, 0x0063, LATIN SMALL LETTER C
0x64,        // 'd', 0x64, 0x0064, LATIN SMALL LETTER D
0x65,        // 'e', 0x65, 0x0065, LATIN SMALL LETTER E
0x66,        // 'f', 0x66, 0x0066, LATIN SMALL LETTER F
0x67,        // 'g', 0x67, 0x0067, LATIN SMALL LETTER G
0x68,        // 'h', 0x68, 0x0068, LATIN SMALL LETTER H
0x69,        // 'i', 0x69, 0x0069, LATIN SMALL LETTER I
0x6A,        // 'j', 0x6A, 0x006A, LATIN SMALL LETTER J
0x6B,        // 'k', 0x6B, 0x006B, LATIN SMALL LETTER K
0x6C,        // 'l', 0x6C, 0x006C, LATIN SMALL LETTER L
0x6D,        // 'm', 0x6D, 0x006D, LATIN SMALL LETTER M
0x6E,        // 'n', 0x6E, 0x006E, LATIN SMALL LETTER N
0x6F,        // 'o', 0x6F, 0x006F, LATIN SMALL LETTER O
0x70,        // 'p', 0x70, 0x0070, LATIN SMALL LETTER P
0x71,        // 'q', 0x71, 0x0071, LATIN SMALL LETTER Q
0x72,        // 'r', 0x72, 0x0072, LATIN SMALL LETTER R
0x73,        // 's', 0x73, 0x0073, LATIN SMALL LETTER S
0x74,        // 't', 0x74, 0x0074, LATIN SMALL LETTER T
0x75,        // 'u', 0x75, 0x0075, LATIN SMALL LETTER U
0x76,        // 'v', 0x76, 0x0076, LATIN SMALL LETTER V
0x77,        // 'w', 0x77, 0x0077, LATIN SMALL LETTER W
0x78,        // 'x', 0x78, 0x0078, LATIN SMALL LETTER X
0x79,        // 'y', 0x79, 0x0079, LATIN SMALL LETTER Y
0x7A,        // 'z', 0x7A, 0x007A, LATIN SMALL LETTER Z

0x7B,        // '{', 0x7B, 0x007B, LEFT CURLY BRACKET
0x7C,        // '|', 0x7C, 0x007C, VERTICAL LINE
0x7D,        // '}', 0x7D, 0x007D, RIGHT CURLY BRACKET
0x7E,        // '~', 0x7E, 0x007E, TILDE
0x7F,        //      0x7F, 0x007F, DELETE
0x80,        // 'Ä', 0x80, 0x0402, CYRILLIC CAPITAL LETTER DJE
0x81,        // 'Å', 0x81, 0x0403, CYRILLIC CAPITAL LETTER GJE
0x82,        // 'Ç', 0x82, 0x201A, SINGLE LOW-9 QUOTATION MARK
0x83,        // 'É', 0x83, 0x0453, CYRILLIC SMALL LETTER GJE
0x84,        // 'Ñ', 0x84, 0x201E, DOUBLE LOW-9 QUOTATION MARK
0x85,        // 'Ö', 0x85, 0x2026, HORIZONTAL ELLIPSIS
0x86,        // 'Ü', 0x86, 0x2020, DAGGER
0x87,        // 'á', 0x87, 0x2021, DOUBLE DAGGER
0x88,        //      0x88, 0x20AC, EURO SIGN
0x89,        // 'â', 0x89, 0x2030, PER MILLE SIGN
0x8A,        // 'ä', 0x8A, 0x0409, CYRILLIC CAPITAL LETTER LJE
0x8B,        // 'ã', 0x8B, 0x2039, SINGLE LEFT-POINTING ANGLE QUOTATION MARK
0x8C,        // 'å', 0x8C, 0x040A, CYRILLIC CAPITAL LETTER NJE
0x8D,        // 'ç', 0x8D, 0x040C, CYRILLIC CAPITAL LETTER KJE
0x8E,        // 'é', 0x8E, 0x040B, CYRILLIC CAPITAL LETTER TSHE
0x8F,        // 'è', 0x8F, 0x040F, CYRILLIC CAPITAL LETTER DZHE
0x90,        // 'ê', 0x90, 0x0452, CYRILLIC SMALL LETTER DJE
0x91,        // 'ë', 0x91, 0x2018, LEFT SINGLE QUOTATION MARK
0x92,        // 'í', 0x92, 0x2019, RIGHT SINGLE QUOTATION MARK
0x93,        // 'ì', 0x93, 0x201C, LEFT DOUBLE QUOTATION MARK
0x94,        // 'î', 0x94, 0x201D, RIGHT DOUBLE QUOTATION MARK
0x95,        // 'ï', 0x95, 0x2022, BULLET
0x96,        // 'ñ', 0x96, 0x2013, EN DASH
0x97,        // 'ó', 0x97, 0x2014, EM DASH
0x98,        //      0x98, 0xFFFF, UNDEFINED
0x99,        // 'ô', 0x99, 0x2122, TRADE MARK SIGN
0x9A,        // 'ö', 0x9A, 0x0459, CYRILLIC SMALL LETTER LJE
0x9B,        // 'õ', 0x9B, 0x203A, SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
0x9C,        // 'ú', 0x9C, 0x045A, CYRILLIC SMALL LETTER NJE
0x9D,        // 'ù', 0x9D, 0x045C, CYRILLIC SMALL LETTER KJE
0x9E,        // 'û', 0x9E, 0x045B, CYRILLIC SMALL LETTER TSHE
0x9F,        // 'ü', 0x9F, 0x045F, CYRILLIC SMALL LETTER DZHE
0xA0,        //      0xA0, 0x00A0, NO-BREAK SPACE
0xA1,        // '°', 0xA1, 0x040E, CYRILLIC CAPITAL LETTER SHORT U
0xA2,        // '¢', 0xA2, 0x045E, CYRILLIC SMALL LETTER SHORT U
0xA3,        // '£', 0xA3, 0x0408, CYRILLIC CAPITAL LETTER JE
0xA4,        // '§', 0xA4, 0x00A4, CURRENCY SIGN
0xA5,        // '•', 0xA5, 0x0490, CYRILLIC CAPITAL LETTER GHE WITH UPTURN
0xA6,        // '¶', 0xA6, 0x00A6, BROKEN BAR
0xA7,        // 'ß', 0xA7, 0x00A7, SECTION SIGN

0xA8,        // '®', 0xA8, 0x0401, CYRILLIC CAPITAL LETTER IO

0xA9,        // '©', 0xA9, 0x00A9, COPYRIGHT SIGN
0xAA,        // '™', 0xAA, 0x0404, CYRILLIC CAPITAL LETTER UKRAINIAN IE
0xAB,        // '´', 0xAB, 0x00AB, LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
0xAC,        // '¨', 0xAC, 0x00AC, NOT SIGN
0xAD,        // '≠', 0xAD, 0x00AD, SOFT HYPHEN
0xAE,        // 'Æ', 0xAE, 0x00AE, REGISTERED SIGN
0xAF,        // 'Ø', 0xAF, 0x0407, CYRILLIC CAPITAL LETTER YI
0xB0,        // '∞', 0xB0, 0x00B0, DEGREE SIGN
0xB1,        // '±', 0xB1, 0x00B1, PLUS-MINUS SIGN
0xB2,        // '≤', 0xB2, 0x0406, CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I
0xB3,        // '≥', 0xB3, 0x0456, CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I
0xB4,        // '¥', 0xB4, 0x0491, CYRILLIC SMALL LETTER GHE WITH UPTURN
0xB5,        // 'µ', 0xB5, 0x00B5, MICRO SIGN
0xB6,        // '∂', 0xB6, 0x00B6, PILCROW SIGN
0xB7,        // '∑', 0xB7, 0x00B7, MIDDLE DOT

0xB8,        // '∏', 0xB8, 0x0451, CYRILLIC SMALL LETTER IO

0xB9,        // 'π', 0xB9, 0x2116, NUMERO SIGN
0xBA,        // '∫', 0xBA, 0x0454, CYRILLIC SMALL LETTER UKRAINIAN IE
0xBB,        // 'ª', 0xBB, 0x00BB, RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
0xBC,        // 'º', 0xBC, 0x0458, CYRILLIC SMALL LETTER JE
0xBD,        // 'Ω', 0xBD, 0x0405, CYRILLIC CAPITAL LETTER DZE
0xBE,        // 'æ', 0xBE, 0x0455, CYRILLIC SMALL LETTER DZE
0xBF,        // 'ø', 0xBF, 0x0457, CYRILLIC SMALL LETTER YI

     0x41,   // '¿', 0xC0, 0x0410, CYRILLIC CAPITAL LETTER A  -> BYTE('A')
0xC1,        // '¡', 0xC1, 0x0411, CYRILLIC CAPITAL LETTER BE
     0x42,   // '¬', 0xC2, 0x0412, CYRILLIC CAPITAL LETTER VE -> BYTE('B')
0xC3,        // '√', 0xC3, 0x0413, CYRILLIC CAPITAL LETTER GHE
0xC4,        // 'ƒ', 0xC4, 0x0414, CYRILLIC CAPITAL LETTER DE
     0x45,   // '≈', 0xC5, 0x0415, CYRILLIC CAPITAL LETTER IE -> BYTE('E')
0xC6,        // '∆', 0xC6, 0x0416, CYRILLIC CAPITAL LETTER ZHE
0xC7,        // '«', 0xC7, 0x0417, CYRILLIC CAPITAL LETTER ZE
0xC8,        // '»', 0xC8, 0x0418, CYRILLIC CAPITAL LETTER I
0xC9,        // '…', 0xC9, 0x0419, CYRILLIC CAPITAL LETTER SHORT I
     0x4B,   // ' ', 0xCA, 0x041A, CYRILLIC CAPITAL LETTER KA -> BYTE('K')
0xCB,        // 'À', 0xCB, 0x041B, CYRILLIC CAPITAL LETTER EL
     0x4D,   // 'Ã', 0xCC, 0x041C, CYRILLIC CAPITAL LETTER EM -> BYTE('M')
     0x48,   // 'Õ', 0xCD, 0x041D, CYRILLIC CAPITAL LETTER EN -> BYTE('H')
     0x4F,   // 'Œ', 0xCE, 0x041E, CYRILLIC CAPITAL LETTER O  -> BYTE('O')
0xCF,        // 'œ', 0xCF, 0x041F, CYRILLIC CAPITAL LETTER PE
     0x50,   // '–', 0xD0, 0x0420, CYRILLIC CAPITAL LETTER ER -> BYTE('P')
     0x43,   // '—', 0xD1, 0x0421, CYRILLIC CAPITAL LETTER ES -> BYTE('C')
     0x54,   // '“', 0xD2, 0x0422, CYRILLIC CAPITAL LETTER TE -> BYTE('T')
     0x59,   // '”', 0xD3, 0x0423, CYRILLIC CAPITAL LETTER U  -> BYTE('Y')
0xD4,        // '‘', 0xD4, 0x0424, CYRILLIC CAPITAL LETTER EF
     0x58,   // '’', 0xD5, 0x0425, CYRILLIC CAPITAL LETTER HA -> BYTE('X')
0xD6,        // '÷', 0xD6, 0x0426, CYRILLIC CAPITAL LETTER TSE
0xD7,        // '◊', 0xD7, 0x0427, CYRILLIC CAPITAL LETTER CHE
0xD8,        // 'ÿ', 0xD8, 0x0428, CYRILLIC CAPITAL LETTER SHA
0xD9,        // 'Ÿ', 0xD9, 0x0429, CYRILLIC CAPITAL LETTER SHCHA
0xDA,        // '⁄', 0xDA, 0x042A, CYRILLIC CAPITAL LETTER HARD SIGN
0xDB,        // '€', 0xDB, 0x042B, CYRILLIC CAPITAL LETTER YERU
0xDC,        // '‹', 0xDC, 0x042C, CYRILLIC CAPITAL LETTER SOFT SIGN
0xDD,        // '›', 0xDD, 0x042D, CYRILLIC CAPITAL LETTER E
0xDE,        // 'ﬁ', 0xDE, 0x042E, CYRILLIC CAPITAL LETTER YU
0xDF,        // 'ﬂ', 0xDF, 0x042F, CYRILLIC CAPITAL LETTER YA

     0x61,   // '‡', 0xE0, 0x0430, CYRILLIC SMALL LETTER A  -> BYTE('a')
0xE1,        // '·', 0xE1, 0x0431, CYRILLIC SMALL LETTER BE
0xE2,        // '‚', 0xE2, 0x0432, CYRILLIC SMALL LETTER VE
0xE3,        // '„', 0xE3, 0x0433, CYRILLIC SMALL LETTER GHE
0xE4,        // '‰', 0xE4, 0x0434, CYRILLIC SMALL LETTER DE
     0x65,   // 'Â', 0xE5, 0x0435, CYRILLIC SMALL LETTER IE -> BYTE('e')
0xE6,        // 'Ê', 0xE6, 0x0436, CYRILLIC SMALL LETTER ZHE
0xE7,        // 'Á', 0xE7, 0x0437, CYRILLIC SMALL LETTER ZE
0xE8,        // 'Ë', 0xE8, 0x0438, CYRILLIC SMALL LETTER I
0xE9,        // 'È', 0xE9, 0x0439, CYRILLIC SMALL LETTER SHORT I
0xEA,        // 'Í', 0xEA, 0x043A, CYRILLIC SMALL LETTER KA
0xEB,        // 'Î', 0xEB, 0x043B, CYRILLIC SMALL LETTER EL
0xEC,        // 'Ï', 0xEC, 0x043C, CYRILLIC SMALL LETTER EM
0xED,        // 'Ì', 0xED, 0x043D, CYRILLIC SMALL LETTER EN
     0x6F,   // 'Ó', 0xEE, 0x043E, CYRILLIC SMALL LETTER O  -> BYTE('o')
0xEF,        // 'Ô', 0xEF, 0x043F, CYRILLIC SMALL LETTER PE
     0x70,   // '', 0xF0, 0x0440, CYRILLIC SMALL LETTER ER -> BYTE('p')
     0x63,   // 'Ò', 0xF1, 0x0441, CYRILLIC SMALL LETTER ES -> BYTE('c')
0xF2,        // 'Ú', 0xF2, 0x0442, CYRILLIC SMALL LETTER TE
     0x79,   // 'Û', 0xF3, 0x0443, CYRILLIC SMALL LETTER U  -> BYTE('y')
0xF4,        // 'Ù', 0xF4, 0x0444, CYRILLIC SMALL LETTER EF
     0x78,   // 'ı', 0xF5, 0x0445, CYRILLIC SMALL LETTER HA -> BYTE('x')
0xF6,        // 'ˆ', 0xF6, 0x0446, CYRILLIC SMALL LETTER TSE
0xF7,        // '˜', 0xF7, 0x0447, CYRILLIC SMALL LETTER CHE
0xF8,        // '¯', 0xF8, 0x0448, CYRILLIC SMALL LETTER SHA
0xF9,        // '˘', 0xF9, 0x0449, CYRILLIC SMALL LETTER SHCHA
0xFA,        // '˙', 0xFA, 0x044A, CYRILLIC SMALL LETTER HARD SIGN
0xFB,        // '˚', 0xFB, 0x044B, CYRILLIC SMALL LETTER YERU
0xFC,        // '¸', 0xFC, 0x044C, CYRILLIC SMALL LETTER SOFT SIGN
0xFD,        // '˝', 0xFD, 0x044D, CYRILLIC SMALL LETTER E
0xFE,        // '˛', 0xFE, 0x044E, CYRILLIC SMALL LETTER YU
0xFF         // 'ˇ', 0xFF, 0x044F  CYRILLIC SMALL LETTER YA
};

static const BYTE g_Lat2Rus[256] = {
0x00,        // 0x00, 0x0000, NULL
0x01,        // 0x01, 0x0001, START OF HEADING
0x02,        // 0x02, 0x0002, START OF TEXT
0x03,        // 0x03, 0x0003, END OF TEXT
0x04,        // 0x04, 0x0004, END OF TRANSMISSION
0x05,        // 0x05, 0x0005, ENQUIRY
0x06,        // 0x06, 0x0006, ACKNOWLEDGE
0x07,        // 0x07, 0x0007, BELL
0x08,        // 0x08, 0x0008, BACKSPACE
0x09,        // 0x09, 0x0009, HORIZONTAL TABULATION
0x0A,        // 0x0A, 0x000A, LINE FEED
0x0B,        // 0x0B, 0x000B, VERTICAL TABULATION
0x0C,        // 0x0C, 0x000C, FORM FEED
0x0D,        // 0x0D, 0x000D, CARRIAGE RETURN
0x0E,        // 0x0E, 0x000E, SHIFT OUT
0x0F,        // 0x0F, 0x000F, SHIFT IN
0x10,        // 0x10, 0x0010, DATA LINK ESCAPE
0x11,        // 0x11, 0x0011, DEVICE CONTROL ONE
0x12,        // 0x12, 0x0012, DEVICE CONTROL TWO
0x13,        // 0x13, 0x0013, DEVICE CONTROL THREE
0x14,        // 0x14, 0x0014, DEVICE CONTROL FOUR
0x15,        // 0x15, 0x0015, NEGATIVE ACKNOWLEDGE
0x16,        // 0x16, 0x0016, SYNCHRONOUS IDLE
0x17,        // 0x17, 0x0017, END OF TRANSMISSION BLOCK
0x18,        // 0x18, 0x0018, CANCEL
0x19,        // 0x19, 0x0019, END OF MEDIUM
0x1A,        // 0x1A, 0x001A, SUBSTITUTE
0x1B,        // 0x1B, 0x001B, ESCAPE
0x1C,        // 0x1C, 0x001C, FILE SEPARATOR
0x1D,        // 0x1D, 0x001D, GROUP SEPARATOR
0x1E,        // 0x1E, 0x001E, RECORD SEPARATOR
0x1F,        // 0x1F, 0x001F, UNIT SEPARATOR

0x20,        // ' ', 0x20, 0x0020, SPACE
0x21,        // '!', 0x21, 0x0021, EXCLAMATION MARK
0x22,        // '"', 0x22, 0x0022, QUOTATION MARK
0x23,        // '#', 0x23, 0x0023, NUMBER SIGN
0x24,        // '$', 0x24, 0x0024, DOLLAR SIGN
0x25,        // '%', 0x25, 0x0025, PERCENT SIGN
0x26,        // '&', 0x26, 0x0026, AMPERSAND
0x27,        // ''', 0x27, 0x0027, APOSTROPHE
0x28,        // '(', 0x28, 0x0028, LEFT PARENTHESIS
0x29,        // ')', 0x29, 0x0029, RIGHT PARENTHESIS
0x2A,        // '*', 0x2A, 0x002A, ASTERISK
0x2B,        // '+', 0x2B, 0x002B, PLUS SIGN
0x2C,        // ',', 0x2C, 0x002C, COMMA
0x2D,        // '-', 0x2D, 0x002D, HYPHEN-MINUS
0x2E,        // '.', 0x2E, 0x002E, FULL STOP
0x2F,        // '/', 0x2F, 0x002F, SOLIDUS

     0xCE,   // '0', 0x30, 0x0030, DIGIT ZERO  -> BYTE('Œ')
0x31,        // '1', 0x31, 0x0031, DIGIT ONE
0x32,        // '2', 0x32, 0x0032, DIGIT TWO
     0xC7,   // '3', 0x33, 0x0033, DIGIT THREE -> BYTE('«')
0x34,        // '4', 0x34, 0x0034, DIGIT FOUR
0x35,        // '5', 0x35, 0x0035, DIGIT FIVE
     0xE1,   // '6', 0x36, 0x0036, DIGIT SIX   -> BYTE('·')
0x37,        // '7', 0x37, 0x0037, DIGIT SEVEN
0x38,        // '8', 0x38, 0x0038, DIGIT EIGHT
0x39,        // '9', 0x39, 0x0039, DIGIT NINE

0x3A,        // ':', 0x3A, 0x003A, COLON
0x3B,        // ';', 0x3B, 0x003B, SEMICOLON
0x3C,        // '<', 0x3C, 0x003C, LESS-THAN SIGN
0x3D,        // '=', 0x3D, 0x003D, EQUALS SIGN
0x3E,        // '>', 0x3E, 0x003E, GREATER-THAN SIGN
0x3F,        // '?', 0x3F, 0x003F, QUESTION MARK
0x40,        // '@', 0x40, 0x0040, COMMERCIAL AT

     0xC0,   // 'A', 0x41, 0x0041, LATIN CAPITAL LETTER A -> BYTE('¿')
     0xC2,   // 'B', 0x42, 0x0042, LATIN CAPITAL LETTER B -> BYTE('¬')
     0xD1,   // 'C', 0x43, 0x0043, LATIN CAPITAL LETTER C -> BYTE('—')
0x44,        // 'D', 0x44, 0x0044, LATIN CAPITAL LETTER D
     0xC5,   // 'E', 0x45, 0x0045, LATIN CAPITAL LETTER E -> BYTE('≈')
0x46,        // 'F', 0x46, 0x0046, LATIN CAPITAL LETTER F
0x47,        // 'G', 0x47, 0x0047, LATIN CAPITAL LETTER G
     0xCD,   // 'H', 0x48, 0x0048, LATIN CAPITAL LETTER H -> BYTE('Õ')
0x49,        // 'I', 0x49, 0x0049, LATIN CAPITAL LETTER I
0x4A,        // 'J', 0x4A, 0x004A, LATIN CAPITAL LETTER J
     0xCA,   // 'K', 0x4B, 0x004B, LATIN CAPITAL LETTER K -> BYTE(' ')
0x4C,        // 'L', 0x4C, 0x004C, LATIN CAPITAL LETTER L
     0xCC,   // 'M', 0x4D, 0x004D, LATIN CAPITAL LETTER M -> BYTE('Ã')
0x4E,        // 'N', 0x4E, 0x004E, LATIN CAPITAL LETTER N
     0xCE,   // 'O', 0x4F, 0x004F, LATIN CAPITAL LETTER O -> BYTE('Œ')
     0xD0,   // 'P', 0x50, 0x0050, LATIN CAPITAL LETTER P -> BYTE('–')
0x51,        // 'Q', 0x51, 0x0051, LATIN CAPITAL LETTER Q
0x52,        // 'R', 0x52, 0x0052, LATIN CAPITAL LETTER R
0x53,        // 'S', 0x53, 0x0053, LATIN CAPITAL LETTER S
     0xD2,   // 'T', 0x54, 0x0054, LATIN CAPITAL LETTER T -> BYTE('“')
0x55,        // 'U', 0x55, 0x0055, LATIN CAPITAL LETTER U
0x56,        // 'V', 0x56, 0x0056, LATIN CAPITAL LETTER V
0x57,        // 'W', 0x57, 0x0057, LATIN CAPITAL LETTER W
     0xD5,   // 'X', 0x58, 0x0058, LATIN CAPITAL LETTER X -> BYTE('’')
     0xD3,   // 'Y', 0x59, 0x0059, LATIN CAPITAL LETTER Y -> BYTE('”')
0x5A,        // 'Z', 0x5A, 0x005A, LATIN CAPITAL LETTER Z

0x5B,        // '[', 0x5B, 0x005B, LEFT SQUARE BRACKET
0x5C,        // '\', 0x5C, 0x005C, REVERSE SOLIDUS
0x5D,        // ']', 0x5D, 0x005D, RIGHT SQUARE BRACKET
0x5E,        // '^', 0x5E, 0x005E, CIRCUMFLEX ACCENT
0x5F,        // '_', 0x5F, 0x005F, LOW LINE
0x60,        // '`', 0x60, 0x0060, GRAVE ACCENT

     0xE0,   // 'a', 0x61, 0x0061, LATIN SMALL LETTER A -> BYTE('‡')
     0xFC,   // 'b', 0x62, 0x0062, LATIN SMALL LETTER B -> BYTE('‹')
     0xF1,   // 'c', 0x63, 0x0063, LATIN SMALL LETTER C -> BYTE('Ò')
0x64,        // 'd', 0x64, 0x0064, LATIN SMALL LETTER D
     0xE5,   // 'e', 0x65, 0x0065, LATIN SMALL LETTER E -> BYTE('Â')
0x66,        // 'f', 0x66, 0x0066, LATIN SMALL LETTER F
     0xE4,   // 'g', 0x67, 0x0067, LATIN SMALL LETTER G -> BYTE('‰')
0x68,        // 'h', 0x68, 0x0068, LATIN SMALL LETTER H
0x69,        // 'i', 0x69, 0x0069, LATIN SMALL LETTER I
0x6A,        // 'j', 0x6A, 0x006A, LATIN SMALL LETTER J
     0xEA,   // 'k', 0x6B, 0x006B, LATIN SMALL LETTER K -> BYTE('Í')
0x6C,        // 'l', 0x6C, 0x006C, LATIN SMALL LETTER L
     0xF2,   // 'm', 0x6D, 0x006D, LATIN SMALL LETTER M -> BYTE('Ú')
     0xEF,   // 'n', 0x6E, 0x006E, LATIN SMALL LETTER N -> BYTE('Ô')
     0xEE,   // 'o', 0x6F, 0x006F, LATIN SMALL LETTER O -> BYTE('Ó')
     0xF0,   // 'p', 0x70, 0x0070, LATIN SMALL LETTER P -> BYTE('')
0x71,        // 'q', 0x71, 0x0071, LATIN SMALL LETTER Q
     0xE3,   // 'r', 0x72, 0x0072, LATIN SMALL LETTER R -> BYTE('„')
0x73,        // 's', 0x73, 0x0073, LATIN SMALL LETTER S
0x74,        // 't', 0x74, 0x0074, LATIN SMALL LETTER T
     0xE8,   // 'u', 0x75, 0x0075, LATIN SMALL LETTER U -> BYTE('Ë')
0x76,        // 'v', 0x76, 0x0076, LATIN SMALL LETTER V
0x77,        // 'w', 0x77, 0x0077, LATIN SMALL LETTER W
     0xF5,   // 'x', 0x78, 0x0078, LATIN SMALL LETTER X -> BYTE('ı')
     0xF3,   // 'y', 0x79, 0x0079, LATIN SMALL LETTER Y -> BYTE('Û')
0x7A,        // 'z', 0x7A, 0x007A, LATIN SMALL LETTER Z

0x7B,        // '{', 0x7B, 0x007B, LEFT CURLY BRACKET
0x7C,        // '|', 0x7C, 0x007C, VERTICAL LINE
0x7D,        // '}', 0x7D, 0x007D, RIGHT CURLY BRACKET
0x7E,        // '~', 0x7E, 0x007E, TILDE
0x7F,        //      0x7F, 0x007F, DELETE
0x80,        // 'Ä', 0x80, 0x0402, CYRILLIC CAPITAL LETTER DJE
0x81,        // 'Å', 0x81, 0x0403, CYRILLIC CAPITAL LETTER GJE
0x82,        // 'Ç', 0x82, 0x201A, SINGLE LOW-9 QUOTATION MARK
0x83,        // 'É', 0x83, 0x0453, CYRILLIC SMALL LETTER GJE
0x84,        // 'Ñ', 0x84, 0x201E, DOUBLE LOW-9 QUOTATION MARK
0x85,        // 'Ö', 0x85, 0x2026, HORIZONTAL ELLIPSIS
0x86,        // 'Ü', 0x86, 0x2020, DAGGER
0x87,        // 'á', 0x87, 0x2021, DOUBLE DAGGER
0x88,        //      0x88, 0x20AC, EURO SIGN
0x89,        // 'â', 0x89, 0x2030, PER MILLE SIGN
0x8A,        // 'ä', 0x8A, 0x0409, CYRILLIC CAPITAL LETTER LJE
0x8B,        // 'ã', 0x8B, 0x2039, SINGLE LEFT-POINTING ANGLE QUOTATION MARK
0x8C,        // 'å', 0x8C, 0x040A, CYRILLIC CAPITAL LETTER NJE
0x8D,        // 'ç', 0x8D, 0x040C, CYRILLIC CAPITAL LETTER KJE
0x8E,        // 'é', 0x8E, 0x040B, CYRILLIC CAPITAL LETTER TSHE
0x8F,        // 'è', 0x8F, 0x040F, CYRILLIC CAPITAL LETTER DZHE
0x90,        // 'ê', 0x90, 0x0452, CYRILLIC SMALL LETTER DJE
0x91,        // 'ë', 0x91, 0x2018, LEFT SINGLE QUOTATION MARK
0x92,        // 'í', 0x92, 0x2019, RIGHT SINGLE QUOTATION MARK
0x93,        // 'ì', 0x93, 0x201C, LEFT DOUBLE QUOTATION MARK
0x94,        // 'î', 0x94, 0x201D, RIGHT DOUBLE QUOTATION MARK
0x95,        // 'ï', 0x95, 0x2022, BULLET
0x96,        // 'ñ', 0x96, 0x2013, EN DASH
0x97,        // 'ó', 0x97, 0x2014, EM DASH
0x98,        //      0x98, 0xFFFF, UNDEFINED
0x99,        // 'ô', 0x99, 0x2122, TRADE MARK SIGN
0x9A,        // 'ö', 0x9A, 0x0459, CYRILLIC SMALL LETTER LJE
0x9B,        // 'õ', 0x9B, 0x203A, SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
0x9C,        // 'ú', 0x9C, 0x045A, CYRILLIC SMALL LETTER NJE
0x9D,        // 'ù', 0x9D, 0x045C, CYRILLIC SMALL LETTER KJE
0x9E,        // 'û', 0x9E, 0x045B, CYRILLIC SMALL LETTER TSHE
0x9F,        // 'ü', 0x9F, 0x045F, CYRILLIC SMALL LETTER DZHE
0xA0,        //      0xA0, 0x00A0, NO-BREAK SPACE
0xA1,        // '°', 0xA1, 0x040E, CYRILLIC CAPITAL LETTER SHORT U
0xA2,        // '¢', 0xA2, 0x045E, CYRILLIC SMALL LETTER SHORT U
0xA3,        // '£', 0xA3, 0x0408, CYRILLIC CAPITAL LETTER JE
0xA4,        // '§', 0xA4, 0x00A4, CURRENCY SIGN
0xA5,        // '•', 0xA5, 0x0490, CYRILLIC CAPITAL LETTER GHE WITH UPTURN
0xA6,        // '¶', 0xA6, 0x00A6, BROKEN BAR
0xA7,        // 'ß', 0xA7, 0x00A7, SECTION SIGN

0xA8,        // '®', 0xA8, 0x0401, CYRILLIC CAPITAL LETTER IO

0xA9,        // '©', 0xA9, 0x00A9, COPYRIGHT SIGN
0xAA,        // '™', 0xAA, 0x0404, CYRILLIC CAPITAL LETTER UKRAINIAN IE
0xAB,        // '´', 0xAB, 0x00AB, LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
0xAC,        // '¨', 0xAC, 0x00AC, NOT SIGN
0xAD,        // '≠', 0xAD, 0x00AD, SOFT HYPHEN
0xAE,        // 'Æ', 0xAE, 0x00AE, REGISTERED SIGN
0xAF,        // 'Ø', 0xAF, 0x0407, CYRILLIC CAPITAL LETTER YI
0xB0,        // '∞', 0xB0, 0x00B0, DEGREE SIGN
0xB1,        // '±', 0xB1, 0x00B1, PLUS-MINUS SIGN
0xB2,        // '≤', 0xB2, 0x0406, CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I
0xB3,        // '≥', 0xB3, 0x0456, CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I
0xB4,        // '¥', 0xB4, 0x0491, CYRILLIC SMALL LETTER GHE WITH UPTURN
0xB5,        // 'µ', 0xB5, 0x00B5, MICRO SIGN
0xB6,        // '∂', 0xB6, 0x00B6, PILCROW SIGN
0xB7,        // '∑', 0xB7, 0x00B7, MIDDLE DOT

0xB8,        // '∏', 0xB8, 0x0451, CYRILLIC SMALL LETTER IO

0xB9,        // 'π', 0xB9, 0x2116, NUMERO SIGN
0xBA,        // '∫', 0xBA, 0x0454, CYRILLIC SMALL LETTER UKRAINIAN IE
0xBB,        // 'ª', 0xBB, 0x00BB, RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
0xBC,        // 'º', 0xBC, 0x0458, CYRILLIC SMALL LETTER JE
0xBD,        // 'Ω', 0xBD, 0x0405, CYRILLIC CAPITAL LETTER DZE
0xBE,        // 'æ', 0xBE, 0x0455, CYRILLIC SMALL LETTER DZE
0xBF,        // 'ø', 0xBF, 0x0457, CYRILLIC SMALL LETTER YI

0xC0,        // '¿', 0xC0, 0x0410, CYRILLIC CAPITAL LETTER A
0xC1,        // '¡', 0xC1, 0x0411, CYRILLIC CAPITAL LETTER BE
0xC2,        // '¬', 0xC2, 0x0412, CYRILLIC CAPITAL LETTER VE
0xC3,        // '√', 0xC3, 0x0413, CYRILLIC CAPITAL LETTER GHE
0xC4,        // 'ƒ', 0xC4, 0x0414, CYRILLIC CAPITAL LETTER DE
0xC5,        // '≈', 0xC5, 0x0415, CYRILLIC CAPITAL LETTER IE
0xC6,        // '∆', 0xC6, 0x0416, CYRILLIC CAPITAL LETTER ZHE
0xC7,        // '«', 0xC7, 0x0417, CYRILLIC CAPITAL LETTER ZE
0xC8,        // '»', 0xC8, 0x0418, CYRILLIC CAPITAL LETTER I
0xC9,        // '…', 0xC9, 0x0419, CYRILLIC CAPITAL LETTER SHORT I
0xCA,        // ' ', 0xCA, 0x041A, CYRILLIC CAPITAL LETTER KA
0xCB,        // 'À', 0xCB, 0x041B, CYRILLIC CAPITAL LETTER EL
0xCC,        // 'Ã', 0xCC, 0x041C, CYRILLIC CAPITAL LETTER EM
0xCD,        // 'Õ', 0xCD, 0x041D, CYRILLIC CAPITAL LETTER EN
0xCE,        // 'Œ', 0xCE, 0x041E, CYRILLIC CAPITAL LETTER O
0xCF,        // 'œ', 0xCF, 0x041F, CYRILLIC CAPITAL LETTER PE
0xD0,        // '–', 0xD0, 0x0420, CYRILLIC CAPITAL LETTER ER
0xD1,        // '—', 0xD1, 0x0421, CYRILLIC CAPITAL LETTER ES
0xD2,        // '“', 0xD2, 0x0422, CYRILLIC CAPITAL LETTER TE
0xD3,        // '”', 0xD3, 0x0423, CYRILLIC CAPITAL LETTER U
0xD4,        // '‘', 0xD4, 0x0424, CYRILLIC CAPITAL LETTER EF
0xD5,        // '’', 0xD5, 0x0425, CYRILLIC CAPITAL LETTER HA
0xD6,        // '÷', 0xD6, 0x0426, CYRILLIC CAPITAL LETTER TSE
0xD7,        // '◊', 0xD7, 0x0427, CYRILLIC CAPITAL LETTER CHE
0xD8,        // 'ÿ', 0xD8, 0x0428, CYRILLIC CAPITAL LETTER SHA
0xD9,        // 'Ÿ', 0xD9, 0x0429, CYRILLIC CAPITAL LETTER SHCHA
0xDA,        // '⁄', 0xDA, 0x042A, CYRILLIC CAPITAL LETTER HARD SIGN
0xDB,        // '€', 0xDB, 0x042B, CYRILLIC CAPITAL LETTER YERU
0xDC,        // '‹', 0xDC, 0x042C, CYRILLIC CAPITAL LETTER SOFT SIGN
0xDD,        // '›', 0xDD, 0x042D, CYRILLIC CAPITAL LETTER E
0xDE,        // 'ﬁ', 0xDE, 0x042E, CYRILLIC CAPITAL LETTER YU
0xDF,        // 'ﬂ', 0xDF, 0x042F, CYRILLIC CAPITAL LETTER YA

0xE0,        // '‡', 0xE0, 0x0430, CYRILLIC SMALL LETTER A
0xE1,        // '·', 0xE1, 0x0431, CYRILLIC SMALL LETTER BE
0xE2,        // '‚', 0xE2, 0x0432, CYRILLIC SMALL LETTER VE
0xE3,        // '„', 0xE3, 0x0433, CYRILLIC SMALL LETTER GHE
0xE4,        // '‰', 0xE4, 0x0434, CYRILLIC SMALL LETTER DE
0xE5,        // 'Â', 0xE5, 0x0435, CYRILLIC SMALL LETTER IE
0xE6,        // 'Ê', 0xE6, 0x0436, CYRILLIC SMALL LETTER ZHE
0xE7,        // 'Á', 0xE7, 0x0437, CYRILLIC SMALL LETTER ZE
0xE8,        // 'Ë', 0xE8, 0x0438, CYRILLIC SMALL LETTER I
0xE9,        // 'È', 0xE9, 0x0439, CYRILLIC SMALL LETTER SHORT I
0xEA,        // 'Í', 0xEA, 0x043A, CYRILLIC SMALL LETTER KA
0xEB,        // 'Î', 0xEB, 0x043B, CYRILLIC SMALL LETTER EL
0xEC,        // 'Ï', 0xEC, 0x043C, CYRILLIC SMALL LETTER EM
0xED,        // 'Ì', 0xED, 0x043D, CYRILLIC SMALL LETTER EN
0xEE,        // 'Ó', 0xEE, 0x043E, CYRILLIC SMALL LETTER O
0xEF,        // 'Ô', 0xEF, 0x043F, CYRILLIC SMALL LETTER PE
0xF0,        // '', 0xF0, 0x0440, CYRILLIC SMALL LETTER ER
0xF1,        // 'Ò', 0xF1, 0x0441, CYRILLIC SMALL LETTER ES
0xF2,        // 'Ú', 0xF2, 0x0442, CYRILLIC SMALL LETTER TE
0xF3,        // 'Û', 0xF3, 0x0443, CYRILLIC SMALL LETTER U
0xF4,        // 'Ù', 0xF4, 0x0444, CYRILLIC SMALL LETTER EF
0xF5,        // 'ı', 0xF5, 0x0445, CYRILLIC SMALL LETTER HA
0xF6,        // 'ˆ', 0xF6, 0x0446, CYRILLIC SMALL LETTER TSE
0xF7,        // '˜', 0xF7, 0x0447, CYRILLIC SMALL LETTER CHE
0xF8,        // '¯', 0xF8, 0x0448, CYRILLIC SMALL LETTER SHA
0xF9,        // '˘', 0xF9, 0x0449, CYRILLIC SMALL LETTER SHCHA
0xFA,        // '˙', 0xFA, 0x044A, CYRILLIC SMALL LETTER HARD SIGN
0xFB,        // '˚', 0xFB, 0x044B, CYRILLIC SMALL LETTER YERU
0xFC,        // '¸', 0xFC, 0x044C, CYRILLIC SMALL LETTER SOFT SIGN
0xFD,        // '˝', 0xFD, 0x044D, CYRILLIC SMALL LETTER E
0xFE,        // '˛', 0xFE, 0x044E, CYRILLIC SMALL LETTER YU
0xFF         // 'ˇ', 0xFF, 0x044F  CYRILLIC SMALL LETTER YA
};

#include <string>
#define _STL std
#define LEXHIER_UNKNOWN -1

void PrepareWord( char* sz, int wLen, bool bForceLat ) 
{
  if ( wLen > MAXWORD ) wLen = MAXWORD;
  unsigned len;
  for ( len = 0; sz[len] && (len < (unsigned)wLen); len++ );

  LPCSTR s = sz; 
  BYTE bConvFlag = 0;
  for ( len = 0; s[len] && len<(unsigned)wLen; len++ ) 
  {
    BYTE c = BYTE(s[len]);
    {
        if( (g_UniqueTab[c]&CRUS) != 0 )
            bConvFlag |= CRUS;
        if( (g_UniqueTab[c]&CLAT) != 0 )
            bConvFlag |= CLAT;
    }
  }
  if ( len == 0 ) return;
  
  {
    /* Current word is not punctuation, nor a number,
     * so, proceed Rus <-> Lat symbol conversion */
    if ( bForceLat && (bConvFlag != CRUS) )
        bConvFlag = CLAT; // Force 2Lat conversion if (!CRus&!CLat) or (CRus&CLat)

    LPCBYTE conv_table = NULL;
    if ( bConvFlag == CLAT )
        conv_table = g_Rus2Lat;
    else if ( bConvFlag == CRUS )
        conv_table = g_Lat2Rus;

    if (conv_table) {
        for ( unsigned i = 0; i < len; i++ ) {
            char c = sz[i] = conv_table[BYTE(sz[i])];
        }
    }

  }
}
